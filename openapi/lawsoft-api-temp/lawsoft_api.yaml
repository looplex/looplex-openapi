openapi: 3.0.1
info:
  title: Lawsoft API (Production - Internal)
  description: "API de produção da Lawsoft. "
  version: "1.0"
servers:
  - url: https://lawsoft-apim.azure-api.net/lawsoft-api-internal
paths:
  /api/busca:
    get:
      tags:
        - Busca
      summary: /api/busca
      description: Busca os clientes e casos de acordo com o termo de pesquisa
      operationId: busca-os-clientes-e-casos-de-acordo-com-o-termo-de-pesquisa
      parameters:
        - name: termo
          in: query
          description: ""
          required: true
          schema:
            type: string
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
        - name: apenasMeusCasos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Busca os clientes e casos de acordo com o termo de pesquisa.
          content:
            application/json:
              example:
                IdsClientesComCasos:
                  "100":
                    - 0
                  "200":
                    - 0
                TermoBuscado: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/busca/mobilenovo:
    get:
      tags:
        - Busca
      summary: /api/busca/mobilenovo
      description: Busca os clientes e casos de acordo com o termo de pesquisa para novo mobile.
      operationId: busca-os-clientes-e-casos-de-acordo-com-o-termo-de-pesquisa-novo-mobile
      parameters:
        - name: termo
          in: query
          description: ""
          required: true
          schema:
            type: string
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
        - name: apenasMeusCasos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Busca os clientes e casos de acordo com o termo de pesquisa.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOBuscaMobileNovo"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  
  /api/casos/id/num:
    get:
      tags:
        - Casos
      summary: /api/casos/id/num
      description: "Retorna um array de casos por identificador, numero interno ou numero externo."
      operationId: obtem-caso-por-identificador-numero-interno-ou-numero-externo
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Retorna um array de casos por identificador, numero interno ou numero externo."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoCompleto"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/casos/porIds/{ids}":
    get:
      tags:
        - Casos
      summary: "/api/casos/porIds/{ids}"
      description: Retorna um array de casos pelos identificadores.
      operationId: obtem-casos-pelo-identificador
      parameters:
        - name: ids
          in: path
          description: "Exemplo: [1, 10]"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retorna um array de casos pelos identificadores.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoSimples"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/casos/num:
    get:
      tags:
        - Casos
      summary: /api/casos/num
      description: "Retorna um array com os casos obtidos pelo identificador, numero interno ou numero externo."
      operationId: obtem-casos-pelo-identificador-numero-interno-ou-numero-externo
      parameters:
        - name: IdProcesso
          in: query
          description: "Exemplo: [1, 10]"
          schema:
            type: string
        - name: NumeroInterno
          in: query
          description: "Exemplo: [2, 20]"
          schema:
            type: string
        - name: NumeroExterno
          in: query
          description: 'Exemplo: ["1.10.100", "2.20.200"].'
          schema:
            type: string
      responses:
        "200":
          description: "Retorna um array com os casos obtidos pelo identificador, numero interno ou numero externo."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoSimples"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/casos/busca:
    get:
      tags:
        - Casos
      summary: /api/casos/busca
      description: Retorna um array com os casos encontrados de acordo com o filtro informado.
      operationId: busca-casos
      parameters:
        - name: termo
          in: query
          required: true
          schema:
            type: string
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Retorna um array com os casos encontrados de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoSimples"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  
  "/api/funcionarios/{IdsMin},{IdsMax}/categorias":
    get:
      tags:
        - Categoria
      summary: "/api/funcionarios/{IdsMin},{IdsMax}/categorias"
      description: Retorna um array com as categorias de funcionário de acordo com o filtro informado.
      operationId: api-funcionarios-idsmin-idsmax-categorias
      parameters:
        - name: IdsMin
          in: path
          required: true
          schema:
            type: integer
        - name: IdsMax
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna um array com as categorias de funcionário de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCategoriaFuncionario"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  
  "/api/clientes/porDomain/{domain}":
    get:
      tags:
        - Cliente
      summary: "/api/clientes/porDomain/{domain}"
      description: Retorna um array com todos os clientes de acordo com o escritório informado.
      operationId: api-clientes-pordomain-domain
      parameters:
        - name: domain
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retorna um array com todos os clientes de acordo com o escritório informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCliente"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/clientes/ficha:
    get:
      tags:
        - Cliente
      summary: /api/clientes/ficha
      description: Obtém a ficha do cliente de acordo com o identificador informado.
      operationId: api-clientes-ficha
      parameters:
        - name: idCliente
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém a ficha do cliente de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCliente"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/clientes/ficha_mobile:
    get:
      tags:
        - Cliente
      summary: /api/clientes/ficha_mobile
      description: Obtém a ficha do cliente para o mobile de acordo com o identificador informado.
      operationId: api-clientes-ficha-mobile
      parameters:
        - name: idCliente
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém a ficha do cliente para o mobile de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOClienteMobile"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  
  /api/clientes/mobile:
    get:
      tags:
        - Cliente
      summary: /api/clientes/mobile
      description: Obtém um array com os clientes para o mobile de acordo com o filtro informado.
      operationId: api-clientes-mobile
      parameters:
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
        - name: apenasMeusCasos
          in: query
          description: "Default: false"
          schema:
            type: string
        - name: clientesSemCasos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com os clientes para o mobile de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOClienteMobile"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/clientes/{id}":
    get:
      tags:
        - Cliente
      summary: "/api/clientes/{id}"
      description: Obtém o cliente de acordo com o identificador informado.
      operationId: api-clientes-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém o cliente de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCliente"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/clientes/porIds/{idsClientes}":
    get:
      tags:
        - Cliente
      summary: "/api/clientes/porIds/{idsClientes}"
      description: Obtém um array com os clientes de acordo com os identificadores informados.
      operationId: api-clientes-porids-idsclientes
      parameters:
        - name: idsClientes
          in: path
          description: "Exemplo: [1, 15]"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com os clientes de acordo com os identificadores informados.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCliente"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/ContaDeAcesso/ObtemContaDeAcesso:
    get:
      tags:
        - ContaDeAcesso
      summary: /api/ContaDeAcesso/ObtemContaDeAcesso
      description: Obtém a conta de acesso de acordo com o usuário e escritório.
      operationId: api-contadeacesso-obtemcontadeacesso
      parameters:
        - name: nomeUsuario
          in: query
          required: true
          schema:
            type: string
        - name: domain
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Obtém a conta de acesso de acordo com o usuário e escritório.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOContaDeAcesso"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/contatos/{id}":
    get:
      tags:
        - Contato
      summary: "/api/contatos/{id}"
      description: Obtém o contato de acordo com o identificador informado.
      operationId: api-contatos-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém o contato de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOContato"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/contatos:
    get:
      tags:
        - Contato
      summary: /api/contatos
      description: Obtém um array com os contatos.
      operationId: api-contatos
      responses:
        "200":
          description: Obtém um array com os contatos.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOContato"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/clientes/{idCliente}/contatos":
    get:
      tags:
        - Contato
      summary: "/api/clientes/{idCliente}/contatos"
      description: Obtém um array com os contatos do cliente de acordo com o identificador do cliente informado.
      operationId: api-clientes-idcliente-contatos
      parameters:
        - name: idCliente
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os contatos do cliente de acordo com o identificador do cliente informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOContato"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/contatos/solicitantes:
    get:
      tags:
        - Contato
      summary: /api/contatos/solicitantes
      description: Obtém um array com os solicitantes do cliente de acordo com o identificador do cliente informado.
      operationId: api-contatos-solicitantes
      parameters:
        - name: codCliente
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os solicitantes do cliente de acordo com o identificador do cliente informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOSolicitante"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/casos/{idCaso}/Decisoes":
    get:
      tags:
        - Decisões
      summary: "/api/casos/{idCaso}/Decisoes"
      description: Obtém um array com as decisões do caso informado.
      operationId: api-casos-idcaso-decisoes
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as decisões do caso informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoDecisao"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/casos/num/decisoes:
    get:
      tags:
        - Decisões
      summary: /api/casos/num/decisoes
      description: "Obtém um array com as decisões do caso pelo numero interno, numero externo ou pelo identificador do caso."
      operationId: api-casos-num-decisoes
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com as decisões do caso pelo numero interno, numero externo ou pelo identificador do caso."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoDecisao"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/despesas/totaldespesasmes:
    get:
      tags:
        - Despesas
      summary: /api/despesas/totaldespesasmes
      description: Obtém o total de despesas por tipo no mês.
      operationId: api-despesas-totaldespesasmes
      responses:
        "200":
          description: Obtém o total de despesas por tipo no mês.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOTotalGastoDespesas"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/despesas/proximoslancamentos:
    get:
      tags:
        - Despesas
      summary: /api/despesas/proximoslancamentos
      description: Obtém um array com os próximos lançamentos de despesa por profissional.
      operationId: api-despesas-proximoslancamentos
      parameters:
        - name: dataDespesaString
          in: query
          description: "Exemplo: 2021-08-25T12:00:00.000"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com os próximos lançamentos de despesa por profissional.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTODespesa"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/despesas/adiantamentosliberados:
    get:
      tags:
        - Despesas
      summary: /api/despesas/adiantamentosliberados
      description: Obtém um array com os adiantamentos em aberto.
      operationId: api-despesas-adiantamentosliberados
      responses:
        "200":
          description: Obtém um array com os adiantamentos em aberto.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOLiberacao"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/despesas/adiantamentos/categorias:
    get:
      tags:
        - Despesas
      summary: /api/despesas/adiantamentos/categorias
      description: Obtém um array com as categorias de adiantamento.
      operationId: api-despesas-adiantamentos-categorias
      responses:
        "200":
          description: Obtém um array com as categorias de adiantamento.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCategoriaDespesa"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/despesas/adiantamentos/fornecedores:
    get:
      tags:
        - Despesas
      summary: /api/despesas/adiantamentos/fornecedores
      description: Obtém um array com os fornecedores de adiantamento.
      operationId: api-despesas-adiantamentos-fornecedores
      responses:
        "200":
          description: Obtém um array com os fornecedores de adiantamento.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFornecedor"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/despesas/reembolsos/categorias:
    get:
      tags:
        - Despesas
      summary: /api/despesas/reembolsos/categorias
      description: Obtém um array com as categorias de reembolso.
      operationId: api-despesas-reembolsos-categorias
      responses:
        "200":
          description: Obtém um array com as categorias de reembolso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCategoriaDespesa"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/despesas/reembolsos/fornecedores:
    get:
      tags:
        - Despesas
      summary: /api/despesas/reembolsos/fornecedores
      description: Obtém um array com os fornecedores de reembolso.
      operationId: api-despesas-reembolsos-fornecedores
      responses:
        "200":
          description: Obtém um array com os fornecedores de reembolso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFornecedor"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/despesas/voucher:
    get:
      tags:
        - Despesas
      summary: /api/despesas/voucher
      description: Obtém um array com os vouchers permitidos do funcionário.
      operationId: api-despesas-voucher
      responses:
        "200":
          description: Obtém um array com os vouchers permitidos do funcionário.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOVoucher"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/despesas/voucher/{idVoucher}/categorias":
    get:
      tags:
        - Despesas
      summary: "/api/despesas/voucher/{idVoucher}/categorias"
      description: Obtém um array com as categorias do voucher de acordo com o identificador de voucher informado.
      operationId: api-despesas-voucher-idvoucher-categorias
      parameters:
        - name: idVoucher
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as categorias do voucher de acordo com o identificador de voucher informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCategoriaDespesa"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/despesas/voucher/{idVoucher}/fornecedores":
    get:
      tags:
        - Despesas
      summary: "/api/despesas/voucher/{idVoucher}/fornecedores"
      description: Obtém um array com os fornecedores do voucher de acordo com  identificador do voucher informado.
      operationId: api-despesas-voucher-idvoucher-fornecedores
      parameters:
        - name: idVoucher
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os fornecedores do voucher de acordo com  identificador do voucher informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFornecedor"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/despesas/obtem:
    get:
      tags:
        - Despesas
      summary: /api/despesas/obtem
      description: Obtém um array com as despesas em aberto de acordo com o filtro informado.
      operationId: api-despesas
      parameters:
        - name: tipoDePagamento
          in: query
          description: "1: Fundo fixo, 2: Voucher, 3: Reembolso, 4: Contas a pagar, 5: Estorno"
          schema:
            type: integer
        - name: ano
          in: query
          required: true
          schema:
            type: integer
        - name: mes
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as despesas em aberto de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTODespesa"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/despesas/valorKMRodado:
    get:
      tags:
        - Despesas
      summary: /api/despesas/valorKMRodado
      description: Obtém o valor do KM rodado.
      operationId: api-despesas-valorkmrodado
      responses:
        "200":
          description: Obtém o valor do KM rodado.
          content:
            application/json:
              example: 1
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/despesas/obtem/{id}":
    get:
      tags:
        - Despesas
      summary: "/api/despesas/obtem/{id}"
      description: Obtém a despesa de acordo com o identificador da despesa informado.
      operationId: api-despesas-obtem-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém a despesa de acordo com o identificador da despesa informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTODespesa"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/despesas/inclui:
    post:
      tags:
        - Despesas
      summary: /api/despesas/inclui
      description: Inclui a despesa e retorna a despesa que foi incluída.
      operationId: api-despesas-inclui
      parameters:
        - name: selecionaAprovador
          in: query
          description: "Default: false"
          schema:
            type: boolean
      requestBody:
        description: A despesa a incluir
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTODespesa"
      responses:
        "200":
          description: Inclui a despesa e retorna a despesa que foi incluída.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTODespesa"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/despesas/atualiza:
    put:
      tags:
        - Despesas
      summary: /api/despesas/atualiza
      description: Atualiza a despesa e retorna a despesa que foi atualizada.
      operationId: api-despesas-atualiza
      parameters:
        - name: selecionaAprovador
          in: query
          description: "Default: false"
          schema:
            type: boolean
      requestBody:
        description: A despesa a atualizar.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTODespesa"
      responses:
        "200":
          description: Atualiza a despesa e retorna a despesa que foi atualizada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTODespesa"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/despesas/exclui/{id}":
    delete:
      tags:
        - Despesas
      summary: "/api/despesas/exclui/{id}"
      description: Exclui a despesa.
      operationId: api-despesas-exclui-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: A despesa foi excluída.
          content:
            application/json: {}
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/funcionarios/porIds/{ids}":
    get:
      tags:
        - Funcionários
      summary: "/api/funcionarios/porIds/{ids}"
      description: Obtém um array com os funcionários de acordo com os identificadores informados.
      operationId: api-funcionarios-ids
      parameters:
        - name: ids
          in: path
          description: "Exemplo: [1, 10]"
          required: true
          schema:
            type: array<integer>
      responses:
        "200":
          description: Obtém um array com os funcionários de acordo com os identificadores informados.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFuncionario"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/funcionarios/porId/{id}":
    get:
      tags:
        - Funcionários
      summary: "/api/funcionarios/porId/{id}"
      description: Obtém o funcionário de acordo com o identificador informado.
      operationId: api-funcionarios-porid-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém o funcionário de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFuncionario"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/funcionarios:
    get:
      tags:
        - Funcionários
      summary: /api/funcionarios
      description: Obtém um array com os funcionários de acordo com o filtro informado.
      operationId: api-funcionarios
      parameters:
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com os funcionários de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFuncionario"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/areas/{idArea}/funcionarios":
    get:
      tags:
        - Funcionários
      summary: "/api/areas/{idArea}/funcionarios"
      description: Obtém um array com os funcionários de acordo com a área e o filtro informado.
      operationId: api-areas-idarea-funcionarios
      parameters:
        - name: idArea
          in: path
          required: true
          schema:
            type: integer
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com os funcionários de acordo com a área e o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFuncionario"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/escritorios/{IdEscritorio}/funcionarios":
    get:
      tags:
        - Funcionários
      summary: "/api/escritorios/{IdEscritorio}/funcionarios"
      description: Obtém um array com os funcionários do escritório.
      operationId: api-escritorios-idescritorio-funcionarios
      parameters:
        - name: IdEscritorio
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os funcionários do escritório.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFuncionarioBase"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/escritorios/funcionarios:
    get:
      tags:
        - Funcionários
      summary: /api/escritorios/funcionarios
      description: Obtém um array com os funcionários ativos do escritório.
      operationId: api-escritorios-funcionarios
      responses:
        "200":
          description: Obtém um array com os funcionários ativos do escritório.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFuncionarioBase"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/casos/{idCaso}/Garantias":
    get:
      tags:
        - Garantia
      summary: "/api/casos/{idCaso}/Garantias"
      description: Obtém um array com as garantias do caso encontrado pelo identificador.
      operationId: api-casos-idcaso-garantias
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as garantias do caso encontrado pelo identificador.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoGarantia"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/casos/num/garantias:
    get:
      tags:
        - Garantia
      summary: /api/casos/num/garantias
      description: "Obtém um array com as garantias do caso encontrado pelo numero interno, numero externo ou identificador."
      operationId: api-casos-num-garantias
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com as garantias do caso encontrado pelo numero interno, numero externo ou identificador."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoGarantia"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/escritorios/{idEscritorio}/tabelaspreco":
    get:
      tags:
        - TabelasPreço
      summary: "/api/escritorios/{idEscritorio}/tabelaspreco"
      description: Obtém um array com as tabelas de preço.
      operationId: api-escritorios-idescritorio-tabelaspreco
      parameters:
        - name: idEscritorio
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as tabelas de preço.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOTabelaPreco"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/escritorios/{idEscritorio}/tabelasprecocategoria":
    get:
      tags:
        - TabelasPreçoCategoria
      summary: "/api/escritorios/{idEscritorio}/tabelasprecocategoria"
      description: Obtém um array com as tabelas de categoria de preço.
      operationId: api-escritorios-idescritorio-tabelasprecocategoria
      parameters:
        - name: idEscritorio
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as tabelas de categoria de preço.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOTabelaPrecoCategoria"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  
  /api/hierarquia/GrupoForo:
    get:
      tags:
        - Hierarquia
      summary: /api/hierarquia/GrupoForo
      description: "Obtém um array com os grupos foro por ramo de justiça, estado e grupo de família."
      operationId: api-hierarquia-grupoforo
      parameters:
        - name: nrRamoJudicial
          in: query
          schema:
            type: integer
        - name: dsUF
          in: query
          schema:
            type: string
        - name: nrGrupoFamilia
          in: query
          schema:
            type: integer
        - name: cdRegiao
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com os grupos foro por ramo de justiça, estado e grupo de família."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOGrupoForo"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/hierarquia/GrupoForoSuperiores:
    get:
      tags:
        - Hierarquia
      summary: /api/hierarquia/GrupoForoSuperiores
      description: Obtém um array com os grupos foro superiores por ramo judicial.
      operationId: api-hierarquia-grupoforosuperiores
      parameters:
        - name: nrRamoJudicial
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os grupos foro superiores por ramo judicial.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOGrupoForo"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/hierarquia/GrupoForoDetalhado:
    get:
      tags:
        - Hierarquia
      summary: /api/hierarquia/GrupoForoDetalhado
      description: Obtém o grupo foro de acordo com o filtro informado.
      operationId: api-hierarquia-grupoforodetalhado
      parameters:
        - name: cdGrupoForo
          in: query
          required: true
          schema:
            type: integer
        - name: cdUF
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Obtém o grupo foro de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOGrupoForo"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/hierarquia/UFPorRegiao:
    get:
      tags:
        - Hierarquia
      summary: /api/hierarquia/UFPorRegiao
      description: Obtém um array com as UFs por região e ramo judicial.
      operationId: api-hierarquia-ufporregiao
      parameters:
        - name: regiao
          in: query
          required: true
          schema:
            type: integer
        - name: nrRamoJudicial
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as UFs por região e ramo judicial.
          content:
            application/json:
              example:
                - AC
                - AL
                - AM
                - AP
                - BA
                - CE
                - DF
                - ES
                - GO
                - MA
                - MG
                - MS
                - MT
                - PA
                - PB
                - PE
                - PI
                - PR
                - RJ
                - RN
                - RO
                - RR
                - RS
                - SC
                - SE
                - SP
                - TO
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/hierarquia/fases:
    get:
      tags:
        - Hierarquia
      summary: /api/hierarquia/fases
      description: Obtém um array com as fases de processo por ramo judicial.
      operationId: api-hierarquia-fases
      parameters:
        - name: nrRamoJudicial
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as fases de processo por ramo judicial.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFaseProcesso"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/casos/{idCaso}/natureza":
    get:
      tags:
        - Natureza
      summary: "/api/casos/{idCaso}/natureza"
      description: Obtém um array com as naturezas do caso.
      operationId: api-casos-idcaso-natureza
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as naturezas do caso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTONatureza"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/casos/num/natureza:
    get:
      tags:
        - Natureza
      summary: /api/casos/num/natureza
      description: "Obtém um array com as naturezas do caso por identificador, numero interno ou numero externo."
      operationId: api-casos-num-natureza
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com as naturezas do caso por identificador, numero interno ou numero externo."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTONatureza"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/casos/{idCaso}/Partes":
    get:
      tags:
        - Partes
      summary: "/api/casos/{idCaso}/Partes"
      description: Obtém um array com as partes do caso.
      operationId: api-casos-idcaso-partes
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as partes do caso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoParte"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/Partes:
    get:
      tags:
        - Partes
      summary: /api/Partes
      description: Obtém um array com as partes do LO de acordo com o nome informado.
      operationId: api-partes
      parameters:
        - name: nome
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com as partes do LO de acordo com o nome informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOParte"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/casos/num/partes:
    get:
      tags:
        - Partes
      summary: /api/casos/num/partes
      description: "Obtém um array com as partes do caso pelo identificador do caso, numero interno ou numero externo."
      operationId: api-casos-num-partes
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com as partes do caso pelo identificador do caso, numero interno ou numero externo."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoParte"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/casos/{idCaso}/pedidos":
    post:
      tags:
        - Pedidos
      summary: "api/casos/{idCaso}/pedidos"
      operationId: api-casos-idcaso-pedidos
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: lista de DtoCasoPedidoSimples finais do caso
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOCasoPedidoSimples"
      responses:
        "200":
          description: Includeupdate e delete com sucesso
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  /api/casos/num/pedidos:
    get:
      tags:
        - Pedidos
      summary: /api/casos/num/pedidos
      description: "Obtém um array com os pedidos do caso pelo identificador do caso, numero interno ou numero externo."
      operationId: api-casos-num-pedidos
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com os pedidos do caso pelo identificador do caso, numero interno ou numero externo."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoPedido"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/push/escritorio/todos/listar/{somenteBloqueados}":
    get:
      tags:
        - Push
      summary: "/api/push/escritorio/todos/listar/{somenteBloqueados}"
      description: Obtém um array com os escritórios cadastrados na Vista.
      operationId: api-push-escritorio-todos-listar-somentebloqueados
      parameters:
        - name: somenteBloqueados
          in: path
          description: "Default: false"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com os escritórios cadastrados na Vista.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Escritorio"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/push/escritorio/cadastrar:
    post:
      tags:
        - Push
      summary: /api/push/escritorio/cadastrar
      description: Cadastra o escritório na Vista.
      operationId: api-push-escritorio-cadastrar
      responses:
        "200":
          description: Retorna um booleano indicando se o escritório foi cadastrado na Vista.
          content:
            application/json:
              example: "True"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/push/escritorio/remover/{domainARemover}":
    delete:
      tags:
        - Push
      summary: "/api/push/escritorio/remover/{domainARemover}"
      description: Remove o escritório na Vista.
      operationId: api-push-escritorio-remover-domainaremover
      parameters:
        - name: domainARemover
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retorna um booleano indicando se o escritório foi removido na Vista.
          content:
            application/json:
              example: "True"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/push/escritorio/inativar/{codEscritorio}":
    put:
      tags:
        - Push
      summary: "/api/push/escritorio/inativar/{codEscritorio}"
      description: Inativa o escritório na Vista.
      operationId: api-push-escritorio-inativar-codescritorio
      parameters:
        - name: codEscritorio
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: O escritório foi inativado na Vista.
          content:
            application/json: {}
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/push/publicacoes:
    get:
      tags:
        - Push
      summary: /api/push/publicacoes
      description: Obtém um array com as publicações de acordo com o filtro informado.
      operationId: api-push-publicacoes
      parameters:
        - name: ano
          in: query
          required: true
          schema:
            type: integer
        - name: mes
          in: query
          required: true
          schema:
            type: integer
        - name: novos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: visualizados
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: finalizados
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com as publicações de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOItemPublicacao"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/push/publicacoes/{id}":
    get:
      tags:
        - Push
      summary: "/api/push/publicacoes/{id}"
      description: Obtém a publicação de acordo com o identificador informado.
      operationId: api-push-publicacoes-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém a publicação de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOItemPublicacao"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/push/publicacoes/{id}/acoes":
    get:
      tags:
        - Push
      summary: "/api/push/publicacoes/{id}/acoes"
      description: Obtém um array com as ações de publicação de acordo com o identificador informado.
      operationId: api-push-publicacoes-id-acoes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as ações de publicação de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOAcaoPush"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/push/inclui/publicacoes/{id}/acoes":
    post:
      tags:
        - Push
      summary: "/api/push/inclui/publicacoes/{id}/acoes"
      description: Inclui o item de agenda em publicação e retorna o item incluído.
      operationId: api-push-inclui-publicacoes-id-acoes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: O item de agenda a incluir.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOItemAgenda"
      responses:
        "200":
          description: Inclui o item de agenda em publicação e retorna o item incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOItemAgenda"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/push/altera/publicacoes/{id}":
    put:
      tags:
        - Push
      summary: "/api/push/altera/publicacoes/{id}"
      description: Altera o status da publicação.
      operationId: api-push-altera-publicacoes-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: O item a alterar.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOItemPublicacao"
      responses:
        "200":
          description: Altera o status da publicação e retorna o item alterado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOItemPublicacao"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/timesheet/totalhoras:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/totalhoras
      description: Obtém o total de horas lançadas no mês pelo profissional.
      operationId: api-timesheet-totalhoras
      responses:
        "200":
          description: Obtém o total de horas lançadas no mês pelo profissional.
          content:
            application/json:
              example: 4
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/timesheet/proximoslancamentos:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/proximoslancamentos
      description: Obtém um array com os últimos lançamentos de timesheet por profissional.
      operationId: api-timesheet-proximoslancamentos
      responses:
        "200":
          description: Obtém um array com os últimos lançamentos de timesheet por profissional.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/timesheet/activitycodes:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/activitycodes
      description: Obtém um array com os Activity Codes.
      operationId: api-timesheet-activitycodes
      responses:
        "200":
          description: Obtém um array com os Activity Codes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LEDESCodes"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/timesheet/taskcodes:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/taskcodes
      description: Obtém um array com os Task Codes.
      operationId: api-timesheet-taskcodes
      responses:
        "200":
          description: Obtém um array com os Task Codes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LEDESCodes"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/timesheet/listaporperiodo:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/listaporperiodo
      description: Lista por período de acordo com o filtro informado.
      operationId: api-timesheet-listaporperiodo
      parameters:
        - name: nrAplicabilidade
          in: query
          description: "1: Timesheet, 2: Despesa"
          required: true
          schema:
            type: integer
        - name: idFuncionario
          in: query
          required: true
          schema:
            type: integer
        - name: dataDeHoje
          in: query
          description: "Exemplo: 2021-08-27T12:30:00.000"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista por período de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfDateTimeArray"
              example:
                - - string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/timesheet/obtemmaisrecente:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/obtemmaisrecente
      description: Obtém mais recente de acordo com o filtro informado.
      operationId: api-timesheet-obtemmaisrecente
      parameters:
        - name: nrAplicabilidade
          in: query
          description: "1: Timesheet, 2: Despesa"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém mais recente de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DateTimeArray"
              example:
                - string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/timesheet/obtem:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/obtem
      description: Obtém um array com as horas lançados do funcionário de acordo com o filtro informado.
      operationId: api-timesheet-obtem
      parameters:
        - name: ano
          in: query
          required: true
          schema:
            type: int
        - name: mes
          in: query
          required: true
          schema:
            type: int
      responses:
        "200":
          description: Obtém um array com as horas lançados do funcionário de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/timesheet/funcionarios/{idFuncionario}/areas":
    get:
      tags:
        - Timesheet
      summary: "/api/timesheet/funcionarios/{idFuncionario}/areas"
      description: Obtém um array com as áreas para lançamento de horas.
      operationId: api-timesheet-funcionarios-idfuncionario-areas
      parameters:
        - name: idFuncionario
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as áreas para lançamento de horas.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOArea"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/timesheet/areas/{idArea}/titulos":
    get:
      tags:
        - Timesheet
      summary: "/api/timesheet/areas/{idArea}/titulos"
      description: Obtém um array com os títulos para lançamento de horas.
      operationId: api-timesheet-areas-idarea-titulos
      parameters:
        - name: idArea
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os títulos para lançamento de horas.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOClassificacao"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/timesheet/funcionarios:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/funcionarios
      description: Obtém um array com os funcionários para lançamento de horas.
      operationId: api-timesheet-funcionarios
      responses:
        "200":
          description: Obtém um array com os funcionários para lançamento de horas.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFuncionario"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/timesheet/funcionarios/permissaolcto/{idFuncionario}":
    get:
      tags:
        - Timesheet
      summary: "/api/timesheet/funcionarios/permissaolcto/{idFuncionario}"
      description: Obtém um array com os funcionários com permissão de lançamento para o Mobile.
      operationId: api-timesheet-funcionarios-permissaolcto-idfuncionario
      parameters:
        - name: idFuncionario
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os funcionários com permissão de lançamento para o Mobile.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFuncionario"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/timesheet/classificacoes:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/classificacoes
      description: Obtém um array com as classificações para o lançamento de horas.
      operationId: api-timesheet-classificacoes
      responses:
        "200":
          description: Obtém um array com as classificações para o lançamento de horas.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOClassificacao"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/casos/{idCaso}/timesheet":
    get:
      tags:
        - Timesheet
      summary: "/api/casos/{idCaso}/timesheet"
      description: Obtém um array com as horas lançadas do caso informado.
      operationId: api-casos-idcaso-timesheet
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
        - name: ano
          in: query
          required: true
          schema:
            type: integer
        - name: mes
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as horas lançadas do caso informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/timesheet/obtem/{id}":
    get:
      tags:
        - Timesheet
      summary: "/api/timesheet/obtem/{id}"
      description: Obtém a planilha de horas pelo identificador do lançamento.
      operationId: api-timesheet-obtem-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém a planilha de horas pelo identificador do lançamento.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/timesheet/solicitante:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/solicitante
      description: Obtém a planilha de horas pelo identificador do lançamento.
      operationId: api-timesheet-solicitante
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém a planilha de horas pelo identificador do lançamento.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/timesheet/inclui:
    post:
      tags:
        - Timesheet
      summary: /api/timesheet/inclui
      description: Inclui o lançamento de hora.
      operationId: api-timesheet-inclui
      requestBody:
        description: O lançamento de hora a incluir.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOPlanilhaHoras"
      responses:
        "200":
          description: Retorna o lançamento de horas incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/timesheet/atualiza:
    put:
      tags:
        - Timesheet
      summary: /api/timesheet/atualiza
      description: Atualiza o lançamento de hora.
      operationId: api-timesheet-atualiza
      requestBody:
        description: O lançamento de hora a atualizar.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOPlanilhaHoras"
      responses:
        "200":
          description: Retorna o lançamento de hora atualizado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/timesheet/exclui/{id}":
    delete:
      tags:
        - Timesheet
      summary: "/api/timesheet/exclui/{id}"
      description: Exclui o lançamento de hora.
      operationId: api-timesheet-exclui-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: O lançamento de hora foi excluído.
          content:
            application/json: {}
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/timesheet/limiteMinimo:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/limiteMinimo
      description: Retorna o limite mínimo de minutos.
      operationId: api-timesheet-limiteminimo
      responses:
        "200":
          description: Retorna o limite mínimo de minutos.
          content:
            application/json:
              example: 5
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/timesheet/arredondamento:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/arredondamento
      description: Retorna o arredondamento de minutos.
      operationId: api-timesheet-arredondamento
      responses:
        "200":
          description: Retorna o arredondamento de minutos.
          content:
            application/json:
              example: 10
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/casos/{idCaso}/valoresapurados":
    get:
      tags:
        - ValoresApurados
      summary: "/api/casos/{idCaso}/valoresapurados"
      description: Obtém um array com os valores apurados do caso.
      operationId: api-casos-idcaso-valoresapurados
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os valores apurados do caso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOValorApurado"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/casos/num/valoresapurados:
    get:
      tags:
        - ValoresApurados
      summary: /api/casos/num/valoresapurados
      description: "Obtém um array com os valores apurados do caso por identificador do caso, numero interno ou numero externo."
      operationId: api-casos-num-valoresapurados
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com os valores apurados do caso por identificador do caso, numero interno ou numero externo."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOValorApurado"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/ContaDeAcesso/ObtemContaDeAcesso2:
    get:
      tags:
        - ContaDeAcesso
      summary: /api/ContaDeAcesso/ObtemContaDeAcesso2
      description: Obtém a conta de acesso de acordo com o usuário e escritório.
      operationId: api-contadeacesso-obtemcontadeacesso2
      parameters:
        - name: nomeUsuario
          in: query
          required: true
          schema:
            type: string
        - name: domain
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Obtém a conta de acesso de acordo com o usuário e escritório.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOContaDeAcesso"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/versao:
    get:
      tags:
        - Sessão
      summary: /api/versao
      description: Retorna uma string que identifica a versão em que o escritório está.
      operationId: api-versao
      parameters:
        - name: domain
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retorna um inteiro que identifica a versão em que o escritório está.
          content:
            application/json:
              example: 109
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/casos/listacasos:
    get:
      tags:
        - Casos
      summary: /api/casos/listacasos
      description: Retorna um array com todos os casos de acordo com o filtro informado.
      operationId: api-casos-listacasos
      parameters:
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: bool
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: bool
      responses:
        "200":
          description: Retorna um array com todos os casos de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoSimples"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/timesheet/caso/{idCaso}":
    get:
      tags:
        - Timesheet
      summary: "/api/timesheet/caso/{idCaso}"
      description: Retorna um array com todos os lançamentos de hora do caso informado.
      operationId: api-timesheet-caso-idcaso
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: int
      responses:
        "200":
          description: Retorna um array com todos os lançamentos de hora do caso informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/expectativa/valores/{idCaso}":
    get:
      tags:
        - ExpectativaReivindicacao
      summary: "/api/expectativa/valores/{idCaso}"
      description: Retorna os valores do caso.
      operationId: api-expectativa-valores-idcaso
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: int
      responses:
        "200":
          description: Retorna os valores do caso.
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/casos/edit:
    put:
      tags:
        - Casos
      summary: /api/casos/edit
      description: Altera campos.
      operationId: api-casos-edit-id
      parameters:
        - name: id
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: Altera campos.
        "401":
          description: ""
  /api/websession:
    post:
      tags:
        - Sessão
      summary: /api/websession
      description: Login do Web com E-mail
      operationId: 619ce96e8e9887de66d5a9fc
      requestBody:
        description: Parâmetros para login.
        content:
          application/json:
            example:
              domain: ""
              email: ""
      responses:
        "200":
          description: Resultado do login.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resultado_de_login"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/obtemDomainPorEmail:
    get:
      tags:
        - Sessão
      summary: /api/obtemDomainPorEmail
      description: Login do Web com E-mail
      operationId: 61a664b1625048e8c1c6b2dd
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      requestBody:
        description: Parâmetros para login.
        content:
          application/json:
            example:
              domain: ""
              email: ""
      responses:
        "200":
          description: Resultado do login.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resultado_de_login"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/VF/ObtemFilhosPorNomePai:
    get:
      tags:
        - VaraEForo
      summary: /api/VF/ObtemFilhosPorNomePai
      description: Obtém os itens filhos pelo nome do item pai.
      operationId: api-vf-obtemfilhospornomepai
      parameters:
        - name: nomeNo
          in: query
          description: O nome do item.
          required: true
          schema:
            type: string
        - name: somenteAtivos
          in: query
          description: Somente itens ativos? O valor padrão é true.
          schema:
            type: boolean
      responses:
        "200":
          description: Obtém os itens filhos pelo nome do item pai.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ProximosNiveis:
    get:
      tags:
        - VaraEForo
        - VaraEForoUnificado
      summary: /api/VF/ProximosNiveis
      operationId: api-vf-proximosniveis
      parameters:
        - name: cdNo
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: Retorna os próximos dois níveis
        "401":
          description: Em caso de sessão expirada.
  "/api/andamentos/update/{idAndamento}":
    put:
      tags:
        - Andamentos
      summary: "api/andamentos/update/{idAndamento}"
      operationId: api-andamentos-update-idandamento
      parameters:
        - name: idAndamento
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EncapsuladorDeResposta"
      responses:
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "200":
          description: "Retorna uma resposta encapsulada por um objeto com flag Success, com o objeto DTOAndamento no Response,\ne se houver algum tipo de erro, este vem no ExceptionMessage\n"
        "500":
          description: ""
  "/api/casos/{idCaso}/valores":
    get:
      tags:
        - ValoresDoCaso
      summary: "api/casos/{idCaso}/valores"
      operationId: api-casos-idcaso-valores
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Objeto com valores do caso e a lista de pedidos se existir
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOValoresDoCaso"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  /api/Pedidos/possiveisStatus:
    get:
      tags:
        - Pedidos
      summary: api/Pedidos/possiveisStatus
      operationId: api-pedidos-possiveisstatus
      responses:
        "200":
          description: Retorna os possiveis status dos pedidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOObjetoNomeId"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  /api/Pedidos/possiveisExitos:
    get:
      tags:
        - Pedidos
      summary: api/Pedidos/possiveisExitos
      operationId: api-pedidos-possiveisexitos
      responses:
        "200":
          description: "Retorna os possiveis exitos "
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOObjetoNomeId"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  /api/Pedidos/causas:
    get:
      tags:
        - Pedidos
      summary: api/Pedidos/causas
      operationId: api-pedidos-causas
      responses:
        "200":
          description: Devolve todas as bases de pedidos do escritorio
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPedidoCausa"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  /api/decisoes/tipos:
    get:
      tags:
        - Decisões
      summary: api/decisoes/tipos
      operationId: api-decisoes-tipos
      responses:
        "200":
          description: Retorna os tipos possíveis de Decisão do escritório
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTODecisao"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  "/api/decisoes/{id}":
    get:
      tags:
        - Decisões
      summary: "api/decisoes/{id}"
      operationId: api-decisoes-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: retorna decisao com valores
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOProcessoDecisao"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  /api/decisoes:
    post:
      tags:
        - Decisões
      summary: api/decisoes
      operationId: api-decisoes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOProcessoDecisao"
      responses:
        "200":
          description: Decisao inserida com sucesso
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  "/api/decisoes/{idProcessoDecisao}":
    delete:
      tags:
        - Decisões
      summary: "api/decisoes/{idProcessoDecisao}"
      operationId: api-decisoes-idprocessodecisao
      parameters:
        - name: idProcessoDecisao
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Decisao deletada com sucesso
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  "/api/decisoes/{idAlterado}":
    put:
      tags:
        - Decisões
      summary: "api/decisoes/{idAlterado}"
      operationId: api-decisoes-idalterado
      parameters:
        - name: idAlterado
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Decisão alterada com sucesso
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  /api/log/Inclui:
    post:
      tags:
        - VaraEForoUnificado
      summary: /api/log/Inclui
      description: Inclui o log.
      operationId: api-log-inclui
      requestBody:
        description: O log a inserir.
        content:
          application/json:
            example:
              cdLogOperacao: 0
              cdTipoOperacao: 0
              dsDetalheOperacao: string
              dtOperacao: string
              cdNo: 0
              dsNomeResponsavelAlteracao: string
      responses:
        "204":
          description: Inclui o log.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/log/Lista:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/log/Lista
      description: Lista os logs através das datas informadas.
      operationId: api-log-lista
      parameters:
        - name: filtrarPorDatas
          in: query
          required: true
          schema:
            type: boolean
        - name: dataInicial
          in: query
          required: true
          schema:
            type: string
        - name: dataFinal
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista os logs através das datas informadas.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/AtivaInativaGrupos:
    put:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/AtivaInativaGrupos
      description: Ativa ou inativa os grupos informados.
      operationId: api-vf-ativainativagrupos
      requestBody:
        description: Os grupos a ativar ou inativar.
        content:
          application/json:
            example:
              GrupoId: 0
              IDPai: 0
              nrOrdenacao: 0
              dsNome: string
              dsCategoriaFilhos: string
              dsHierarquiaCompleta: string
              nrNivel: 0
              inAtivo: true
              dsCodigoOriginal: string
              isEditavel: true
      responses:
        "200":
          description: Retorna um objeto contendo a mensagem de sucesso na ativação / inativação do grupo informado.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/AtualizaRito:
    put:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/AtualizaRito
      description: Atualiza o rito.
      operationId: api-vf-atualizarito
      parameters:
        - name: nomeResponsavelAlteracao
          in: query
          required: true
          schema:
            type: string
      requestBody:
        description: O rito a atualizar.
        content:
          application/json:
            example:
              cdRito: 0
              cdGrupoRito: 0
              dsNome: string
              inEsperaPoloPassivo: true
              inAtivo: true
              dsPoloAtivo: string
              dsPoloPassivo: string
              dsPoloTerceiro: string
      responses:
        "200":
          description: Atualiza o rito
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/Categorias:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/Categorias
      description: Lista as categorias.
      operationId: api-vf-categorias
      responses:
        "200":
          description: Lista as categorias.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/cdNoPorNome:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/cdNoPorNome
      description: Obtém o identificador pelo nome.
      operationId: api-vf-cdnopornome
      parameters:
        - name: nome
          in: query
          description: O nome do item.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Obtém o identificador pelo nome.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/compilacao:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/compilacao
      description: Método de teste
      operationId: api-vf-compilacao
      responses:
        "200":
          description: Retornada em todos os casos.
          content:
            application/json:
              example: Resposta da API
  /api/VF/EditaGrupos:
    put:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/EditaGrupos
      description: Atualiza o array de grupos informados.
      operationId: api-vf-editagrupos
      parameters:
        - name: responsavelAlteracao
          in: query
          description: O nome do responsável pela atualização dos dados.
          required: true
          schema:
            type: string
      requestBody:
        description: Um array com os grupos a atualizar.
        content:
          application/json:
            example:
              GrupoId: 0
              IDPai: 0
              nrOrdenacao: 0
              dsNome: string
              dsCategoriaFilhos: string
              dsHierarquiaCompleta: string
              nrNivel: 0
              inAtivo: true
              dsCodigoOriginal: string
              isEditavel: true
      responses:
        "200":
          description: Atualiza o array de grupos informados.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/GravaOrdenacaoGrupos:
    put:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/GravaOrdenacaoGrupos
      description: Grava a nova ordenação dos grupos.
      operationId: api-vf-gravaordenacaogrupos
      requestBody:
        description: Uma array com os grupos que devem ser atualizados.
        content:
          application/json:
            example:
              GrupoId: 0
              IDPai: 0
              nrOrdenacao: 0
              dsNome: string
              dsCategoriaFilhos: string
              dsHierarquiaCompleta: string
              nrNivel: 0
              inAtivo: true
              dsCodigoOriginal: string
              isEditavel: true
      responses:
        "200":
          description: Grava a nova ordenação dos grupos.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/HierarquiaFormatadaDoNo:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/HierarquiaFormatadaDoNo
      description: Exibe a hierarquia formatada do grupo informado.
      operationId: api-vf-hierarquiaformatadadono
      parameters:
        - name: no
          in: query
          description: O identificador do grupo.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Se o identificador existir retorna a hierarquia formatada do grupo.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/VincularRitos:
    post:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/VincularRitos
      description: Vincula as varas aos grupos de ritos informados.
      operationId: api-vf-vincularritos
      requestBody:
        description: Vincula as varas aos grupos de ritos informados.
        content:
          application/json:
            example:
              idForo: 0
              idsGrupoRito:
                - 0
              responsavelAlteracao: string
      responses:
        "200":
          description: Vincula as varas aos grupos de ritos informados.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/IncluiGrupos:
    post:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/IncluiGrupos
      description: Inclui os grupos.
      operationId: api-vf-incluigrupos
      requestBody:
        description: Inclui os grupos informados.
        content:
          application/json:
            example:
              GrupoId: 0
              IDPai: 0
              nrOrdenacao: 0
              dsNome: string
              dsCategoriaFilhos: string
              dsHierarquiaCompleta: string
              nrNivel: 0
              inAtivo: true
              dsCodigoOriginal: string
              isEditavel: true
      responses:
        "200":
          description: Inclui os grupos informados.
        "400":
          description: "Em caso de erros, retorna um objeto contendo a mensagem de erro."
          content:
            application/json:
              example:
                erro: string
  /api/VF/IncluiRito:
    post:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/IncluiRito
      description: Insere o rito informado.
      operationId: api-vf-incluirito
      parameters:
        - name: responsavelAlteracao
          in: query
          description: O nome do responsável pela alteração.
          required: true
          schema:
            type: string
      requestBody:
        description: Insere o rito informado.
        content:
          application/json:
            example:
              cdRito: 0
              cdGrupoRito: 0
              dsNome: string
              inEsperaPoloPassivo: true
              inAtivo: true
              dsPoloAtivo: string
              dsPoloPassivo: string
              dsPoloTerceiro: string
      responses:
        "200":
          description: Insere o rito informado.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ListaGruposRito:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/ListaGruposRito
      description: Lista os grupos ritos.
      operationId: api-vf-listagruposrito
      parameters:
        - name: gruposPrincipais
          in: query
          description: O padrão é true.
          schema:
            type: boolean
      responses:
        "200":
          description: Lista os grupos de ritos.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ListaHierarquia:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/ListaHierarquia
      description: Lista a hierarquia do grupo informado.
      operationId: api-vf-listahierarquia
      parameters:
        - name: no
          in: query
          description: O identificador do grupo.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna a hierarquia do grupo informado.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ListaPorNivel:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/ListaPorNivel
      operationId: api-vf-listapornivel
      parameters:
        - name: nivel
          in: query
          description: O nível do grupo na hierarquia de varas e foros
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "Retorna os grupos de acordo com o nível.\nSe o nível informado for inválido, será retornada uma resposta default no mesmo padrão."
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ListaRitosGrupoRitos:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/ListaRitosGrupoRitos
      description: Lista os ritos e grupos ritos de acordo com o tipo de pesquisa.
      operationId: api-vf-listaritosgruporitos
      parameters:
        - name: tipoPesquisa
          in: query
          description: "- Pesquisa por foro (1)\n- Pesquisa por rito (2)\n- Pesquisa por grupo rito (3) \n- Pesquisa por grupo rito pai (4)"
          required: true
          schema:
            type: integer
        - name: identificador
          in: query
          description: O identificador do grupo.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna os ritos e grupos de ritos de acordo com o tipo de pesquisa.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ListaVinculoGrupoERito:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/ListaVinculoGrupoERito
      description: Exibe os grupos de ritos aos quais a vara informada está vinculada.
      operationId: api-vf-listavinculogrupoerito
      parameters:
        - name: idVara
          in: query
          description: O identificador da vara.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna os vínculos entre a vara informada e os grupos de ritos.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ObtemFilhosPorPai:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/ObtemFilhosPorPai
      description: Lista os filhos do grupo informado.
      operationId: api-vf-obtemfilhosporpai
      parameters:
        - name: grupoId
          in: query
          description: O identificador do grupo.
          required: true
          schema:
            type: integer
        - name: somenteAtivos
          in: query
          description: "Retornar apenas os itens ativos?\nO padrão é true."
          schema:
            type: boolean
      responses:
        "200":
          description: Retorna os grupos filhos do grupo informado.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ObtemPorID:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/ObtemPorID
      description: Obtém as informações do grupo informado.
      operationId: api-vf-obtemporid
      parameters:
        - name: no
          in: query
          description: O identificador do grupo.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna as informações do grupo de acordo com o identificador dele.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/RitosDoGrupo:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/RitosDoGrupo
      description: Lista os ritos do grupo.
      operationId: api-vf-ritosdogrupo
      parameters:
        - name: cdGrupoRito
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Lista os ritos do grupo.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ritosDoNo:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/ritosDoNo
      description: "Obtém a lista de ritos e grupos de ritos do nó informado. "
      operationId: api-vf-ritosdono
      parameters:
        - name: cdNo
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém a lista de ritos e grupos de ritos do nó informado.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/timesheet/atualizaWeb:
    put:
      summary: /api/timesheet/atualizaWeb
      description: Atualiza o lançamento de hora na web
      operationId: 61f981a684e7dd7e1ff37200
      requestBody:
        description: O lançamento de hora a atualizar.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOPlanilhaHoras"
      responses:
        "200":
          description: Retorna o lançamento de hora atualizado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/timesheet/incluiWeb:
    post:
      summary: /api/timesheet/inclui
      description: Inclui o lançamento de hora na web.
      operationId: 61f985cb2a9d95868fd4f22c
      requestBody:
        description: O lançamento de hora a incluir.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOPlanilhaHoras"
      responses:
        "200":
          description: Retorna o lançamento de horas incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/casos/{idCaso}/DecisoesComValores":
    get:
      summary: "api/casos/{idCaso}/DecisoesComValores"
      operationId: api-casos-idcaso-decisoescomvalores
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna as Decisoes do Caso com os Valores
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOProcessoDecisao"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: " Em caso de erro diferente de timeout ou sessão expirada."
  "/api/casos/Garantia/Inclui/{idCaso}":
    post:
      tags:
        - Garantia
      summary: "/api/casos/Garantia/Inclui/{idCaso}"
      description: Inclui garantia do caso
      operationId: 6203ef4e9d522794549db73e
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna o lançamento de horas incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/casos/Garantia/Exclui/{idCaso}":
    delete:
      tags:
        - Garantia
      summary: "/api/casos/Garantia/Exclui/{idCaso}"
      description: Exclui garantia do caso
      operationId: 6204330976b38804bb0f2829
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna o lançamento de horas incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/casos/Garantia/{idCasoGarantia}":
    get:
      tags:
        - Garantia
      summary: "/api/casos/Garantia/{idCasoGarantia}"
      description: Obtém um dto de ProcessoGarantia por idCasoGarantia
      operationId: 62053c8270795bc4d3041a5c
      parameters:
        - name: idCasoGarantia
          in: path
          required: true
          schema:
            type: ""
      responses:
        "200":
          description: Obtém um array com as garantias do caso encontrado pelo identificador.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoGarantia"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/casos/Garantia/Atualiza/{idCaso}":
    put:
      tags:
        - Garantia
      summary: "/api/casos/Garantia/Atualiza/{idCaso}"
      description: Atualiza garantia do caso
      operationId: 62054aff0d0a5aa184d30a7a
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna o lançamento de horas incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/casos/Garantia/{idGarantia}/ObtemMovimentacao/{idGarantiaMovimentacao}/"
    get:
      summary: "/api/casos/Garantia/{idGarantia}/ObtemMovimentacao/{idGarantiaMovimentacao}/"
      description: Obtém as movimentações de garantias do caso encontrado pelo identificador.
      operationId: 62058aa81baaec5a52662708
      parameters:
        - name: idGarantia
          in: path
          required: true
          schema:
            type: integer
        - name: idGarantiaMovimentacao
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as garantias do caso encontrado pelo identificador.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoGarantia"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/TiposGarantia:
    get:
      tags:
        - Garantia
      summary: /api/TiposGarantia
      description: Obtém um array com os tipos de garantia
      operationId: 6205d36ea21b3444bd2e416a
      responses:
        "200":
          description: Obtém um array com as garantias do caso encontrado pelo identificador.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoGarantia"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/casos/Garantia/IncluiMovimentacao/{idCaso}":
    post:
      tags:
        - Garantia
      summary: "/api/casos/Garantia/IncluiMovimentacao/{idCaso}"
      description: Inclui movimentação de garantia do caso
      operationId: 620690c88dd3c119fadf72e9
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna o lançamento de horas incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/render:
    get:
      tags:
        - Render
      summary: /api/render
      description: Obtém os dados para o relatório do Render
      operationId: api-render
      parameters:
        - name: idProcesso
          in: query
          description: O identificador do processo para obter os dados.
          schema:
            type: integer
      responses:
        "200":
          description: Obtém os dados para o relatório do Render
        "401":
          description: Em caso de sessão expirada.
        "500":
          description: Em caso diferente de sessão expirada.
  "/api/casos/GarantiaMovimentacao/Exclui/{idGarantiaMovimentacao}":
    delete:
      tags:
        - Garantia
      summary: "/api/casos/GarantiaMovimentacao/Exclui/{idGarantiaMovimentacao}"
      description: Exclui movimentação de garantia do caso
      operationId: 62073a6246ade0b7855fcccf
      parameters:
        - name: idGarantiaMovimentacao
          in: path
          required: true
          schema:
            type: ""
      responses:
        "200":
          description: Retorna o lançamento de horas incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  /api/casos/Garantia/AtualizaMovimentacao:
    put:
      summary: /api/casos/Garantia/AtualizaMovimentacao
      description: Atualiza movimentação de garantia do caso
      operationId: 6209b8be692bbf57c105e9f4
      responses:
        "200":
          description: Retorna o lançamento de horas incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/casos/{idCaso}/PedidosComHistorico":
    get:
      summary: "api/casos/{idCaso}/PedidosComHistorico"
      operationId: api-casos-idcaso-pedidoscomhistorico
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Pedidos com Historico equivalente à grid da aba de valores expectativa da casua do caso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOValoresComPedidosAtualizados"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  "/api/clientes/{idCliente}/pasta":
    get:
      summary: "/api/clientes/{idCliente}/pasta"
      description: Retorna id da pasta do cliente
      operationId: 62222843c68a257886a783d8
      parameters:
        - name: idCliente
          in: path
          description: ""
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna um array com os casos do cliente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoSimples"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
  "/api/casos/tarefas/{cdProcesso}/{ignoraIdFuncionario}/{filtro}":
    get:
      tags:
        - Tarefa
      summary: "/api/casos/tarefas/{cdProcesso}/{ignoraIdFuncionario}/{filtro}"
      description: Lista os itens de agenda de acordo com o filtro selecionado
      operationId: api-casos-tarefas-cdprocesso-ignoraidfuncionario-filtro
      parameters:
        - name: cdProcesso
          in: path
          required: true
          schema:
            type: integer
        - name: ignoraIdFuncionario
          in: path
          required: true
          schema:
            type: boolean
        - name: filtro
          in: path
          description: "1. Todos\n2. Finalizados\n3. Em aberto"
          required: true
          schema:
            type: integer
        - name: numeroDeRecorrencias
          in: query
          description: "Default: 10"
          schema:
            type: integer
      responses:
        "200":
          description: Lista os itens de agenda de acordo com o filtro selecionado
        "401":
          description: Em caso de sessão expirada.
        "500":
          description: Em caso de erro interno.