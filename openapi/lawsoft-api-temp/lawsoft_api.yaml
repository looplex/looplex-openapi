openapi: 3.0.1
info:
  title: Lawsoft API (Production - Internal)
  description: "API de produção da Lawsoft. "
  version: "1.0"
servers:
  - url: https://lawsoft-apim.azure-api.net/lawsoft-api-internal
paths:
  /api/agenda/participantes:
    get:
      tags:
        - Agenda
      summary: /api/agenda/participantes
      description: Obtém os participantes.
      operationId: obtem-participantes
      responses:
        "200":
          description: Retorna um array com os participantes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFuncionario"
              example:
                IDFuncionario: 0
                Nome: string
                Apelido: string
                Logradouro: string
                NumeroLogradouro: string
                Bairro: string
                Cidade: string
                Estado: string
                Complemento: string
                CEP: string
                Email: string
                CPF: string
                RG: string
                EstadoCivil: 0
                DataDeNascimento: {}
                DataDeNascimentoFormatada: string
                Cargo: string
                DataDeAdmissao: {}
                DataDeAdmissaoFormatada: string
                DataDeDemissao: {}
                DataDeDemissaoFormatada: string
                Oab: string
                NumeroDeDependentes: 0
                Admin: true
                Observacoes: string
                VinculoEmpregaticio: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/agenda/titulos:
    get:
      tags:
        - Agenda
      summary: /api/agenda/titulos
      description: Obtém os títulos de agenda.
      operationId: obtem-os-titulos-de-agenda
      parameters:
        - name: tipo
          in: query
          description: "- 1: Atividade Externa\n- 2: Prazo\n- 4: Audiência\n- 8: Compromisso de trabalho\n- 9: Compromisso particular"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna um array com os títulos de agenda.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOTituloAgenda"
              example:
                IDEscritorio: 0
                TipoCobrancaEvento: 0
                Titulo: string
                IDTituloCobranca: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{idCaso}/audiencias":
    get:
      tags:
        - Agenda
      summary: "/api/casos/{idCaso}/audiencias"
      description: Obtém as audiências por caso.
      operationId: obtem-as-audiencias-por-caso
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna um array com as audiências do caso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCompromissoAudiencia"
              example:
                NomeClienteProcesso: string
                TituloProcesso: string
                NumeroInterno: string
                NumeroExterno: string
                idAudiencia: 0
                Assunto: string
                Area: string
                Hora: string
                Data: string
                DataFormatada: string
                Delegante: string
                Executor: string
                Participantes:
                  - 0
                Descricao: string
                Local: string
                Situacao: string
                IdCaso: 0
                IdAudienciaPai: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/num/audiencias:
    get:
      tags:
        - Agenda
      summary: /api/casos/num/audiencias
      description: "Obtém audiências por numero interno, externo ou identificador do caso"
      operationId: obtem-audiencias-por-numero-interno-externo-ou-identificador-do-caso
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Retorna um array com as audiências encontradas através do numero interno, externo ou identificador do caso."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCompromissoAudiencia"
              example:
                NomeClienteProcesso: string
                TituloProcesso: string
                NumeroInterno: string
                NumeroExterno: string
                idAudiencia: 0
                Assunto: string
                Area: string
                Hora: string
                Data: string
                DataFormatada: string
                Delegante: string
                Executor: string
                Participantes:
                  - 0
                Descricao: string
                Local: string
                Situacao: string
                IdCaso: 0
                IdAudienciaPai: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{idCaso}/tabagenda":
    get:
      tags:
        - Agenda
      summary: "/api/casos/{idCaso}/tabagenda"
      description: "Obtém compromissos, prazos e publicações por caso."
      operationId: obtem-compromissos-prazos-e-publicacoes-por-caso
      parameters:
        - name: idCaso
          in: path
          description: "Exemplo: [1, 10]"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Retorna um array com os compromissos, prazos e publicações por caso."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOItemAgendaSimples"
              example:
                NomeClienteProcesso: string
                TituloProcesso: string
                NumeroInterno: string
                NumeroExterno: string
                TipoDeItem: string
                Data: {}
                DataFormatada: string
                Assunto: string
                IdCaso: 0
                idExecutor: 0
                Executor: string
                Observacao: string
                IdPai: 0
                Recorrencia:
                  Tipo: string
                  DiasDaSemana:
                    - string
                  DataInicio: string
                  DataFim: string
                  MesDoAno: string
                  DiaDoMes: string
                  ACada: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/num/tabagenda:
    get:
      tags:
        - Agenda
      summary: /api/casos/num/tabagenda
      description: "Obtém compromissos, prazos e publicações por numero interno, externo ou identificador do caso."
      operationId: obtem-compromissos-prazos-e-publicacoes-por-numero-interno-externo-ou-caso
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Retorna um array com os compromissos, prazos e publicações encontrados de acordo com o numero interno, externo ou identificador do caso."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOItemAgendaSimples"
              example:
                NomeClienteProcesso: string
                TituloProcesso: string
                NumeroInterno: string
                NumeroExterno: string
                TipoDeItem: string
                Data: {}
                DataFormatada: string
                Assunto: string
                IdCaso: 0
                idExecutor: 0
                Executor: string
                Observacao: string
                IdPai: 0
                Recorrencia:
                  Tipo: string
                  DiasDaSemana:
                    - string
                  DataInicio: string
                  DataFim: string
                  MesDoAno: string
                  DiaDoMes: string
                  ACada: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/andamentos/classificacoes:
    get:
      tags:
        - Andamentos
      summary: /api/andamentos/classificacoes
      description: Retorna um array com as classificações de andamento do escritório.
      operationId: obtem-classificacoes-de-andamento-do-escritorio
      responses:
        "200":
          description: Retorna um array com as classificações de andamento do escritório.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOAndamentoClassificacao"
              example:
                IDAndamentoClassificacao: 0
                NrOrdem: 0
                DsNome: string
                CdEscritorio: 0
                InExibirEmRelatorio: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  ? "/api/casos/{idCaso}/andamentos/{data}/{primeiraLeitura}/{totalAndamentosLidosPeloMobile}"
  : get:
      tags:
        - Andamentos
      summary: "/api/casos/{idCaso}/andamentos/{data}/{primeiraLeitura}/{totalAndamentosLidosPeloMobile}"
      description: Retorna um array com os andamentos do caso de acordo com o filtro informado.
      operationId: obtem-os-andamentos-do-caso
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
        - name: data
          in: path
          description: "Exemplo: 2021-08-18T12:00:00"
          required: true
          schema:
            type: string
        - name: primeiraLeitura
          in: path
          required: true
          schema:
            type: string
        - name: totalAndamentosLidosPeloMobile
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna um array com os andamentos do caso de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOAndamento"
              example:
                NrTipoClassificacaoAutomatica: 0
                NrClassificacaoAutomatica: 0
                ClassificacaoDoAndamento: string
                LancamentoPeloTimeSheetDoMobile: true
                IdAndamento: 0
                TextoAndamento: string
                TextoAndamentoContinuacao: string
                IdProcesso: 0
                DataCompetencia: {}
                DataInclusao: {}
                IdAutor: 0
                NomeAutor: string
                InUsoInterno: true
                DataRevisao: {}
                IdRevisor: 0
                NomeRevisor: string
                Situacao: 0
                InManual: true
                IdAndamentoTemplate: 0
                NovoAndamentoParaRevisao: 0
                IdAndamentoClassificacao: 0
                IdPublicacaoAndamento: 0
                Tipo: 0
                dsCodigoOriginal: string
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{idCaso}/andamentosimples":
    get:
      tags:
        - Andamentos
      summary: "/api/casos/{idCaso}/andamentosimples"
      description: Retorna um array de andamentos simples do caso informado.
      operationId: obtem-andamentos-simples-do-caso
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna um array de andamentos simples do caso informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOAndamentoSimples"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                idAndamento: 0
                Classificacao: string
                DataCompetencia: {}
                DataCompetenciaFormatada: string
                TextoAndamento: string
                IdCaso: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/num/andamentosimples:
    get:
      tags:
        - Andamentos
      summary: /api/casos/num/andamentosimples
      description: "Retorna um array de andamentos simples por caso, numero interno ou numero externo."
      operationId: obtem-andamentos-simples-por-caso-numero-interno-ou-numero-externo
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Retorna um array de andamentos simples por caso, numero interno ou numero externo."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOAndamentoSimples"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                idAndamento: 0
                Classificacao: string
                DataCompetencia: {}
                DataCompetenciaFormatada: string
                TextoAndamento: string
                IdCaso: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/andamentos/{id}":
    get:
      tags:
        - Andamentos
      summary: "/api/andamentos/{id}"
      description: Obtém o andamento de acordo com o identificador informado.
      operationId: obtem-o-andamento
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém o andamento de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOAndamento"
              example:
                NrTipoClassificacaoAutomatica: 0
                NrClassificacaoAutomatica: 0
                ClassificacaoDoAndamento: string
                LancamentoPeloTimeSheetDoMobile: true
                IdAndamento: 0
                TextoAndamento: string
                TextoAndamentoContinuacao: string
                IdProcesso: 0
                DataCompetencia: {}
                DataInclusao: {}
                IdAutor: 0
                NomeAutor: string
                InUsoInterno: true
                DataRevisao: {}
                IdRevisor: 0
                NomeRevisor: string
                Situacao: 0
                InManual: true
                IdAndamentoTemplate: 0
                NovoAndamentoParaRevisao: 0
                IdAndamentoClassificacao: 0
                IdPublicacaoAndamento: 0
                Tipo: 0
                dsCodigoOriginal: string
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/andamentos:
    post:
      tags:
        - Andamentos
      summary: /api/andamentos
      description: Insere o andamento.
      operationId: insere-o-andamento
      requestBody:
        description: O andamento a inserir.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOAndamento"
            example:
              NrTipoClassificacaoAutomatica: 0
              NrClassificacaoAutomatica: 0
              ClassificacaoDoAndamento: string
              LancamentoPeloTimeSheetDoMobile: true
              IdAndamento: 0
              TextoAndamento: string
              TextoAndamentoContinuacao: string
              IdProcesso: 0
              DataCompetencia: {}
              DataInclusao: {}
              IdAutor: 0
              NomeAutor: string
              InUsoInterno: true
              DataRevisao: {}
              IdRevisor: 0
              NomeRevisor: string
              Situacao: 0
              InManual: true
              IdAndamentoTemplate: 0
              NovoAndamentoParaRevisao: 0
              IdAndamentoClassificacao: 0
              IdPublicacaoAndamento: 0
              Tipo: 0
              dsCodigoOriginal: string
              IsEditable: true
      responses:
        "200":
          description: Retorna o andamento inserido.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOAndamento"
              example:
                NrTipoClassificacaoAutomatica: 0
                NrClassificacaoAutomatica: 0
                ClassificacaoDoAndamento: string
                LancamentoPeloTimeSheetDoMobile: true
                IdAndamento: 0
                TextoAndamento: string
                TextoAndamentoContinuacao: string
                IdProcesso: 0
                DataCompetencia: {}
                DataInclusao: {}
                IdAutor: 0
                NomeAutor: string
                InUsoInterno: true
                DataRevisao: {}
                IdRevisor: 0
                NomeRevisor: string
                Situacao: 0
                InManual: true
                IdAndamentoTemplate: 0
                NovoAndamentoParaRevisao: 0
                IdAndamentoClassificacao: 0
                IdPublicacaoAndamento: 0
                Tipo: 0
                dsCodigoOriginal: string
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/andamentos/{idAndamento}":
    put:
      tags:
        - Andamentos
      summary: "/api/andamentos/{idAndamento}"
      description: Atualiza o andamento.
      operationId: atualiza-o-andamento
      parameters:
        - name: idAndamento
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: O andamento a atualizar.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOAndamento"
            example:
              NrTipoClassificacaoAutomatica: 0
              NrClassificacaoAutomatica: 0
              ClassificacaoDoAndamento: string
              LancamentoPeloTimeSheetDoMobile: true
              IdAndamento: 0
              TextoAndamento: string
              TextoAndamentoContinuacao: string
              IdProcesso: 0
              DataCompetencia: {}
              DataInclusao: {}
              IdAutor: 0
              NomeAutor: string
              InUsoInterno: true
              DataRevisao: {}
              IdRevisor: 0
              NomeRevisor: string
              Situacao: 0
              InManual: true
              IdAndamentoTemplate: 0
              NovoAndamentoParaRevisao: 0
              IdAndamentoClassificacao: 0
              IdPublicacaoAndamento: 0
              Tipo: 0
              dsCodigoOriginal: string
              IsEditable: true
      responses:
        "200":
          description: Retorna o andamento atualizado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOAndamento"
              example:
                NrTipoClassificacaoAutomatica: 0
                NrClassificacaoAutomatica: 0
                ClassificacaoDoAndamento: string
                LancamentoPeloTimeSheetDoMobile: true
                IdAndamento: 0
                TextoAndamento: string
                TextoAndamentoContinuacao: string
                IdProcesso: 0
                DataCompetencia: {}
                DataInclusao: {}
                IdAutor: 0
                NomeAutor: string
                InUsoInterno: true
                DataRevisao: {}
                IdRevisor: 0
                NomeRevisor: string
                Situacao: 0
                InManual: true
                IdAndamentoTemplate: 0
                NovoAndamentoParaRevisao: 0
                IdAndamentoClassificacao: 0
                IdPublicacaoAndamento: 0
                Tipo: 0
                dsCodigoOriginal: string
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
    delete:
      tags:
        - Andamentos
      summary: "/api/andamentos/{idAndamento}"
      description: Exclui o andamento.
      operationId: exclui-o-andamento
      parameters:
        - name: idAndamento
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: O andamento foi excluído.
          content:
            application/json: {}
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/areas:
    get:
      tags:
        - Area
      summary: /api/areas
      description: Retorna um array com as áreas encontradas de acordo com o filtro informado.
      operationId: obtem-areas
      parameters:
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Retorna um array com as áreas encontradas de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOArea"
              example:
                ID: 0
                Titulo: string
                Ativa: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/areas/porDomain/{domain}":
    get:
      tags:
        - Area
      summary: "/api/areas/porDomain/{domain}"
      description: Retorna um array com as áreas de acordo com o escritório informado.
      operationId: obtem-as-areas-por-escritorio
      parameters:
        - name: domain
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retorna um array com as áreas de acordo com o escritório informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOArea"
              example:
                ID: 0
                Titulo: string
                Ativa: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/areas/{id}":
    get:
      tags:
        - Area
      summary: "/api/areas/{id}"
      description: Retorna a área de acordo com o identificador informado.
      operationId: obtem-a-area
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna a área de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOArea"
              example:
                ID: 0
                Titulo: string
                Ativa: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/busca:
    get:
      tags:
        - Busca
      summary: /api/busca
      description: Busca os clientes e casos de acordo com o termo de pesquisa
      operationId: busca-os-clientes-e-casos-de-acordo-com-o-termo-de-pesquisa
      parameters:
        - name: termo
          in: query
          description: ""
          required: true
          schema:
            type: string
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
        - name: apenasMeusCasos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Busca os clientes e casos de acordo com o termo de pesquisa.
          content:
            application/json:
              example:
                IdsClientesComCasos:
                  "100":
                    - 0
                  "200":
                    - 0
                TermoBuscado: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/busca/mobilenovo:
    get:
      tags:
        - Busca
      summary: /api/busca/mobilenovo
      description: Busca os clientes e casos de acordo com o termo de pesquisa para novo mobile.
      operationId: busca-os-clientes-e-casos-de-acordo-com-o-termo-de-pesquisa-novo-mobile
      parameters:
        - name: termo
          in: query
          description: ""
          required: true
          schema:
            type: string
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
        - name: apenasMeusCasos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Busca os clientes e casos de acordo com o termo de pesquisa.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOBuscaMobileNovo"
              example:
                IdsClientesComCasos:
                  - IDCliente: 0
                    IDCasos:
                      - 0
                TermoBuscado: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/inclui:
    post:
      tags:
        - Casos
      summary: /api/casos/inclui
      description: Inclui casos.
      operationId: inclui-casos
      requestBody:
        description: "Os casos a incluir.\nObservação: Deve-se enviar um array de processos."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOProcessoPreCadastro"
            example:
              idPreProcesso: 0
              idCliente: 0
              envolvimentoCliente: 0
              idResponsavel: 0
              idProcessoPai: 0
              idArea: 0
              idPasta: 0
              dsAssunto: string
              idRito: 0
              idForo: 0
              numeroSequencial: 0
              confidencial: true
              dataCriacao: {}
              dataUltimaAlteracao: {}
              classeDoProcesso: 0
              tipo: 0
              situacaoDoProcesso: 0
              tituloProcesso: string
              observacao: string
              numeroInterno: string
              idContrato: 0
              idFase: 0
              nivel: string
              numeroExterno: string
              valorCausa: 0
              valorExpectativaApuracao: 0
              valorContingencia: 0
              cnj: string
              utilizaPedidosDoProcessoPai: true
              foroTemporario: string
              comentarioExpectativaDaCausa: string
              segundoNumero: string
              anotacoesSegundoNumero: string
              dataEntrada: {}
              dataDistribuicao: {}
              hierarquia:
                - nomeItemHierarquia: string
                  grupoFamilia: 0
              coResponsaveis:
                - 0
              idProcessoNoFornecedorPush: 0
              nrFornecedorPush: 0
              partes:
                - IdParteNoLo: 0
                  nomeParte: string
                  tipoPessoa: 0
                  polo: 0
      responses:
        "200":
          description: Retorna um objeto contendo os processos cadastrados e os processos com erro (caso haja).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTORespostaCadastroProcessoPreCadastro"
              example:
                HouveException: true
                ProcessosNaoCadastrados:
                  - IdPreProcesso: 0
                    DetalheErro: string
                    NumeroExterno: string
                    NumeroSequencial: 0
                    NumeroInterno: string
                    TituloProcesso: string
                ProcessosCadastrados:
                  - idPreProcesso: 0
                    dsNumeroExterno: string
                    nrSequencia: 0
                    nrInterno: string
                    dsTitulo: string
                    dtCriacao: {}
                    IDFuncionario: 0
                    Nome: string
                    cdProcesso: 0
                    Domain: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/clientes/{idCliente}/casos":
    get:
      tags:
        - Casos
      summary: "/api/clientes/{idCliente}/casos"
      description: Retorna um array com os casos do cliente.
      operationId: obtem-os-casos-do-cliente
      parameters:
        - name: idCliente
          in: path
          description: ""
          required: true
          schema:
            type: integer
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
        - name: apenasMeusCasos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Retorna um array com os casos do cliente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoSimples"
              example:
                IDCaso: 0
                Titulo: string
                IDCliente: 0
                NomeCliente: string
                NomeResponsavelCaso: string
                IDPasta: 0
                NomePasta: string
                IDContrato: 0
                NomeContrato: string
                NumeroInterno: string
                NumeroExterno: string
                NumeroLawoffice: 0
                IDCasoPai: 0
                Classe: 0
                DataDeCriacao: {}
                DataDeCriacaoFormatada: string
                Situacao: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/clientes/{idCliente}/pastas":
    get:
      tags:
        - Casos
      summary: "/api/clientes/{idCliente}/pastas"
      description: Retorna um array com as pastas do cliente.
      operationId: obtem-as-pastas-do-cliente
      parameters:
        - name: idCliente
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna um array com as pastas do cliente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPasta"
              example:
                IDPasta: 0
                IDEscritorio: 0
                IDCliente: 0
                NumeroDaPasta: 0
                Assunto: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{idCliente}/pastasDoCaso":
    get:
      tags:
        - Casos
      summary: "/api/casos/{idCliente}/pastasDoCaso"
      description: Retorna um array com as pastas do cliente (Capa).
      operationId: obtem-as-pastas-do-cliente-capa
      parameters:
        - name: idCliente
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna um array com as pastas do cliente (Capa).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPasta"
              example:
                IDPasta: 0
                IDEscritorio: 0
                IDCliente: 0
                NumeroDaPasta: 0
                Assunto: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{id}":
    get:
      tags:
        - Casos
      summary: "/api/casos/{id}"
      description: Obtém caso.
      operationId: obtem-caso
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém caso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoCompleto"
              example:
                IDCaso: 0
                Titulo: string
                IDCliente: 0
                NomeCliente: string
                IDPasta: 0
                NomePasta: string
                IDContrato: 0
                NomeContrato: string
                NumeroInterno: string
                NumeroExterno: string
                NumeroLawoffice: 0
                IDCasoPai: 0
                Classe: 0
                DataDeCriacao: {}
                DataDeCriacaoFormatada: string
                Situacao: 0
                DataDeEntrada: {}
                DataDeEntradaFormatada: string
                Observacao: string
                DataDeDistribuicao: {}
                DataDeDistribuicaoFormatada: string
                DataDeEncerramento: {}
                DataDeEncerramentoFormatada: string
                DataPrevistaDeEncerramento: {}
                DataPrevistaDeEncerramentoFormatada: string
                Tipo: 0
                Confidencial: true
                IDArea: 0
                IDFuncionarioResponsavel: 0
                IDForo: 0
                Foro: string
                IDRito: 0
                Rito: string
                IDFaseProcesso: 0
                ExpectativaDeExito: 0
                ComentarioExpectativaDaCausa: string
                IDsCoResponsaveis:
                  - 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/id/num:
    get:
      tags:
        - Casos
      summary: /api/casos/id/num
      description: "Retorna um array de casos por identificador, numero interno ou numero externo."
      operationId: obtem-caso-por-identificador-numero-interno-ou-numero-externo
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Retorna um array de casos por identificador, numero interno ou numero externo."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoCompleto"
              example:
                IDCaso: 0
                Titulo: string
                IDCliente: 0
                NomeCliente: string
                IDPasta: 0
                NomePasta: string
                IDContrato: 0
                NomeContrato: string
                NumeroInterno: string
                NumeroExterno: string
                NumeroLawoffice: 0
                IDCasoPai: 0
                Classe: 0
                DataDeCriacao: {}
                DataDeCriacaoFormatada: string
                Situacao: 0
                DataDeEntrada: {}
                DataDeEntradaFormatada: string
                Observacao: string
                DataDeDistribuicao: {}
                DataDeDistribuicaoFormatada: string
                DataDeEncerramento: {}
                DataDeEncerramentoFormatada: string
                DataPrevistaDeEncerramento: {}
                DataPrevistaDeEncerramentoFormatada: string
                Tipo: 0
                Confidencial: true
                IDArea: 0
                IDFuncionarioResponsavel: 0
                IDForo: 0
                Foro: string
                IDRito: 0
                Rito: string
                IDFaseProcesso: 0
                ExpectativaDeExito: 0
                ComentarioExpectativaDaCausa: string
                IDsCoResponsaveis:
                  - 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/porIds/{ids}":
    get:
      tags:
        - Casos
      summary: "/api/casos/porIds/{ids}"
      description: Retorna um array de casos pelos identificadores.
      operationId: obtem-casos-pelo-identificador
      parameters:
        - name: ids
          in: path
          description: "Exemplo: [1, 10]"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retorna um array de casos pelos identificadores.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoSimples"
              example:
                IDCaso: 0
                Titulo: string
                IDCliente: 0
                NomeCliente: string
                NomeResponsavelCaso: string
                IDPasta: 0
                NomePasta: string
                IDContrato: 0
                NomeContrato: string
                NumeroInterno: string
                NumeroExterno: string
                NumeroLawoffice: 0
                IDCasoPai: 0
                Classe: 0
                DataDeCriacao: {}
                DataDeCriacaoFormatada: string
                Situacao: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/num:
    get:
      tags:
        - Casos
      summary: /api/casos/num
      description: "Retorna um array com os casos obtidos pelo identificador, numero interno ou numero externo."
      operationId: obtem-casos-pelo-identificador-numero-interno-ou-numero-externo
      parameters:
        - name: IdProcesso
          in: query
          description: "Exemplo: [1, 10]"
          schema:
            type: string
        - name: NumeroInterno
          in: query
          description: "Exemplo: [2, 20]"
          schema:
            type: string
        - name: NumeroExterno
          in: query
          description: 'Exemplo: ["1.10.100", "2.20.200"].'
          schema:
            type: string
      responses:
        "200":
          description: "Retorna um array com os casos obtidos pelo identificador, numero interno ou numero externo."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoSimples"
              example:
                IDCaso: 0
                Titulo: string
                IDCliente: 0
                NomeCliente: string
                NomeResponsavelCaso: string
                IDPasta: 0
                NomePasta: string
                IDContrato: 0
                NomeContrato: string
                NumeroInterno: string
                NumeroExterno: string
                NumeroLawoffice: 0
                IDCasoPai: 0
                Classe: 0
                DataDeCriacao: {}
                DataDeCriacaoFormatada: string
                Situacao: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos:
    get:
      tags:
        - Casos
      summary: /api/casos
      description: Retorna um array com todos os casos de acordo com o filtro informado.
      operationId: obtem-todos-os-casos
      parameters:
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Retorna um array com todos os casos de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoSimples"
              example:
                IDCaso: 0
                Titulo: string
                IDCliente: 0
                NomeCliente: string
                NomeResponsavelCaso: string
                IDPasta: 0
                NomePasta: string
                IDContrato: 0
                NomeContrato: string
                NumeroInterno: string
                NumeroExterno: string
                NumeroLawoffice: 0
                IDCasoPai: 0
                Classe: 0
                DataDeCriacao: {}
                DataDeCriacaoFormatada: string
                Situacao: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/busca:
    get:
      tags:
        - Casos
      summary: /api/casos/busca
      description: Retorna um array com os casos encontrados de acordo com o filtro informado.
      operationId: busca-casos
      parameters:
        - name: termo
          in: query
          required: true
          schema:
            type: string
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Retorna um array com os casos encontrados de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoSimples"
              example:
                IDCaso: 0
                Titulo: string
                IDCliente: 0
                NomeCliente: string
                NomeResponsavelCaso: string
                IDPasta: 0
                NomePasta: string
                IDContrato: 0
                NomeContrato: string
                NumeroInterno: string
                NumeroExterno: string
                NumeroLawoffice: 0
                IDCasoPai: 0
                Classe: 0
                DataDeCriacao: {}
                DataDeCriacaoFormatada: string
                Situacao: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/RamosJudiciais:
    get:
      tags:
        - Casos
      summary: /api/casos/RamosJudiciais
      description: Obtém os ramos judiciais.
      operationId: obtem-os-ramos-judiciais
      responses:
        "200":
          description: Retorna um array com os ramos judiciais.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOEnum"
              example:
                Valor: string
                ID: 0
                Description: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{id}/ficha":
    get:
      tags:
        - Casos
      summary: "/api/casos/{id}/ficha"
      description: Obtém a ficha do caso.
      operationId: obtem-a-ficha-do-caso
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém a ficha do caso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoFicha"
              example:
                NomeCliente: string
                Titulo: string
                NumeroInterno: string
                NumeroExterno: string
                Situacao: string
                ExpectativaDeExito: string
                NomeFilial: string
                DataDeEntrada: {}
                DataDeEntradaFormatada: string
                DataDeDistribuicao: {}
                DataDeDistribuicaoFormatada: string
                DataPrevistaDeEncerramento: {}
                DataPrevistaDeEncerramentoFormatada: string
                DataDeEncerramento: {}
                DataDeEncerramentoFormatada: string
                Foro: string
                Rito: string
                ValorCausa: 0
                ValorPrevistoCausa: 0
                ValorContingencia: 0
                IdCaso: 0
                IdFase: 0
                IdPasta: 0
                IdArea: 0
                IdResponsavel: 0
                IDsCoResponsaveis:
                  - 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/id/ficha/num:
    get:
      tags:
        - Casos
      summary: /api/casos/id/ficha/num
      description: "Retorna um array de fichas de casos encontrados de acordo com o identificador, numero interno ou numero externo."
      operationId: obtem-ficha-dos-casos-por-identificador-numero-interno-ou-numero-externo
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Retorna um array de fichas de casos encontrados de acordo com o identificador, numero interno ou numero externo."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoFicha"
              example:
                NomeCliente: string
                Titulo: string
                NumeroInterno: string
                NumeroExterno: string
                Situacao: string
                ExpectativaDeExito: string
                NomeFilial: string
                DataDeEntrada: {}
                DataDeEntradaFormatada: string
                DataDeDistribuicao: {}
                DataDeDistribuicaoFormatada: string
                DataPrevistaDeEncerramento: {}
                DataPrevistaDeEncerramentoFormatada: string
                DataDeEncerramento: {}
                DataDeEncerramentoFormatada: string
                Foro: string
                Rito: string
                ValorCausa: 0
                ValorPrevistoCausa: 0
                ValorContingencia: 0
                IdCaso: 0
                IdFase: 0
                IdPasta: 0
                IdArea: 0
                IdResponsavel: 0
                IDsCoResponsaveis:
                  - 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/meuscasos/{cdResponsavel}":
    get:
      tags:
        - Casos
      summary: "/api/casos/meuscasos/{cdResponsavel}"
      description: Retorna um array de casos onde sou responsável.
      operationId: obtem-os-casos-onde-sou-responsavel
      parameters:
        - name: cdResponsavel
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna um array de casos onde sou responsável.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoSimples"
              example:
                IDCaso: 0
                Titulo: string
                IDCliente: 0
                NomeCliente: string
                NomeResponsavelCaso: string
                IDPasta: 0
                NomePasta: string
                IDContrato: 0
                NomeContrato: string
                NumeroInterno: string
                NumeroExterno: string
                NumeroLawoffice: 0
                IDCasoPai: 0
                Classe: 0
                DataDeCriacao: {}
                DataDeCriacaoFormatada: string
                Situacao: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/{id}/compilacao/{ok}":
    get:
      tags:
        - Sessão
      summary: "/api/{id}/compilacao/{ok}"
      description: Teste do mobileservice
      operationId: teste-com-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: ok
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Resposta em todos os casos.
          content:
            application/json:
              example: O id informado foi 99 e o resultado é True
  "/api/escritorios/{IdEscritorio},{intfiltroCategoria}/categoriaspreco":
    get:
      tags:
        - Categoria
      summary: "/api/escritorios/{IdEscritorio},{intfiltroCategoria}/categoriaspreco"
      description: Retorna um array com as categorias de preço do escritório de acordo com o filtro informado.
      operationId: api-escritorios-idescritorio-intfiltrocategoria-categoriaspreco
      parameters:
        - name: IdEscritorio
          in: path
          required: true
          schema:
            type: integer
        - name: intfiltroCategoria
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna um array com as categorias de preço do escritório de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCategoriaPreco"
              example:
                IdCategoria: 0
                IdEscritorio: 0
                NomeCategoria: string
                NumeroMoeda: 0
                NumeroSituacao: 0
                ValorHoraTrabalhada: 0
                valorHoraTrabalhadaReal: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/escritorios/{IdEscritorio}/categoriaspreco":
    get:
      tags:
        - Categoria
      summary: "/api/escritorios/{IdEscritorio}/categoriaspreco"
      description: Retorna um array com as categorias de preço do escritório.
      operationId: api-escritorios-idescritorio-categoriaspreco
      parameters:
        - name: IdEscritorio
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna um array com as categorias de preço do escritório.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCategoriaPreco"
              example:
                IdCategoria: 0
                IdEscritorio: 0
                NomeCategoria: string
                NumeroMoeda: 0
                NumeroSituacao: 0
                ValorHoraTrabalhada: 0
                valorHoraTrabalhadaReal: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/funcionarios/{IdsMin},{IdsMax}/categorias":
    get:
      tags:
        - Categoria
      summary: "/api/funcionarios/{IdsMin},{IdsMax}/categorias"
      description: Retorna um array com as categorias de funcionário de acordo com o filtro informado.
      operationId: api-funcionarios-idsmin-idsmax-categorias
      parameters:
        - name: IdsMin
          in: path
          required: true
          schema:
            type: integer
        - name: IdsMax
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna um array com as categorias de funcionário de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCategoriaFuncionario"
              example:
                IdFuncionario: 0
                IdCategoria: 0
                DataInicio: {}
                DataLancamento: {}
                NomeFuncionario: string
                NomeFuncionarioTransacao: string
                NomeCategoria: string
                NomeResponsavel: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/clientes/todos:
    get:
      tags:
        - Cliente
      summary: /api/clientes/todos
      description: Retorna um array com todos os clientes.
      operationId: api-clientes-todos
      responses:
        "200":
          description: Retorna um array com todos os clientes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCliente"
              example:
                IDCliente: 0
                NumeroDoCliente: 0
                Nome: string
                Apelido: string
                Tipo: 0
                Email: string
                Situacao: 0
                MotivoInativacao: string
                WebSite: string
                Observacoes: string
                CPFCNPJ: string
                TratoConfidencial: true
                InscricaoMunicipal: string
                DataCriacao: {}
                Estrangeiro: true
                InscricaoEstadual: string
                Idioma: string
                TipoEndereco: 0
                Logradouro: string
                Numero: string
                Complemento: string
                Bairro: string
                Cidade: string
                Estado: string
                CEP: string
                Pais: string
                EnderecoPrincipal: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/clientes/porDomain/{domain}":
    get:
      tags:
        - Cliente
      summary: "/api/clientes/porDomain/{domain}"
      description: Retorna um array com todos os clientes de acordo com o escritório informado.
      operationId: api-clientes-pordomain-domain
      parameters:
        - name: domain
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retorna um array com todos os clientes de acordo com o escritório informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCliente"
              example:
                IDCliente: 0
                NumeroDoCliente: 0
                Nome: string
                Apelido: string
                Tipo: 0
                Email: string
                Situacao: 0
                MotivoInativacao: string
                WebSite: string
                Observacoes: string
                CPFCNPJ: string
                TratoConfidencial: true
                InscricaoMunicipal: string
                DataCriacao: {}
                Estrangeiro: true
                InscricaoEstadual: string
                Idioma: string
                TipoEndereco: 0
                Logradouro: string
                Numero: string
                Complemento: string
                Bairro: string
                Cidade: string
                Estado: string
                CEP: string
                Pais: string
                EnderecoPrincipal: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/clientes/ficha:
    get:
      tags:
        - Cliente
      summary: /api/clientes/ficha
      description: Obtém a ficha do cliente de acordo com o identificador informado.
      operationId: api-clientes-ficha
      parameters:
        - name: idCliente
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém a ficha do cliente de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCliente"
              example:
                IDCliente: 0
                NumeroDoCliente: 0
                Nome: string
                Apelido: string
                Tipo: 0
                Email: string
                Situacao: 0
                MotivoInativacao: string
                WebSite: string
                Observacoes: string
                CPFCNPJ: string
                TratoConfidencial: true
                InscricaoMunicipal: string
                DataCriacao: {}
                Estrangeiro: true
                InscricaoEstadual: string
                Idioma: string
                TipoEndereco: 0
                Logradouro: string
                Numero: string
                Complemento: string
                Bairro: string
                Cidade: string
                Estado: string
                CEP: string
                Pais: string
                EnderecoPrincipal: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/clientes/ficha_mobile:
    get:
      tags:
        - Cliente
      summary: /api/clientes/ficha_mobile
      description: Obtém a ficha do cliente para o mobile de acordo com o identificador informado.
      operationId: api-clientes-ficha-mobile
      parameters:
        - name: idCliente
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém a ficha do cliente para o mobile de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOClienteMobile"
              example:
                IDCliente: 0
                NumeroDoCliente: 0
                Nome: string
                Apelido: string
                Tipo: 0
                Email: string
                Situacao: 0
                MotivoInativacao: string
                WebSite: string
                Observacoes: string
                CPFCNPJ: string
                TratoConfidencial: true
                InscricaoMunicipal: string
                DataCriacao: {}
                Estrangeiro: true
                InscricaoEstadual: string
                Idioma: string
                TipoEndereco: 0
                Logradouro: string
                Numero: string
                Complemento: string
                Bairro: string
                Cidade: string
                Estado: string
                CEP: string
                Pais: string
                EnderecoPrincipal: 0
                inTemLEDES: true
                inNecessitaDeSolicitanteParaLancamentoDeHoras: true
                Status: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/clientes:
    get:
      tags:
        - Cliente
      summary: /api/clientes
      description: Obtém um array com os clientes de acordo com o filtro informado.
      operationId: api-clientes
      parameters:
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
        - name: apenasMeusCasos
          in: query
          description: "Default: false"
          schema:
            type: string
        - name: clientesSemCasos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com os clientes de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCliente"
              example:
                IDCliente: 0
                NumeroDoCliente: 0
                Nome: string
                Apelido: string
                Tipo: 0
                Email: string
                Situacao: 0
                MotivoInativacao: string
                WebSite: string
                Observacoes: string
                CPFCNPJ: string
                TratoConfidencial: true
                InscricaoMunicipal: string
                DataCriacao: {}
                Estrangeiro: true
                InscricaoEstadual: string
                Idioma: string
                TipoEndereco: 0
                Logradouro: string
                Numero: string
                Complemento: string
                Bairro: string
                Cidade: string
                Estado: string
                CEP: string
                Pais: string
                EnderecoPrincipal: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/clientes/enderecos:
    get:
      tags:
        - Cliente
      summary: /api/clientes/enderecos
      description: Obtém um array com os endereços dos clientes.
      operationId: api-clientes-enderecos
      responses:
        "200":
          description: Obtém um array com os endereços dos clientes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOEnderecoCliente"
              example:
                IDCliente: 0
                NumeroDoCliente: 0
                TipoEndereco: 0
                Logradouro: string
                Numero: string
                Complemento: string
                Bairro: string
                Cidade: string
                Estado: string
                CEP: string
                Pais: string
                EnderecoPrincipal: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/clientes/mobile:
    get:
      tags:
        - Cliente
      summary: /api/clientes/mobile
      description: Obtém um array com os clientes para o mobile de acordo com o filtro informado.
      operationId: api-clientes-mobile
      parameters:
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
        - name: apenasMeusCasos
          in: query
          description: "Default: false"
          schema:
            type: string
        - name: clientesSemCasos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com os clientes para o mobile de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOClienteMobile"
              example:
                IDCliente: 0
                NumeroDoCliente: 0
                Nome: string
                Apelido: string
                Tipo: 0
                Email: string
                Situacao: 0
                MotivoInativacao: string
                WebSite: string
                Observacoes: string
                CPFCNPJ: string
                TratoConfidencial: true
                InscricaoMunicipal: string
                DataCriacao: {}
                Estrangeiro: true
                InscricaoEstadual: string
                Idioma: string
                TipoEndereco: 0
                Logradouro: string
                Numero: string
                Complemento: string
                Bairro: string
                Cidade: string
                Estado: string
                CEP: string
                Pais: string
                EnderecoPrincipal: 0
                inTemLEDES: true
                inNecessitaDeSolicitanteParaLancamentoDeHoras: true
                Status: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/clientes/{id}":
    get:
      tags:
        - Cliente
      summary: "/api/clientes/{id}"
      description: Obtém o cliente de acordo com o identificador informado.
      operationId: api-clientes-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém o cliente de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCliente"
              example:
                IDCliente: 0
                NumeroDoCliente: 0
                Nome: string
                Apelido: string
                Tipo: 0
                Email: string
                Situacao: 0
                MotivoInativacao: string
                WebSite: string
                Observacoes: string
                CPFCNPJ: string
                TratoConfidencial: true
                InscricaoMunicipal: string
                DataCriacao: {}
                Estrangeiro: true
                InscricaoEstadual: string
                Idioma: string
                TipoEndereco: 0
                Logradouro: string
                Numero: string
                Complemento: string
                Bairro: string
                Cidade: string
                Estado: string
                CEP: string
                Pais: string
                EnderecoPrincipal: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/clientes/porIds/{idsClientes}":
    get:
      tags:
        - Cliente
      summary: "/api/clientes/porIds/{idsClientes}"
      description: Obtém um array com os clientes de acordo com os identificadores informados.
      operationId: api-clientes-porids-idsclientes
      parameters:
        - name: idsClientes
          in: path
          description: "Exemplo: [1, 15]"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com os clientes de acordo com os identificadores informados.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCliente"
              example:
                IDCliente: 0
                NumeroDoCliente: 0
                Nome: string
                Apelido: string
                Tipo: 0
                Email: string
                Situacao: 0
                MotivoInativacao: string
                WebSite: string
                Observacoes: string
                CPFCNPJ: string
                TratoConfidencial: true
                InscricaoMunicipal: string
                DataCriacao: {}
                Estrangeiro: true
                InscricaoEstadual: string
                Idioma: string
                TipoEndereco: 0
                Logradouro: string
                Numero: string
                Complemento: string
                Bairro: string
                Cidade: string
                Estado: string
                CEP: string
                Pais: string
                EnderecoPrincipal: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/ContaDeAcesso/ObtemContaDeAcesso:
    get:
      tags:
        - ContaDeAcesso
      summary: /api/ContaDeAcesso/ObtemContaDeAcesso
      description: Obtém a conta de acesso de acordo com o usuário e escritório.
      operationId: api-contadeacesso-obtemcontadeacesso
      parameters:
        - name: nomeUsuario
          in: query
          required: true
          schema:
            type: string
        - name: domain
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Obtém a conta de acesso de acordo com o usuário e escritório.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOContaDeAcesso"
              example:
                IDFuncionario: 0
                Conta: string
                IsPrimeiroAcesso: true
                IsOldPassword: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/contatos/{id}":
    get:
      tags:
        - Contato
      summary: "/api/contatos/{id}"
      description: Obtém o contato de acordo com o identificador informado.
      operationId: api-contatos-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém o contato de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOContato"
              example:
                IDContato: 0
                IDCliente: 0
                Nome: string
                Email: string
                Cargo: string
                CodigoPais: 0
                DDD: 0
                Telefone: 0
                Ramal: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/contatos:
    get:
      tags:
        - Contato
      summary: /api/contatos
      description: Obtém um array com os contatos.
      operationId: api-contatos
      responses:
        "200":
          description: Obtém um array com os contatos.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOContato"
              example:
                IDContato: 0
                IDCliente: 0
                Nome: string
                Email: string
                Cargo: string
                CodigoPais: 0
                DDD: 0
                Telefone: 0
                Ramal: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/clientes/{idCliente}/contatos":
    get:
      tags:
        - Contato
      summary: "/api/clientes/{idCliente}/contatos"
      description: Obtém um array com os contatos do cliente de acordo com o identificador do cliente informado.
      operationId: api-clientes-idcliente-contatos
      parameters:
        - name: idCliente
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os contatos do cliente de acordo com o identificador do cliente informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOContato"
              example:
                IDContato: 0
                IDCliente: 0
                Nome: string
                Email: string
                Cargo: string
                CodigoPais: 0
                DDD: 0
                Telefone: 0
                Ramal: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/contatos/solicitantes:
    get:
      tags:
        - Contato
      summary: /api/contatos/solicitantes
      description: Obtém um array com os solicitantes do cliente de acordo com o identificador do cliente informado.
      operationId: api-contatos-solicitantes
      parameters:
        - name: codCliente
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os solicitantes do cliente de acordo com o identificador do cliente informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOSolicitante"
              example:
                DsNome: string
                CdSolicitante: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/contratos/{id}":
    get:
      tags:
        - Contrato
      summary: "/api/contratos/{id}"
      description: Obtém o contrato de acordo com o identificador informado.
      operationId: api-contratos-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém o contrato de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOContrato"
              example:
                IDContrato: 0
                Titulo: string
                IDCliente: 0
                NomeCliente: string
                Observacao: string
                DataInicio: {}
                DataPrevisaoEncerramento: {}
                DataEncerramento: {}
                Situacao: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/clientes/{idCliente}/contratos":
    get:
      tags:
        - Contrato
      summary: "/api/clientes/{idCliente}/contratos"
      description: Obtém um array com os contratos do cliente de acordo com o filtro informado.
      operationId: api-clientes-idcliente-contratos
      parameters:
        - name: idCliente
          in: path
          required: true
          schema:
            type: integer
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com os contratos do cliente de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOContrato"
              example:
                IDContrato: 0
                Titulo: string
                IDCliente: 0
                NomeCliente: string
                Observacao: string
                DataInicio: {}
                DataPrevisaoEncerramento: {}
                DataEncerramento: {}
                Situacao: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/contratos/{idCliente}/contratosCliente":
    get:
      tags:
        - Contrato
      summary: "/api/contratos/{idCliente}/contratosCliente"
      description: Obtém um array com os contratos do cliente de acordo com o filtro informado.
      operationId: api-contratos-idcliente-contratoscliente
      parameters:
        - name: idCliente
          in: path
          required: true
          schema:
            type: integer
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com os contratos do cliente de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOContrato"
              example:
                IDContrato: 0
                Titulo: string
                IDCliente: 0
                NomeCliente: string
                Observacao: string
                DataInicio: {}
                DataPrevisaoEncerramento: {}
                DataEncerramento: {}
                Situacao: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{idCaso}/contratosimples":
    get:
      tags:
        - Contrato
      summary: "/api/casos/{idCaso}/contratosimples"
      description: Obtém o contrato simples de acordo com o identificador informado.
      operationId: api-casos-idcaso-contratosimples
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém o contrato simples de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOContratoSimples"
              example:
                Titulo: string
                IDCliente: 0
                Descricao: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/contratos:
    get:
      tags:
        - Contrato
      summary: /api/contratos
      description: Obtém um array com os contratos de acordo com o filtro informado.
      operationId: api-contratos
      parameters:
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com os contratos de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOContrato"
              example:
                IDContrato: 0
                Titulo: string
                IDCliente: 0
                NomeCliente: string
                Observacao: string
                DataInicio: {}
                DataPrevisaoEncerramento: {}
                DataEncerramento: {}
                Situacao: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{idCaso}/dadoscomplementares":
    get:
      tags:
        - DadosComplementares
      summary: "/api/casos/{idCaso}/dadoscomplementares"
      description: Obtém um array com os dados complementares de acordo com o identificador do caso.
      operationId: api-casos-idcaso-dadoscomplementares
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os dados complementares de acordo com o identificador do caso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTODadoComplementar"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                Nome: string
                TipoCampo: string
                Valores:
                  - string
                IdCaso: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/num/dadoscomplementares:
    get:
      tags:
        - DadosComplementares
      summary: /api/casos/num/dadoscomplementares
      description: "Obtém um array com os dados complementares pelo numero interno, numero externo ou identificador do caso."
      operationId: api-casos-num-dadoscomplementares
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com os dados complementares pelo numero interno, numero externo ou identificador do caso."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTODadoComplementar"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                Nome: string
                TipoCampo: string
                Valores:
                  - string
                IdCaso: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{idCaso}/Decisoes":
    get:
      tags:
        - Decisões
      summary: "/api/casos/{idCaso}/Decisoes"
      description: Obtém um array com as decisões do caso informado.
      operationId: api-casos-idcaso-decisoes
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as decisões do caso informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoDecisao"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                DataDecisao: {}
                DataDecisaoFormatada: string
                Observacao: string
                ValorDeferido: 0
                ExitoPerda: string
                Decisao: string
                Encerramento: true
                IdCasoDecisao: 0
                IdCaso: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/num/decisoes:
    get:
      tags:
        - Decisões
      summary: /api/casos/num/decisoes
      description: "Obtém um array com as decisões do caso pelo numero interno, numero externo ou pelo identificador do caso."
      operationId: api-casos-num-decisoes
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com as decisões do caso pelo numero interno, numero externo ou pelo identificador do caso."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoDecisao"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                DataDecisao: {}
                DataDecisaoFormatada: string
                Observacao: string
                ValorDeferido: 0
                ExitoPerda: string
                Decisao: string
                Encerramento: true
                IdCasoDecisao: 0
                IdCaso: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/despesas/totaldespesasmes:
    get:
      tags:
        - Despesas
      summary: /api/despesas/totaldespesasmes
      description: Obtém o total de despesas por tipo no mês.
      operationId: api-despesas-totaldespesasmes
      responses:
        "200":
          description: Obtém o total de despesas por tipo no mês.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOTotalGastoDespesas"
              example:
                Gastos:
                  - TipoDespesa: string
                    TotalGasto: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/despesas/proximoslancamentos:
    get:
      tags:
        - Despesas
      summary: /api/despesas/proximoslancamentos
      description: Obtém um array com os próximos lançamentos de despesa por profissional.
      operationId: api-despesas-proximoslancamentos
      parameters:
        - name: dataDespesaString
          in: query
          description: "Exemplo: 2021-08-25T12:00:00.000"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com os próximos lançamentos de despesa por profissional.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTODespesa"
              example:
                ObservacaoAnexo: string
                Anexos:
                  - path: string
                    name: string
                    type: string
                    size: 0
                    cdAnexo: 0
                    base64: string
                    anexoAExcluir: true
                    rotacionarImagem: true
                    isSelected: true
                    title: string
                    value: string
                CategoriaLancamento: string
                DataDaDespesa: {}
                DataDaDespesaFormatada: string
                ValorDaDespesa: 0
                IDFuncionarioTransacao: 0
                DataTransacao: {}
                DataTransacaoFormatada: string
                Moeda: 0
                IDFuncionarioFavorecido: 0
                IDCategoriaLancamento: 0
                IDVoucher: 0
                IDLiberacao: 0
                IDFornecedor: 0
                Documento: string
                TipoDePagamento: 0
                IDEscritorio: 0
                QtdKMRodado: 0
                TextoDaDespesa: string
                TemTextoModificado: true
                ValorKMRodado: 0
                Situacao: 0
                DataAprovacao: {}
                DataAprovacaoFormatada: string
                ObservacaoAprovador: string
                IDFuncionarioAprovador: 0
                IDFuncionarioIndicado: 0
                IDTarifacao: 0
                IDSolicitacaoMaterialItem: 0
                IDGeracaoDespesa: 0
                IDDespesa: 0
                Alocacoes:
                  - IDAlocacaoDeDespesa: 0
                    IDDespesa: 0
                    IDCliente: 0
                    IDContrato: 0
                    IDCaso: 0
                    PorcentagemAlocada: 0
                    ValorAlocado: 0
                    IDFechamento: 0
                    IDCategoriaDeDespesa: 0
                    Caso:
                      IDCaso: 0
                      Titulo: string
                      IDCliente: 0
                      NomeCliente: string
                      NomeResponsavelCaso: string
                      IDPasta: 0
                      NomePasta: string
                      IDContrato: 0
                      NomeContrato: string
                      NumeroInterno: string
                      NumeroExterno: string
                      NumeroLawoffice: 0
                      IDCasoPai: 0
                      Classe: 0
                      DataDeCriacao: {}
                      DataDeCriacaoFormatada: string
                      Situacao: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/despesas/adiantamentosliberados:
    get:
      tags:
        - Despesas
      summary: /api/despesas/adiantamentosliberados
      description: Obtém um array com os adiantamentos em aberto.
      operationId: api-despesas-adiantamentosliberados
      responses:
        "200":
          description: Obtém um array com os adiantamentos em aberto.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOLiberacao"
              example:
                DataUltimaLiberacao: {}
                Descricao: string
                ID: 0
                Situacao: 0
                ValorDespesasLancadas: 0
                ValorLiberado: 0
                Adiantamento: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/despesas/adiantamentos/categorias:
    get:
      tags:
        - Despesas
      summary: /api/despesas/adiantamentos/categorias
      description: Obtém um array com as categorias de adiantamento.
      operationId: api-despesas-adiantamentos-categorias
      responses:
        "200":
          description: Obtém um array com as categorias de adiantamento.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCategoriaDespesa"
              example:
                NomeCategoria: string
                IDCategoria: 0
                IDCategoriaPai: 0
                IsKmRodado: false
                SubCategorias:
                  - NomeCategoria: string
                    IDCategoria: 0
                    IDCategoriaPai: 0
                    IsKmRodado: false
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/despesas/adiantamentos/fornecedores:
    get:
      tags:
        - Despesas
      summary: /api/despesas/adiantamentos/fornecedores
      description: Obtém um array com os fornecedores de adiantamento.
      operationId: api-despesas-adiantamentos-fornecedores
      responses:
        "200":
          description: Obtém um array com os fornecedores de adiantamento.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFornecedor"
              example:
                IDFornecedor: 0
                Nome: string
                DDD: 0
                Telefone: string
                Extensao: string
                Banco: string
                Agencia: string
                ContaBanco: string
                Logradouro: string
                NumeroDoEndereco: string
                Complemento: string
                Bairro: string
                Cidade: string
                Estado: string
                CEP: string
                Observacao: string
                HomePage: string
                DataUltimoLancamento: {}
                Pais: string
                IDEscritorio: 0
                CPFCNPJ: string
                Tipo: string
                Email: string
                DsCodigoSAP: string
                DsCodigoOriginal: string
                IDFuncionarioVinculado: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/despesas/reembolsos/categorias:
    get:
      tags:
        - Despesas
      summary: /api/despesas/reembolsos/categorias
      description: Obtém um array com as categorias de reembolso.
      operationId: api-despesas-reembolsos-categorias
      responses:
        "200":
          description: Obtém um array com as categorias de reembolso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCategoriaDespesa"
              example:
                NomeCategoria: string
                IDCategoria: 0
                IDCategoriaPai: 0
                IsKmRodado: false
                SubCategorias:
                  - NomeCategoria: string
                    IDCategoria: 0
                    IDCategoriaPai: 0
                    IsKmRodado: false
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/despesas/reembolsos/fornecedores:
    get:
      tags:
        - Despesas
      summary: /api/despesas/reembolsos/fornecedores
      description: Obtém um array com os fornecedores de reembolso.
      operationId: api-despesas-reembolsos-fornecedores
      responses:
        "200":
          description: Obtém um array com os fornecedores de reembolso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFornecedor"
              example:
                IDFornecedor: 0
                Nome: string
                DDD: 0
                Telefone: string
                Extensao: string
                Banco: string
                Agencia: string
                ContaBanco: string
                Logradouro: string
                NumeroDoEndereco: string
                Complemento: string
                Bairro: string
                Cidade: string
                Estado: string
                CEP: string
                Observacao: string
                HomePage: string
                DataUltimoLancamento: {}
                Pais: string
                IDEscritorio: 0
                CPFCNPJ: string
                Tipo: string
                Email: string
                DsCodigoSAP: string
                DsCodigoOriginal: string
                IDFuncionarioVinculado: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/despesas/voucher:
    get:
      tags:
        - Despesas
      summary: /api/despesas/voucher
      description: Obtém um array com os vouchers permitidos do funcionário.
      operationId: api-despesas-voucher
      responses:
        "200":
          description: Obtém um array com os vouchers permitidos do funcionário.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOVoucher"
              example:
                Observacao: string
                IDFornecedor: 0
                Nome: string
                ID: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/despesas/voucher/{idVoucher}/categorias":
    get:
      tags:
        - Despesas
      summary: "/api/despesas/voucher/{idVoucher}/categorias"
      description: Obtém um array com as categorias do voucher de acordo com o identificador de voucher informado.
      operationId: api-despesas-voucher-idvoucher-categorias
      parameters:
        - name: idVoucher
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as categorias do voucher de acordo com o identificador de voucher informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCategoriaDespesa"
              example:
                NomeCategoria: string
                IDCategoria: 0
                IDCategoriaPai: 0
                IsKmRodado: false
                SubCategorias:
                  - NomeCategoria: string
                    IDCategoria: 0
                    IDCategoriaPai: 0
                    IsKmRodado: false
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/despesas/voucher/{idVoucher}/fornecedores":
    get:
      tags:
        - Despesas
      summary: "/api/despesas/voucher/{idVoucher}/fornecedores"
      description: Obtém um array com os fornecedores do voucher de acordo com  identificador do voucher informado.
      operationId: api-despesas-voucher-idvoucher-fornecedores
      parameters:
        - name: idVoucher
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os fornecedores do voucher de acordo com  identificador do voucher informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFornecedor"
              example:
                IDFornecedor: 0
                Nome: string
                DDD: 0
                Telefone: string
                Extensao: string
                Banco: string
                Agencia: string
                ContaBanco: string
                Logradouro: string
                NumeroDoEndereco: string
                Complemento: string
                Bairro: string
                Cidade: string
                Estado: string
                CEP: string
                Observacao: string
                HomePage: string
                DataUltimoLancamento: {}
                Pais: string
                IDEscritorio: 0
                CPFCNPJ: string
                Tipo: string
                Email: string
                DsCodigoSAP: string
                DsCodigoOriginal: string
                IDFuncionarioVinculado: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/despesas/obtem:
    get:
      tags:
        - Despesas
      summary: /api/despesas/obtem
      description: Obtém um array com as despesas em aberto de acordo com o filtro informado.
      operationId: api-despesas
      parameters:
        - name: tipoDePagamento
          in: query
          description: "1: Fundo fixo, 2: Voucher, 3: Reembolso, 4: Contas a pagar, 5: Estorno"
          schema:
            type: integer
        - name: ano
          in: query
          required: true
          schema:
            type: integer
        - name: mes
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as despesas em aberto de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTODespesa"
              example:
                ObservacaoAnexo: string
                Anexos:
                  - path: string
                    name: string
                    type: string
                    size: 0
                    cdAnexo: 0
                    base64: string
                    anexoAExcluir: false
                    rotacionarImagem: false
                    isSelected: false
                    title: string
                    value: string
                CategoriaLancamento: string
                DataDaDespesa: {}
                DataDaDespesaFormatada: string
                ValorDaDespesa: 0
                IDFuncionarioTransacao: 0
                DataTransacao: {}
                DataTransacaoFormatada: string
                Moeda: 0
                IDFuncionarioFavorecido: 0
                IDCategoriaLancamento: 0
                IDVoucher: 0
                IDLiberacao: 0
                IDFornecedor: 0
                Documento: string
                TipoDePagamento: 0
                IDEscritorio: 0
                QtdKMRodado: 0
                TextoDaDespesa: string
                TemTextoModificado: false
                ValorKMRodado: 0
                Situacao: 0
                DataAprovacao: {}
                DataAprovacaoFormatada: string
                ObservacaoAprovador: string
                IDFuncionarioAprovador: 0
                IDFuncionarioIndicado: 0
                IDTarifacao: 0
                IDSolicitacaoMaterialItem: 0
                IDGeracaoDespesa: 0
                IDDespesa: 0
                Alocacoes:
                  - IDAlocacaoDeDespesa: 0
                    IDDespesa: 0
                    IDCliente: 0
                    IDContrato: 0
                    IDCaso: 0
                    PorcentagemAlocada: 0
                    ValorAlocado: 0
                    IDFechamento: 0
                    IDCategoriaDeDespesa: 0
                    Caso:
                      IDCaso: 0
                      Titulo: string
                      IDCliente: 0
                      NomeCliente: string
                      NomeResponsavelCaso: string
                      IDPasta: 0
                      NomePasta: string
                      IDContrato: 0
                      NomeContrato: string
                      NumeroInterno: string
                      NumeroExterno: string
                      NumeroLawoffice: 0
                      IDCasoPai: 0
                      Classe: 0
                      DataDeCriacao: {}
                      DataDeCriacaoFormatada: string
                      Situacao: 0
                IsEditable: false
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/despesas/valorKMRodado:
    get:
      tags:
        - Despesas
      summary: /api/despesas/valorKMRodado
      description: Obtém o valor do KM rodado.
      operationId: api-despesas-valorkmrodado
      responses:
        "200":
          description: Obtém o valor do KM rodado.
          content:
            application/json:
              example: 1
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/despesas/obtem/{id}":
    get:
      tags:
        - Despesas
      summary: "/api/despesas/obtem/{id}"
      description: Obtém a despesa de acordo com o identificador da despesa informado.
      operationId: api-despesas-obtem-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém a despesa de acordo com o identificador da despesa informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTODespesa"
              example:
                ObservacaoAnexo: string
                Anexos:
                  - path: string
                    name: string
                    type: string
                    size: 0
                    cdAnexo: 0
                    base64: string
                    anexoAExcluir: false
                    rotacionarImagem: false
                    isSelected: false
                    title: string
                    value: string
                CategoriaLancamento: string
                DataDaDespesa: {}
                DataDaDespesaFormatada: string
                ValorDaDespesa: 0
                IDFuncionarioTransacao: 0
                DataTransacao: {}
                DataTransacaoFormatada: string
                Moeda: 0
                IDFuncionarioFavorecido: 0
                IDCategoriaLancamento: 0
                IDVoucher: 0
                IDLiberacao: 0
                IDFornecedor: 0
                Documento: string
                TipoDePagamento: 0
                IDEscritorio: 0
                QtdKMRodado: 0
                TextoDaDespesa: string
                TemTextoModificado: false
                ValorKMRodado: 0
                Situacao: 0
                DataAprovacao: {}
                DataAprovacaoFormatada: string
                ObservacaoAprovador: string
                IDFuncionarioAprovador: 0
                IDFuncionarioIndicado: 0
                IDTarifacao: 0
                IDSolicitacaoMaterialItem: 0
                IDGeracaoDespesa: 0
                IDDespesa: 0
                Alocacoes:
                  - IDAlocacaoDeDespesa: 0
                    IDDespesa: 0
                    IDCliente: 0
                    IDContrato: 0
                    IDCaso: 0
                    PorcentagemAlocada: 0
                    ValorAlocado: 0
                    IDFechamento: 0
                    IDCategoriaDeDespesa: 0
                    Caso:
                      IDCaso: 0
                      Titulo: string
                      IDCliente: 0
                      NomeCliente: string
                      NomeResponsavelCaso: string
                      IDPasta: 0
                      NomePasta: string
                      IDContrato: 0
                      NomeContrato: string
                      NumeroInterno: string
                      NumeroExterno: string
                      NumeroLawoffice: 0
                      IDCasoPai: 0
                      Classe: 0
                      DataDeCriacao: {}
                      DataDeCriacaoFormatada: string
                      Situacao: 0
                IsEditable: false
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/despesas/inclui:
    post:
      tags:
        - Despesas
      summary: /api/despesas/inclui
      description: Inclui a despesa e retorna a despesa que foi incluída.
      operationId: api-despesas-inclui
      parameters:
        - name: selecionaAprovador
          in: query
          description: "Default: false"
          schema:
            type: boolean
      requestBody:
        description: A despesa a incluir
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTODespesa"
            example:
              ObservacaoAnexo: string
              Anexos:
                - path: string
                  name: string
                  type: string
                  size: 0
                  cdAnexo: 0
                  base64: string
                  anexoAExcluir: false
                  rotacionarImagem: false
                  isSelected: false
                  title: string
                  value: string
              CategoriaLancamento: string
              DataDaDespesa: {}
              DataDaDespesaFormatada: string
              ValorDaDespesa: 0
              IDFuncionarioTransacao: 0
              DataTransacao: {}
              DataTransacaoFormatada: string
              Moeda: 0
              IDFuncionarioFavorecido: 0
              IDCategoriaLancamento: 0
              IDVoucher: 0
              IDLiberacao: 0
              IDFornecedor: 0
              Documento: string
              TipoDePagamento: 0
              IDEscritorio: 0
              QtdKMRodado: 0
              TextoDaDespesa: string
              TemTextoModificado: false
              ValorKMRodado: 0
              Situacao: 0
              DataAprovacao: {}
              DataAprovacaoFormatada: string
              ObservacaoAprovador: string
              IDFuncionarioAprovador: 0
              IDFuncionarioIndicado: 0
              IDTarifacao: 0
              IDSolicitacaoMaterialItem: 0
              IDGeracaoDespesa: 0
              IDDespesa: 0
              Alocacoes:
                - IDAlocacaoDeDespesa: 0
                  IDDespesa: 0
                  IDCliente: 0
                  IDContrato: 0
                  IDCaso: 0
                  PorcentagemAlocada: 0
                  ValorAlocado: 0
                  IDFechamento: 0
                  IDCategoriaDeDespesa: 0
                  Caso:
                    IDCaso: 0
                    Titulo: string
                    IDCliente: 0
                    NomeCliente: string
                    NomeResponsavelCaso: string
                    IDPasta: 0
                    NomePasta: string
                    IDContrato: 0
                    NomeContrato: string
                    NumeroInterno: string
                    NumeroExterno: string
                    NumeroLawoffice: 0
                    IDCasoPai: 0
                    Classe: 0
                    DataDeCriacao: {}
                    DataDeCriacaoFormatada: string
                    Situacao: 0
              IsEditable: false
      responses:
        "200":
          description: Inclui a despesa e retorna a despesa que foi incluída.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTODespesa"
              example:
                ObservacaoAnexo: string
                Anexos:
                  - path: string
                    name: string
                    type: string
                    size: 0
                    cdAnexo: 0
                    base64: string
                    anexoAExcluir: false
                    rotacionarImagem: false
                    isSelected: false
                    title: string
                    value: string
                CategoriaLancamento: string
                DataDaDespesa: {}
                DataDaDespesaFormatada: string
                ValorDaDespesa: 0
                IDFuncionarioTransacao: 0
                DataTransacao: {}
                DataTransacaoFormatada: string
                Moeda: 0
                IDFuncionarioFavorecido: 0
                IDCategoriaLancamento: 0
                IDVoucher: 0
                IDLiberacao: 0
                IDFornecedor: 0
                Documento: string
                TipoDePagamento: 0
                IDEscritorio: 0
                QtdKMRodado: 0
                TextoDaDespesa: string
                TemTextoModificado: false
                ValorKMRodado: 0
                Situacao: 0
                DataAprovacao: {}
                DataAprovacaoFormatada: string
                ObservacaoAprovador: string
                IDFuncionarioAprovador: 0
                IDFuncionarioIndicado: 0
                IDTarifacao: 0
                IDSolicitacaoMaterialItem: 0
                IDGeracaoDespesa: 0
                IDDespesa: 0
                Alocacoes:
                  - IDAlocacaoDeDespesa: 0
                    IDDespesa: 0
                    IDCliente: 0
                    IDContrato: 0
                    IDCaso: 0
                    PorcentagemAlocada: 0
                    ValorAlocado: 0
                    IDFechamento: 0
                    IDCategoriaDeDespesa: 0
                    Caso:
                      IDCaso: 0
                      Titulo: string
                      IDCliente: 0
                      NomeCliente: string
                      NomeResponsavelCaso: string
                      IDPasta: 0
                      NomePasta: string
                      IDContrato: 0
                      NomeContrato: string
                      NumeroInterno: string
                      NumeroExterno: string
                      NumeroLawoffice: 0
                      IDCasoPai: 0
                      Classe: 0
                      DataDeCriacao: {}
                      DataDeCriacaoFormatada: string
                      Situacao: 0
                IsEditable: false
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/despesas/atualiza:
    put:
      tags:
        - Despesas
      summary: /api/despesas/atualiza
      description: Atualiza a despesa e retorna a despesa que foi atualizada.
      operationId: api-despesas-atualiza
      parameters:
        - name: selecionaAprovador
          in: query
          description: "Default: false"
          schema:
            type: boolean
      requestBody:
        description: A despesa a atualizar.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTODespesa"
            example:
              ObservacaoAnexo: string
              Anexos:
                - path: string
                  name: string
                  type: string
                  size: 0
                  cdAnexo: 0
                  base64: string
                  anexoAExcluir: false
                  rotacionarImagem: false
                  isSelected: false
                  title: string
                  value: string
              CategoriaLancamento: string
              DataDaDespesa: {}
              DataDaDespesaFormatada: string
              ValorDaDespesa: 0
              IDFuncionarioTransacao: 0
              DataTransacao: {}
              DataTransacaoFormatada: string
              Moeda: 0
              IDFuncionarioFavorecido: 0
              IDCategoriaLancamento: 0
              IDVoucher: 0
              IDLiberacao: 0
              IDFornecedor: 0
              Documento: string
              TipoDePagamento: 0
              IDEscritorio: 0
              QtdKMRodado: 0
              TextoDaDespesa: string
              TemTextoModificado: false
              ValorKMRodado: 0
              Situacao: 0
              DataAprovacao: {}
              DataAprovacaoFormatada: string
              ObservacaoAprovador: string
              IDFuncionarioAprovador: 0
              IDFuncionarioIndicado: 0
              IDTarifacao: 0
              IDSolicitacaoMaterialItem: 0
              IDGeracaoDespesa: 0
              IDDespesa: 0
              Alocacoes:
                - IDAlocacaoDeDespesa: 0
                  IDDespesa: 0
                  IDCliente: 0
                  IDContrato: 0
                  IDCaso: 0
                  PorcentagemAlocada: 0
                  ValorAlocado: 0
                  IDFechamento: 0
                  IDCategoriaDeDespesa: 0
                  Caso:
                    IDCaso: 0
                    Titulo: string
                    IDCliente: 0
                    NomeCliente: string
                    NomeResponsavelCaso: string
                    IDPasta: 0
                    NomePasta: string
                    IDContrato: 0
                    NomeContrato: string
                    NumeroInterno: string
                    NumeroExterno: string
                    NumeroLawoffice: 0
                    IDCasoPai: 0
                    Classe: 0
                    DataDeCriacao: {}
                    DataDeCriacaoFormatada: string
                    Situacao: 0
              IsEditable: false
      responses:
        "200":
          description: Atualiza a despesa e retorna a despesa que foi atualizada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTODespesa"
              example:
                ObservacaoAnexo: string
                Anexos:
                  - path: string
                    name: string
                    type: string
                    size: 0
                    cdAnexo: 0
                    base64: string
                    anexoAExcluir: false
                    rotacionarImagem: false
                    isSelected: false
                    title: string
                    value: string
                CategoriaLancamento: string
                DataDaDespesa: {}
                DataDaDespesaFormatada: string
                ValorDaDespesa: 0
                IDFuncionarioTransacao: 0
                DataTransacao: {}
                DataTransacaoFormatada: string
                Moeda: 0
                IDFuncionarioFavorecido: 0
                IDCategoriaLancamento: 0
                IDVoucher: 0
                IDLiberacao: 0
                IDFornecedor: 0
                Documento: string
                TipoDePagamento: 0
                IDEscritorio: 0
                QtdKMRodado: 0
                TextoDaDespesa: string
                TemTextoModificado: false
                ValorKMRodado: 0
                Situacao: 0
                DataAprovacao: {}
                DataAprovacaoFormatada: string
                ObservacaoAprovador: string
                IDFuncionarioAprovador: 0
                IDFuncionarioIndicado: 0
                IDTarifacao: 0
                IDSolicitacaoMaterialItem: 0
                IDGeracaoDespesa: 0
                IDDespesa: 0
                Alocacoes:
                  - IDAlocacaoDeDespesa: 0
                    IDDespesa: 0
                    IDCliente: 0
                    IDContrato: 0
                    IDCaso: 0
                    PorcentagemAlocada: 0
                    ValorAlocado: 0
                    IDFechamento: 0
                    IDCategoriaDeDespesa: 0
                    Caso:
                      IDCaso: 0
                      Titulo: string
                      IDCliente: 0
                      NomeCliente: string
                      NomeResponsavelCaso: string
                      IDPasta: 0
                      NomePasta: string
                      IDContrato: 0
                      NomeContrato: string
                      NumeroInterno: string
                      NumeroExterno: string
                      NumeroLawoffice: 0
                      IDCasoPai: 0
                      Classe: 0
                      DataDeCriacao: {}
                      DataDeCriacaoFormatada: string
                      Situacao: 0
                IsEditable: false
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/despesas/exclui/{id}":
    delete:
      tags:
        - Despesas
      summary: "/api/despesas/exclui/{id}"
      description: Exclui a despesa.
      operationId: api-despesas-exclui-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: A despesa foi excluída.
          content:
            application/json: {}
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{nrSequencia}/fase":
    get:
      tags:
        - FaseCaso
      summary: "/api/casos/{nrSequencia}/fase"
      description: Obtém a fase do caso.
      operationId: api-casos-nrsequencia-fase
      parameters:
        - name: nrSequencia
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém a fase do caso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFaseCaso"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                NomeFaseCaso: string
                IdCaso: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/num/fase:
    get:
      tags:
        - FaseCaso
      summary: /api/casos/num/fase
      description: "Obtém um array com as fases dos casos encontrados de acordo com o numero interno, numero externo ou identificador do caso."
      operationId: api-casos-num-fase
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com as fases dos casos encontrados de acordo com o numero interno, numero externo ou identificador do caso."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFaseCaso"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                NomeFaseCaso: string
                IdCaso: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/funcionarios/porIds/{ids}":
    get:
      tags:
        - Funcionários
      summary: "/api/funcionarios/porIds/{ids}"
      description: Obtém um array com os funcionários de acordo com os identificadores informados.
      operationId: api-funcionarios-ids
      parameters:
        - name: ids
          in: path
          description: "Exemplo: [1, 10]"
          required: true
          schema:
            type: array<integer>
      responses:
        "200":
          description: Obtém um array com os funcionários de acordo com os identificadores informados.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFuncionario"
              example:
                IDFuncionario: 0
                Nome: string
                Apelido: string
                Logradouro: string
                NumeroLogradouro: string
                Bairro: string
                Cidade: string
                Estado: string
                Complemento: string
                CEP: string
                Email: string
                CPF: string
                RG: string
                EstadoCivil: 0
                DataDeNascimento: {}
                DataDeNascimentoFormatada: string
                Cargo: string
                DataDeAdmissao: {}
                DataDeAdmissaoFormatada: string
                DataDeDemissao: {}
                DataDeDemissaoFormatada: string
                Oab: string
                NumeroDeDependentes: 0
                Admin: true
                Observacoes: string
                VinculoEmpregaticio: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/funcionarios/porId/{id}":
    get:
      tags:
        - Funcionários
      summary: "/api/funcionarios/porId/{id}"
      description: Obtém o funcionário de acordo com o identificador informado.
      operationId: api-funcionarios-porid-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém o funcionário de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFuncionario"
              example:
                IDFuncionario: 0
                Nome: string
                Apelido: string
                Logradouro: string
                NumeroLogradouro: string
                Bairro: string
                Cidade: string
                Estado: string
                Complemento: string
                CEP: string
                Email: string
                CPF: string
                RG: string
                EstadoCivil: 0
                DataDeNascimento: {}
                DataDeNascimentoFormatada: string
                Cargo: string
                DataDeAdmissao: {}
                DataDeAdmissaoFormatada: string
                DataDeDemissao: {}
                DataDeDemissaoFormatada: string
                Oab: string
                NumeroDeDependentes: 0
                Admin: true
                Observacoes: string
                VinculoEmpregaticio: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/funcionarios:
    get:
      tags:
        - Funcionários
      summary: /api/funcionarios
      description: Obtém um array com os funcionários de acordo com o filtro informado.
      operationId: api-funcionarios
      parameters:
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com os funcionários de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFuncionario"
              example:
                IDFuncionario: 0
                Nome: string
                Apelido: string
                Logradouro: string
                NumeroLogradouro: string
                Bairro: string
                Cidade: string
                Estado: string
                Complemento: string
                CEP: string
                Email: string
                CPF: string
                RG: string
                EstadoCivil: 0
                DataDeNascimento: {}
                DataDeNascimentoFormatada: string
                Cargo: string
                DataDeAdmissao: {}
                DataDeAdmissaoFormatada: string
                DataDeDemissao: {}
                DataDeDemissaoFormatada: string
                Oab: string
                NumeroDeDependentes: 0
                Admin: true
                Observacoes: string
                VinculoEmpregaticio: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/areas/{idArea}/funcionarios":
    get:
      tags:
        - Funcionários
      summary: "/api/areas/{idArea}/funcionarios"
      description: Obtém um array com os funcionários de acordo com a área e o filtro informado.
      operationId: api-areas-idarea-funcionarios
      parameters:
        - name: idArea
          in: path
          required: true
          schema:
            type: integer
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com os funcionários de acordo com a área e o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFuncionario"
              example:
                IDFuncionario: 0
                Nome: string
                Apelido: string
                Logradouro: string
                NumeroLogradouro: string
                Bairro: string
                Cidade: string
                Estado: string
                Complemento: string
                CEP: string
                Email: string
                CPF: string
                RG: string
                EstadoCivil: 0
                DataDeNascimento: {}
                DataDeNascimentoFormatada: string
                Cargo: string
                DataDeAdmissao: {}
                DataDeAdmissaoFormatada: string
                DataDeDemissao: {}
                DataDeDemissaoFormatada: string
                Oab: string
                NumeroDeDependentes: 0
                Admin: true
                Observacoes: string
                VinculoEmpregaticio: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/escritorios/{IdEscritorio}/funcionarios":
    get:
      tags:
        - Funcionários
      summary: "/api/escritorios/{IdEscritorio}/funcionarios"
      description: Obtém um array com os funcionários do escritório.
      operationId: api-escritorios-idescritorio-funcionarios
      parameters:
        - name: IdEscritorio
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os funcionários do escritório.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFuncionarioBase"
              example:
                IdFuncionario: 0
                IdCategoria: 0
                IdContaAcesso: 0
                IdEscritorio: 0
                IdMaterialPerfilSolicitacao: 0
                NomeFuncionario: string
                NomeCargo: string
                NomeCategoria: string
                NomeContaAcesso: string
                NomeAreas: string
                NomeUsuarioImpressao: string
                DataDeAdmissao: {}
                DataDeDemissao: {}
                EhAdmin: true
                GeraDespesaContasPagas: true
                NumeroAlocacaoAreaTipo: 0
                NumeroNivelLancamentoDespesa: 0
                NumeroSituacaoCategoria: 0
                NumeroUsuarioCopia: 0
                NumeroVinculoEmpregaticio: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/escritorios/funcionarios:
    get:
      tags:
        - Funcionários
      summary: /api/escritorios/funcionarios
      description: Obtém um array com os funcionários ativos do escritório.
      operationId: api-escritorios-funcionarios
      responses:
        "200":
          description: Obtém um array com os funcionários ativos do escritório.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFuncionarioBase"
              example:
                IdFuncionario: 0
                IdCategoria: 0
                IdContaAcesso: 0
                IdEscritorio: 0
                IdMaterialPerfilSolicitacao: 0
                NomeFuncionario: string
                NomeCargo: string
                NomeCategoria: string
                NomeContaAcesso: string
                NomeAreas: string
                NomeUsuarioImpressao: string
                DataDeAdmissao: {}
                DataDeDemissao: {}
                EhAdmin: true
                GeraDespesaContasPagas: true
                NumeroAlocacaoAreaTipo: 0
                NumeroNivelLancamentoDespesa: 0
                NumeroSituacaoCategoria: 0
                NumeroUsuarioCopia: 0
                NumeroVinculoEmpregaticio: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{idCaso}/Garantias":
    get:
      tags:
        - Garantia
      summary: "/api/casos/{idCaso}/Garantias"
      description: Obtém um array com as garantias do caso encontrado pelo identificador.
      operationId: api-casos-idcaso-garantias
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as garantias do caso encontrado pelo identificador.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoGarantia"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                IdCasoGarantia: 0
                Movimentacoes:
                  - IdMovimentacao: 0
                    IdCasoGarantia: 0
                    vlGarantiaAtualizado: 0
                    Moeda: string
                    TipoDeMovimentacao: string
                    Transferido: string
                    Justificativa: string
                    ValorMovimentacao: 0
                    ValorSaldoRemanescente: 0
                    StatusAlvara: string
                    DataMovimentacao: {}
                Moeda: string
                IdGarantia: 0
                Garantia: string
                idCaso: 0
                DataDeposito: {}
                DataDepositoFormatada: string
                ValorGarantia: 0
                ValorGarantiaAtualizado: 0
                Observacao: string
                Identificacao: string
                ValorSaldoRemanescente: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/num/garantias:
    get:
      tags:
        - Garantia
      summary: /api/casos/num/garantias
      description: "Obtém um array com as garantias do caso encontrado pelo numero interno, numero externo ou identificador."
      operationId: api-casos-num-garantias
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com as garantias do caso encontrado pelo numero interno, numero externo ou identificador."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoGarantia"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                IdCasoGarantia: 0
                Movimentacoes:
                  - IdMovimentacao: 0
                    IdCasoGarantia: 0
                    vlGarantiaAtualizado: 0
                    Moeda: string
                    TipoDeMovimentacao: string
                    Transferido: string
                    Justificativa: string
                    ValorMovimentacao: 0
                    ValorSaldoRemanescente: 0
                    StatusAlvara: string
                    DataMovimentacao: {}
                Moeda: string
                IdGarantia: 0
                Garantia: string
                idCaso: 0
                DataDeposito: {}
                DataDepositoFormatada: string
                ValorGarantia: 0
                ValorGarantiaAtualizado: 0
                Observacao: string
                Identificacao: string
                ValorSaldoRemanescente: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/escritorios/{idEscritorio}/tabelaspreco":
    get:
      tags:
        - TabelasPreço
      summary: "/api/escritorios/{idEscritorio}/tabelaspreco"
      description: Obtém um array com as tabelas de preço.
      operationId: api-escritorios-idescritorio-tabelaspreco
      parameters:
        - name: idEscritorio
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as tabelas de preço.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOTabelaPreco"
              example:
                IdEscritorio: 0
                IdTabelaPreco: 0
                NomeTabela: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/escritorios/{idEscritorio}/tabelasprecocategoria":
    get:
      tags:
        - TabelasPreçoCategoria
      summary: "/api/escritorios/{idEscritorio}/tabelasprecocategoria"
      description: Obtém um array com as tabelas de categoria de preço.
      operationId: api-escritorios-idescritorio-tabelasprecocategoria
      parameters:
        - name: idEscritorio
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as tabelas de categoria de preço.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOTabelaPrecoCategoria"
              example:
                IdCategoria: 0
                IdTabelaPreco: 0
                IdTabelaPrecoCategoria: 0
                NomeCategoria: string
                NomeTabelaPreco: string
                DataVigencia: {}
                EhPadrao: true
                NumeroMoeda: 0
                NumeroMoedaHoraPadrao: 0
                NumeroMoedaInt: 0
                ValorHora: 0
                ValorHoraTrabalhadaPadrao: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/hierarquia/ritos:
    get:
      tags:
        - Hierarquia
      summary: /api/hierarquia/ritos
      description: Obtém um array com os ritos de acordo com os filtros informados.
      operationId: api-hierarquia-ritos
      parameters:
        - name: nrClasse
          in: query
          schema:
            type: integer
        - name: cdRitoDoProcessoPai
          in: query
          schema:
            type: integer
        - name: nrRamoJudicial
          in: query
          schema:
            type: integer
        - name: cdForo
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os ritos de acordo com os filtros informados.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOGrupoRito"
              example:
                cdGrupoRito: 0
                dsNome: string
                cdGrupoPai: 0
                Ritos:
                  - cdRito: 0
                    cdGrupoRito: 0
                    dsNome: string
                    inEsperaPoloPassivo: false
                    dsPoloAtivo: string
                    dsPoloPassivo: string
                    dsPoloTerceiro: string
                Grupos:
                  - cdGrupoRito: 0
                    dsNome: string
                    cdGrupoPai: 0
                    Ritos:
                      - cdRito: 0
                        cdGrupoRito: 0
                        dsNome: string
                        inEsperaPoloPassivo: false
                        dsPoloAtivo: string
                        dsPoloPassivo: string
                        dsPoloTerceiro: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/hierarquia/tipos:
    get:
      tags:
        - Hierarquia
      summary: /api/hierarquia/tipos
      description: Obtém um array com os tipos de processos administrativos.
      operationId: api-hierarquia-tipos
      responses:
        "200":
          description: Obtém um array com os tipos de processos administrativos.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOTipoProcessoAdministrativo"
              example:
                IdTipoProcessoAdministrativo: 0
                Nome: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/hierarquia/GrupoForo:
    get:
      tags:
        - Hierarquia
      summary: /api/hierarquia/GrupoForo
      description: "Obtém um array com os grupos foro por ramo de justiça, estado e grupo de família."
      operationId: api-hierarquia-grupoforo
      parameters:
        - name: nrRamoJudicial
          in: query
          schema:
            type: integer
        - name: dsUF
          in: query
          schema:
            type: string
        - name: nrGrupoFamilia
          in: query
          schema:
            type: integer
        - name: cdRegiao
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com os grupos foro por ramo de justiça, estado e grupo de família."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOGrupoForo"
              example:
                inAdmiteMunicipio: true
                cdRegiao: 0
                cdUF: string
                cdLocalGrupoForo: 0
                dsNome: string
                nrInstancia: 0
                cdGrupoFamilia: 0
                nrRamoJudicial: 0
                cdGrupoForo: 0
                cdGrupoPai: 0
                Foros:
                  - cdForo: 0
                    cdGrupoForo: 0
                    dsNome: string
                    cdLocal: 0
                    inAtivoInativo: true
                    cdOrdenacao: 0
                    cdUF: string
                    Municipio: string
                    dsHierarquia: string
                GrupoPai:
                  inAdmiteMunicipio: true
                  cdRegiao: 0
                  cdUF: string
                  cdLocalGrupoForo: 0
                  dsNome: string
                  nrInstancia: 0
                  cdGrupoFamilia: 0
                  nrRamoJudicial: 0
                  cdGrupoForo: 0
                  cdGrupoPai: 0
                  Foros:
                    - cdForo: 0
                      cdGrupoForo: 0
                      dsNome: string
                      cdLocal: 0
                      inAtivoInativo: true
                      cdOrdenacao: 0
                      cdUF: string
                      Municipio: string
                      dsHierarquia: string
                  GrupoPai: {}
                  Grupos: []
                Grupos:
                  - inAdmiteMunicipio: true
                    cdRegiao: 0
                    cdUF: string
                    cdLocalGrupoForo: 0
                    dsNome: string
                    nrInstancia: 0
                    cdGrupoFamilia: 0
                    nrRamoJudicial: 0
                    cdGrupoForo: 0
                    cdGrupoPai: 0
                    Foros:
                      - cdForo: 0
                        cdGrupoForo: 0
                        dsNome: string
                        cdLocal: 0
                        inAtivoInativo: true
                        cdOrdenacao: 0
                        cdUF: string
                        Municipio: string
                        dsHierarquia: string
                    GrupoPai: {}
                    Grupos: []
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/hierarquia/GrupoForoSuperiores:
    get:
      tags:
        - Hierarquia
      summary: /api/hierarquia/GrupoForoSuperiores
      description: Obtém um array com os grupos foro superiores por ramo judicial.
      operationId: api-hierarquia-grupoforosuperiores
      parameters:
        - name: nrRamoJudicial
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os grupos foro superiores por ramo judicial.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOGrupoForo"
              example:
                inAdmiteMunicipio: true
                cdRegiao: 0
                cdUF: string
                cdLocalGrupoForo: 0
                dsNome: string
                nrInstancia: 0
                cdGrupoFamilia: 0
                nrRamoJudicial: 0
                cdGrupoForo: 0
                cdGrupoPai: 0
                Foros:
                  - cdForo: 0
                    cdGrupoForo: 0
                    dsNome: string
                    cdLocal: 0
                    inAtivoInativo: true
                    cdOrdenacao: 0
                    cdUF: string
                    Municipio: string
                    dsHierarquia: string
                GrupoPai:
                  inAdmiteMunicipio: true
                  cdRegiao: 0
                  cdUF: string
                  cdLocalGrupoForo: 0
                  dsNome: string
                  nrInstancia: 0
                  cdGrupoFamilia: 0
                  nrRamoJudicial: 0
                  cdGrupoForo: 0
                  cdGrupoPai: 0
                  Foros:
                    - cdForo: 0
                      cdGrupoForo: 0
                      dsNome: string
                      cdLocal: 0
                      inAtivoInativo: true
                      cdOrdenacao: 0
                      cdUF: string
                      Municipio: string
                      dsHierarquia: string
                  GrupoPai: {}
                  Grupos: []
                Grupos:
                  - inAdmiteMunicipio: true
                    cdRegiao: 0
                    cdUF: string
                    cdLocalGrupoForo: 0
                    dsNome: string
                    nrInstancia: 0
                    cdGrupoFamilia: 0
                    nrRamoJudicial: 0
                    cdGrupoForo: 0
                    cdGrupoPai: 0
                    Foros:
                      - cdForo: 0
                        cdGrupoForo: 0
                        dsNome: string
                        cdLocal: 0
                        inAtivoInativo: true
                        cdOrdenacao: 0
                        cdUF: string
                        Municipio: string
                        dsHierarquia: string
                    GrupoPai: {}
                    Grupos: []
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/hierarquia/GrupoForoDetalhado:
    get:
      tags:
        - Hierarquia
      summary: /api/hierarquia/GrupoForoDetalhado
      description: Obtém o grupo foro de acordo com o filtro informado.
      operationId: api-hierarquia-grupoforodetalhado
      parameters:
        - name: cdGrupoForo
          in: query
          required: true
          schema:
            type: integer
        - name: cdUF
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Obtém o grupo foro de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOGrupoForo"
              example:
                inAdmiteMunicipio: true
                cdRegiao: 0
                cdUF: string
                cdLocalGrupoForo: 0
                dsNome: string
                nrInstancia: 0
                cdGrupoFamilia: 0
                nrRamoJudicial: 0
                cdGrupoForo: 0
                cdGrupoPai: 0
                Foros:
                  - cdForo: 0
                    cdGrupoForo: 0
                    dsNome: string
                    cdLocal: 0
                    inAtivoInativo: true
                    cdOrdenacao: 0
                    cdUF: string
                    Municipio: string
                    dsHierarquia: string
                GrupoPai:
                  inAdmiteMunicipio: true
                  cdRegiao: 0
                  cdUF: string
                  cdLocalGrupoForo: 0
                  dsNome: string
                  nrInstancia: 0
                  cdGrupoFamilia: 0
                  nrRamoJudicial: 0
                  cdGrupoForo: 0
                  cdGrupoPai: 0
                  Foros:
                    - cdForo: 0
                      cdGrupoForo: 0
                      dsNome: string
                      cdLocal: 0
                      inAtivoInativo: true
                      cdOrdenacao: 0
                      cdUF: string
                      Municipio: string
                      dsHierarquia: string
                  GrupoPai: {}
                  Grupos: []
                Grupos:
                  - inAdmiteMunicipio: true
                    cdRegiao: 0
                    cdUF: string
                    cdLocalGrupoForo: 0
                    dsNome: string
                    nrInstancia: 0
                    cdGrupoFamilia: 0
                    nrRamoJudicial: 0
                    cdGrupoForo: 0
                    cdGrupoPai: 0
                    Foros:
                      - cdForo: 0
                        cdGrupoForo: 0
                        dsNome: string
                        cdLocal: 0
                        inAtivoInativo: true
                        cdOrdenacao: 0
                        cdUF: string
                        Municipio: string
                        dsHierarquia: string
                    GrupoPai: {}
                    Grupos: []
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/hierarquia/GrupoForoPorTipo:
    get:
      tags:
        - Hierarquia
      summary: /api/hierarquia/GrupoForoPorTipo
      description: "Obtém um array com grupos foro por ramo de justiça, estado, grupo de família e tipo."
      operationId: api-hierarquia-grupoforoportipo
      parameters:
        - name: nrRamoJudicial
          in: query
          schema:
            type: integer
        - name: dsUF
          in: query
          schema:
            type: string
        - name: nrGrupoFamilia
          in: query
          schema:
            type: integer
        - name: cdRegiao
          in: query
          schema:
            type: integer
        - name: nrTipo
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com grupos foro por ramo de justiça, estado, grupo de família e tipo."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOGrupoForo"
              example:
                inAdmiteMunicipio: true
                cdRegiao: 0
                cdUF: string
                cdLocalGrupoForo: 0
                dsNome: string
                nrInstancia: 0
                cdGrupoFamilia: 0
                nrRamoJudicial: 0
                cdGrupoForo: 0
                cdGrupoPai: 0
                Foros:
                  - cdForo: 0
                    cdGrupoForo: 0
                    dsNome: string
                    cdLocal: 0
                    inAtivoInativo: true
                    cdOrdenacao: 0
                    cdUF: string
                    Municipio: string
                    dsHierarquia: string
                GrupoPai:
                  inAdmiteMunicipio: true
                  cdRegiao: 0
                  cdUF: string
                  cdLocalGrupoForo: 0
                  dsNome: string
                  nrInstancia: 0
                  cdGrupoFamilia: 0
                  nrRamoJudicial: 0
                  cdGrupoForo: 0
                  cdGrupoPai: 0
                  Foros:
                    - cdForo: 0
                      cdGrupoForo: 0
                      dsNome: string
                      cdLocal: 0
                      inAtivoInativo: true
                      cdOrdenacao: 0
                      cdUF: string
                      Municipio: string
                      dsHierarquia: string
                  GrupoPai: {}
                  Grupos: []
                Grupos:
                  - inAdmiteMunicipio: true
                    cdRegiao: 0
                    cdUF: string
                    cdLocalGrupoForo: 0
                    dsNome: string
                    nrInstancia: 0
                    cdGrupoFamilia: 0
                    nrRamoJudicial: 0
                    cdGrupoForo: 0
                    cdGrupoPai: 0
                    Foros:
                      - cdForo: 0
                        cdGrupoForo: 0
                        dsNome: string
                        cdLocal: 0
                        inAtivoInativo: true
                        cdOrdenacao: 0
                        cdUF: string
                        Municipio: string
                        dsHierarquia: string
                    GrupoPai: {}
                    Grupos: []
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/hierarquia/regioes:
    get:
      tags:
        - Hierarquia
      summary: /api/hierarquia/regioes
      description: Obtém um array com as regiões de acordo com o filtro informado.
      operationId: api-hierarquia-regioes
      parameters:
        - name: nrRamoJudicial
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as regiões de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTORegiaoRamoJudicial"
              example:
                nrRamoJudicial: 0
                cdRegiao: 0
                dsRegiao: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/hierarquia/UFPorRegiao:
    get:
      tags:
        - Hierarquia
      summary: /api/hierarquia/UFPorRegiao
      description: Obtém um array com as UFs por região e ramo judicial.
      operationId: api-hierarquia-ufporregiao
      parameters:
        - name: regiao
          in: query
          required: true
          schema:
            type: integer
        - name: nrRamoJudicial
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as UFs por região e ramo judicial.
          content:
            application/json:
              example:
                - AC
                - AL
                - AM
                - AP
                - BA
                - CE
                - DF
                - ES
                - GO
                - MA
                - MG
                - MS
                - MT
                - PA
                - PB
                - PE
                - PI
                - PR
                - RJ
                - RN
                - RO
                - RR
                - RS
                - SC
                - SE
                - SP
                - TO
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/hierarquia/fases:
    get:
      tags:
        - Hierarquia
      summary: /api/hierarquia/fases
      description: Obtém um array com as fases de processo por ramo judicial.
      operationId: api-hierarquia-fases
      parameters:
        - name: nrRamoJudicial
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as fases de processo por ramo judicial.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFaseProcesso"
              example:
                cdFaseProcesso: 0
                cdEscritorio: 0
                dsFaseProcesso: string
                nrGrupo: 0
                nrGrupoText: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{idCaso}/natureza":
    get:
      tags:
        - Natureza
      summary: "/api/casos/{idCaso}/natureza"
      description: Obtém um array com as naturezas do caso.
      operationId: api-casos-idcaso-natureza
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as naturezas do caso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTONatureza"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                NomeNatureza: string
                IdCaso: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/num/natureza:
    get:
      tags:
        - Natureza
      summary: /api/casos/num/natureza
      description: "Obtém um array com as naturezas do caso por identificador, numero interno ou numero externo."
      operationId: api-casos-num-natureza
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com as naturezas do caso por identificador, numero interno ou numero externo."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTONatureza"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                NomeNatureza: string
                IdCaso: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{idCaso}/Partes":
    get:
      tags:
        - Partes
      summary: "/api/casos/{idCaso}/Partes"
      description: Obtém um array com as partes do caso.
      operationId: api-casos-idcaso-partes
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as partes do caso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoParte"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                IdCaso: 0
                IdParte: 0
                NomeRazaoSocial: string
                Envolvimento: string
                CPF: string
                CNPJ: string
                NomeAdvogado: string
                OABAdvogado: string
                RegimeDeContratacao: string
                DataAdmissao: {}
                DataAdmissaoFormatada: string
                DataDemissao: {}
                DataDemissaoFormatada: string
                Cargo: string
                CentroDeCusto: string
                Area: string
                Departamento: string
                TipoDeEnvolvimento: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/Partes:
    get:
      tags:
        - Partes
      summary: /api/Partes
      description: Obtém um array com as partes do LO de acordo com o nome informado.
      operationId: api-partes
      parameters:
        - name: nome
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com as partes do LO de acordo com o nome informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOParte"
              example:
                IdParte: 0
                Nome: string
                NomeAdvogado: string
                CPF: string
                OABAdvogado: string
                TipoPessoa: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/num/partes:
    get:
      tags:
        - Partes
      summary: /api/casos/num/partes
      description: "Obtém um array com as partes do caso pelo identificador do caso, numero interno ou numero externo."
      operationId: api-casos-num-partes
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com as partes do caso pelo identificador do caso, numero interno ou numero externo."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoParte"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                IdCaso: 0
                IdParte: 0
                NomeRazaoSocial: string
                Envolvimento: string
                CPF: string
                CNPJ: string
                NomeAdvogado: string
                OABAdvogado: string
                RegimeDeContratacao: string
                DataAdmissao: {}
                DataAdmissaoFormatada: string
                DataDemissao: {}
                DataDemissaoFormatada: string
                Cargo: string
                CentroDeCusto: string
                Area: string
                Departamento: string
                TipoDeEnvolvimento: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{idCaso}/pedidos":
    post:
      tags:
        - Pedidos
      summary: "api/casos/{idCaso}/pedidos"
      operationId: api-casos-idcaso-pedidos
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: lista de DtoCasoPedidoSimples finais do caso
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOCasoPedidoSimples"
            example:
              Risco: 0
              ValorPrevisto: 0
              ValorContingencia: 0
              Nome: string
              Situacao: 0
              IdProcessoExpectativaReivindicacao: 0
              IdPedidoCausa: 0
              Justificativa: {}
              MoedaValorPrevisto: 0
              MoedaValorContingenciado: 0
      responses:
        "200":
          description: Includeupdate e delete com sucesso
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  /api/casos/num/pedidos:
    get:
      tags:
        - Pedidos
      summary: /api/casos/num/pedidos
      description: "Obtém um array com os pedidos do caso pelo identificador do caso, numero interno ou numero externo."
      operationId: api-casos-num-pedidos
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com os pedidos do caso pelo identificador do caso, numero interno ou numero externo."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoPedido"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                ValorPrevisto: 0
                ValorPrevistoMoeda: string
                ValorContingenciado: 0
                ValorContingenciadoMoeda: string
                ValorDeferido: 0
                ValorDeferidoMoeda: string
                ExitoPerda: string
                Situacao: string
                Justificativa: string
                IdCasoPedido: 0
                IdCaso: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/permissao/{idFuncionalidade}":
    get:
      tags:
        - Permissão
      summary: "/api/permissao/{idFuncionalidade}"
      description: Retorna um booleano indicando se possui determinada permissão.
      operationId: api-permissao-idfuncionalidade
      parameters:
        - name: idFuncionalidade
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna um booleano indicando se possui determinada permissão.
          content:
            application/json:
              example: "True"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{idCaso}/produtos":
    get:
      tags:
        - Produtos
      summary: "/api/casos/{idCaso}/produtos"
      description: Obtém um array com os produtos por caso.
      operationId: api-casos-idcaso-produtos
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os produtos por caso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOProduto"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                dsProduto: string
                IdCaso: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/num/produtos:
    get:
      tags:
        - Produtos
      summary: /api/casos/num/produtos
      description: "Obtém um array com os produtos por caso por identificador do caso, numero interno ou numero externo."
      operationId: api-casos-num-produtos
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com os produtos por caso por identificador do caso, numero interno ou numero externo."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOProduto"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                dsProduto: string
                IdCaso: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/push/escritorio/todos/listar/{somenteBloqueados}":
    get:
      tags:
        - Push
      summary: "/api/push/escritorio/todos/listar/{somenteBloqueados}"
      description: Obtém um array com os escritórios cadastrados na Vista.
      operationId: api-push-escritorio-todos-listar-somentebloqueados
      parameters:
        - name: somenteBloqueados
          in: path
          description: "Default: false"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com os escritórios cadastrados na Vista.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Escritorio"
              example:
                codEscritorio: 0
                area: 0
                nome: string
                senha: string
                endereco: string
                cidade: string
                estado: string
                cep: string
                telefone: string
                dataCadastro: {}
                bloqueado: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/push/escritorio/cadastrar:
    post:
      tags:
        - Push
      summary: /api/push/escritorio/cadastrar
      description: Cadastra o escritório na Vista.
      operationId: api-push-escritorio-cadastrar
      responses:
        "200":
          description: Retorna um booleano indicando se o escritório foi cadastrado na Vista.
          content:
            application/json:
              example: "True"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/push/escritorio/remover/{domainARemover}":
    delete:
      tags:
        - Push
      summary: "/api/push/escritorio/remover/{domainARemover}"
      description: Remove o escritório na Vista.
      operationId: api-push-escritorio-remover-domainaremover
      parameters:
        - name: domainARemover
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retorna um booleano indicando se o escritório foi removido na Vista.
          content:
            application/json:
              example: "True"
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/push/escritorio/inativar/{codEscritorio}":
    put:
      tags:
        - Push
      summary: "/api/push/escritorio/inativar/{codEscritorio}"
      description: Inativa o escritório na Vista.
      operationId: api-push-escritorio-inativar-codescritorio
      parameters:
        - name: codEscritorio
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: O escritório foi inativado na Vista.
          content:
            application/json: {}
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/push/publicacoes:
    get:
      tags:
        - Push
      summary: /api/push/publicacoes
      description: Obtém um array com as publicações de acordo com o filtro informado.
      operationId: api-push-publicacoes
      parameters:
        - name: ano
          in: query
          required: true
          schema:
            type: integer
        - name: mes
          in: query
          required: true
          schema:
            type: integer
        - name: novos
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: visualizados
          in: query
          description: "Default: true"
          schema:
            type: string
        - name: finalizados
          in: query
          description: "Default: false"
          schema:
            type: string
      responses:
        "200":
          description: Obtém um array com as publicações de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOItemPublicacao"
              example:
                IDItemPublicacao: 0
                DataDePublicacao: {}
                Status: 0
                Text: string
                IDProcesso: 0
                DataDeDisponibilizacao: {}
                IDAutor: 0
                Situacao: 0
                TextContinuacao: string
                IDAndamento: 0
                TipoDePush: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/push/publicacoes/{id}":
    get:
      tags:
        - Push
      summary: "/api/push/publicacoes/{id}"
      description: Obtém a publicação de acordo com o identificador informado.
      operationId: api-push-publicacoes-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém a publicação de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOItemPublicacao"
              example:
                IDItemPublicacao: 0
                DataDePublicacao: {}
                Status: 0
                Text: string
                IDProcesso: 0
                DataDeDisponibilizacao: {}
                IDAutor: 0
                Situacao: 0
                TextContinuacao: string
                IDAndamento: 0
                TipoDePush: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/push/publicacoes/{id}/acoes":
    get:
      tags:
        - Push
      summary: "/api/push/publicacoes/{id}/acoes"
      description: Obtém um array com as ações de publicação de acordo com o identificador informado.
      operationId: api-push-publicacoes-id-acoes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as ações de publicação de acordo com o identificador informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOAcaoPush"
              example:
                IDAcaoPush: 0
                IDFuncionario: 0
                Tipo: 0
                DataCriacao: {}
                IDVinculo: 0
                IDPublicacaoAndamento: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/push/inclui/publicacoes/{id}/acoes":
    post:
      tags:
        - Push
      summary: "/api/push/inclui/publicacoes/{id}/acoes"
      description: Inclui o item de agenda em publicação e retorna o item incluído.
      operationId: api-push-inclui-publicacoes-id-acoes
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: O item de agenda a incluir.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOItemAgenda"
            example:
              IDItemAgenda: 0
              IDItemAgendaPai: 0
              Tipo: 0
              Situacao: 0
              Data: {}
              DataFormatada: string
              DataLimite: {}
              DataLimiteFormatada: string
              Lembrete: {}
              IDTitulocobranca: 0
              Titulo: string
              IDCaso: 0
              IDForo: 0
              Observacao: string
              Local: string
              IDFuncionarioCriador: 0
              FuncionarioExecutor: 0
              FuncionariosParticipantes: {}
              DataCriacao: {}
              DataCriacaoFormatada: string
              DataRealizacao: {}
              DataRealizacaoFormatada: string
              DataRegistroRealizacao: {}
              DataRegistroRealizacaoFormatada: string
              ObservacaoRegistroRealizacao: string
              SituacaoLembrete: 0
              IsEditable: true
      responses:
        "200":
          description: Inclui o item de agenda em publicação e retorna o item incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOItemAgenda"
              example:
                IDItemAgenda: 0
                IDItemAgendaPai: 0
                Tipo: 0
                Situacao: 0
                Data: {}
                DataFormatada: string
                DataLimite: {}
                DataLimiteFormatada: string
                Lembrete: {}
                IDTitulocobranca: 0
                Titulo: string
                IDCaso: 0
                IDForo: 0
                Observacao: string
                Local: string
                IDFuncionarioCriador: 0
                FuncionarioExecutor: 0
                FuncionariosParticipantes: {}
                DataCriacao: {}
                DataCriacaoFormatada: string
                DataRealizacao: {}
                DataRealizacaoFormatada: string
                DataRegistroRealizacao: {}
                DataRegistroRealizacaoFormatada: string
                ObservacaoRegistroRealizacao: string
                SituacaoLembrete: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/push/altera/publicacoes/{id}":
    put:
      tags:
        - Push
      summary: "/api/push/altera/publicacoes/{id}"
      description: Altera o status da publicação.
      operationId: api-push-altera-publicacoes-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: O item a alterar.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOItemPublicacao"
            example:
              IDItemPublicacao: 0
              DataDePublicacao: {}
              Status: 0
              Text: string
              IDProcesso: 0
              DataDeDisponibilizacao: {}
              IDAutor: 0
              Situacao: 0
              TextContinuacao: string
              IDAndamento: 0
              TipoDePush: 0
      responses:
        "200":
          description: Altera o status da publicação e retorna o item alterado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOItemPublicacao"
              example:
                IDItemPublicacao: 0
                DataDePublicacao: {}
                Status: 0
                Text: string
                IDProcesso: 0
                DataDeDisponibilizacao: {}
                IDAutor: 0
                Situacao: 0
                TextContinuacao: string
                IDAndamento: 0
                TipoDePush: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/timesheet/totalhoras:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/totalhoras
      description: Obtém o total de horas lançadas no mês pelo profissional.
      operationId: api-timesheet-totalhoras
      responses:
        "200":
          description: Obtém o total de horas lançadas no mês pelo profissional.
          content:
            application/json:
              example: 4
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/timesheet/proximoslancamentos:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/proximoslancamentos
      description: Obtém um array com os últimos lançamentos de timesheet por profissional.
      operationId: api-timesheet-proximoslancamentos
      responses:
        "200":
          description: Obtém um array com os últimos lançamentos de timesheet por profissional.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
              example:
                NrLEDESTaskCode: string
                NrLEDESActivityCode: string
                DsSolicitante: string
                CdSolicitante: 0
                IDCliente: 0
                IDProcesso: 0
                IDFuncionario: 0
                Descricao: string
                DataExecucao: {}
                TipoDeTarefa: 0
                QtdMinutos: 0
                IDFuncionarioResponsavel: 0
                IDFuncionarioBeneficiario: 0
                IDFechamentoPlanilhaHoras: 0
                IDRegistroFechamentoContaCliente: 0
                SituacaoDaPlanilha: 0
                MotivoDaRecusa: string
                IDClassificacaoHorasDebitaveis: 0
                IDClassificacao: 0
                Titulo: string
                IDAndamento: 0
                IDArea: 0
                IDContrato: 0
                DataLancamento: {}
                InFaturadoPreVersao35: true
                IDLancamentoDeHoras: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/timesheet/activitycodes:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/activitycodes
      description: Obtém um array com os Activity Codes.
      operationId: api-timesheet-activitycodes
      responses:
        "200":
          description: Obtém um array com os Activity Codes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LEDESCodes"
              example:
                Code: string
                Description: string
                ChildCodes:
                  - Code: string
                    Description: string
                    ChildCodes: {}
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/timesheet/taskcodes:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/taskcodes
      description: Obtém um array com os Task Codes.
      operationId: api-timesheet-taskcodes
      responses:
        "200":
          description: Obtém um array com os Task Codes.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LEDESCodes"
              example:
                Code: string
                Description: string
                ChildCodes:
                  - Code: string
                    Description: string
                    ChildCodes: {}
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/timesheet/listaporperiodo:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/listaporperiodo
      description: Lista por período de acordo com o filtro informado.
      operationId: api-timesheet-listaporperiodo
      parameters:
        - name: nrAplicabilidade
          in: query
          description: "1: Timesheet, 2: Despesa"
          required: true
          schema:
            type: integer
        - name: idFuncionario
          in: query
          required: true
          schema:
            type: integer
        - name: dataDeHoje
          in: query
          description: "Exemplo: 2021-08-27T12:30:00.000"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista por período de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfDateTimeArray"
              example:
                - - string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/timesheet/obtemmaisrecente:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/obtemmaisrecente
      description: Obtém mais recente de acordo com o filtro informado.
      operationId: api-timesheet-obtemmaisrecente
      parameters:
        - name: nrAplicabilidade
          in: query
          description: "1: Timesheet, 2: Despesa"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém mais recente de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DateTimeArray"
              example:
                - string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/timesheet/obtem:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/obtem
      description: Obtém um array com as horas lançados do funcionário de acordo com o filtro informado.
      operationId: api-timesheet-obtem
      parameters:
        - name: ano
          in: query
          required: true
          schema:
            type: int
        - name: mes
          in: query
          required: true
          schema:
            type: int
      responses:
        "200":
          description: Obtém um array com as horas lançados do funcionário de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
              example:
                NrLEDESTaskCode: string
                NrLEDESActivityCode: string
                DsSolicitante: string
                CdSolicitante: 0
                IDCliente: 0
                IDProcesso: 0
                IDFuncionario: 0
                Descricao: string
                DataExecucao: {}
                TipoDeTarefa: 0
                QtdMinutos: 0
                IDFuncionarioResponsavel: 0
                IDFuncionarioBeneficiario: 0
                IDFechamentoPlanilhaHoras: 0
                IDRegistroFechamentoContaCliente: 0
                SituacaoDaPlanilha: 0
                MotivoDaRecusa: string
                IDClassificacaoHorasDebitaveis: 0
                IDClassificacao: 0
                Titulo: string
                IDAndamento: 0
                IDArea: 0
                IDContrato: 0
                DataLancamento: {}
                InFaturadoPreVersao35: true
                IDLancamentoDeHoras: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/timesheet/funcionarios/{idFuncionario}/areas":
    get:
      tags:
        - Timesheet
      summary: "/api/timesheet/funcionarios/{idFuncionario}/areas"
      description: Obtém um array com as áreas para lançamento de horas.
      operationId: api-timesheet-funcionarios-idfuncionario-areas
      parameters:
        - name: idFuncionario
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as áreas para lançamento de horas.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOArea"
              example:
                ID: 0
                Titulo: string
                Ativa: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/timesheet/areas/{idArea}/titulos":
    get:
      tags:
        - Timesheet
      summary: "/api/timesheet/areas/{idArea}/titulos"
      description: Obtém um array com os títulos para lançamento de horas.
      operationId: api-timesheet-areas-idarea-titulos
      parameters:
        - name: idArea
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os títulos para lançamento de horas.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOClassificacao"
              example:
                ID: 0
                Titulo: string
                TextoPadrao: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/timesheet/funcionarios:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/funcionarios
      description: Obtém um array com os funcionários para lançamento de horas.
      operationId: api-timesheet-funcionarios
      responses:
        "200":
          description: Obtém um array com os funcionários para lançamento de horas.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFuncionario"
              example:
                IDFuncionario: 0
                Nome: string
                Apelido: string
                Logradouro: string
                NumeroLogradouro: string
                Bairro: string
                Cidade: string
                Estado: string
                Complemento: string
                CEP: string
                Email: string
                CPF: string
                RG: string
                EstadoCivil: 0
                DataDeNascimento: {}
                DataDeNascimentoFormatada: string
                Cargo: string
                DataDeAdmissao: {}
                DataDeAdmissaoFormatada: string
                DataDeDemissao: {}
                DataDeDemissaoFormatada: string
                Oab: string
                NumeroDeDependentes: 0
                Admin: true
                Observacoes: string
                VinculoEmpregaticio: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/timesheet/funcionarios/permissaolcto/{idFuncionario}":
    get:
      tags:
        - Timesheet
      summary: "/api/timesheet/funcionarios/permissaolcto/{idFuncionario}"
      description: Obtém um array com os funcionários com permissão de lançamento para o Mobile.
      operationId: api-timesheet-funcionarios-permissaolcto-idfuncionario
      parameters:
        - name: idFuncionario
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os funcionários com permissão de lançamento para o Mobile.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFuncionario"
              example:
                IDFuncionario: 0
                Nome: string
                Apelido: string
                Logradouro: string
                NumeroLogradouro: string
                Bairro: string
                Cidade: string
                Estado: string
                Complemento: string
                CEP: string
                Email: string
                CPF: string
                RG: string
                EstadoCivil: 0
                DataDeNascimento: {}
                DataDeNascimentoFormatada: string
                Cargo: string
                DataDeAdmissao: {}
                DataDeAdmissaoFormatada: string
                DataDeDemissao: {}
                DataDeDemissaoFormatada: string
                Oab: string
                NumeroDeDependentes: 0
                Admin: true
                Observacoes: string
                VinculoEmpregaticio: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/timesheet/classificacoes:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/classificacoes
      description: Obtém um array com as classificações para o lançamento de horas.
      operationId: api-timesheet-classificacoes
      responses:
        "200":
          description: Obtém um array com as classificações para o lançamento de horas.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOClassificacao"
              example:
                ID: 0
                Titulo: string
                TextoPadrao: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{idCaso}/timesheet":
    get:
      tags:
        - Timesheet
      summary: "/api/casos/{idCaso}/timesheet"
      description: Obtém um array com as horas lançadas do caso informado.
      operationId: api-casos-idcaso-timesheet
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
        - name: ano
          in: query
          required: true
          schema:
            type: integer
        - name: mes
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as horas lançadas do caso informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
              example:
                NrLEDESTaskCode: string
                NrLEDESActivityCode: string
                DsSolicitante: string
                CdSolicitante: 0
                IDCliente: 0
                IDProcesso: 0
                IDFuncionario: 0
                Descricao: string
                DataExecucao: {}
                TipoDeTarefa: 0
                QtdMinutos: 0
                IDFuncionarioResponsavel: 0
                IDFuncionarioBeneficiario: 0
                IDFechamentoPlanilhaHoras: 0
                IDRegistroFechamentoContaCliente: 0
                SituacaoDaPlanilha: 0
                MotivoDaRecusa: string
                IDClassificacaoHorasDebitaveis: 0
                IDClassificacao: 0
                Titulo: string
                IDAndamento: 0
                IDArea: 0
                IDContrato: 0
                DataLancamento: {}
                InFaturadoPreVersao35: true
                IDLancamentoDeHoras: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/timesheet/obtem/{id}":
    get:
      tags:
        - Timesheet
      summary: "/api/timesheet/obtem/{id}"
      description: Obtém a planilha de horas pelo identificador do lançamento.
      operationId: api-timesheet-obtem-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém a planilha de horas pelo identificador do lançamento.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
              example:
                NrLEDESTaskCode: string
                NrLEDESActivityCode: string
                DsSolicitante: string
                CdSolicitante: 0
                IDCliente: 0
                IDProcesso: 0
                IDFuncionario: 0
                Descricao: string
                DataExecucao: {}
                TipoDeTarefa: 0
                QtdMinutos: 0
                IDFuncionarioResponsavel: 0
                IDFuncionarioBeneficiario: 0
                IDFechamentoPlanilhaHoras: 0
                IDRegistroFechamentoContaCliente: 0
                SituacaoDaPlanilha: 0
                MotivoDaRecusa: string
                IDClassificacaoHorasDebitaveis: 0
                IDClassificacao: 0
                Titulo: string
                IDAndamento: 0
                IDArea: 0
                IDContrato: 0
                DataLancamento: {}
                InFaturadoPreVersao35: true
                IDLancamentoDeHoras: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/timesheet/solicitante:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/solicitante
      description: Obtém a planilha de horas pelo identificador do lançamento.
      operationId: api-timesheet-solicitante
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém a planilha de horas pelo identificador do lançamento.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
              example:
                NrLEDESTaskCode: string
                NrLEDESActivityCode: string
                DsSolicitante: string
                CdSolicitante: 0
                IDCliente: 0
                IDProcesso: 0
                IDFuncionario: 0
                Descricao: string
                DataExecucao: {}
                TipoDeTarefa: 0
                QtdMinutos: 0
                IDFuncionarioResponsavel: 0
                IDFuncionarioBeneficiario: 0
                IDFechamentoPlanilhaHoras: 0
                IDRegistroFechamentoContaCliente: 0
                SituacaoDaPlanilha: 0
                MotivoDaRecusa: string
                IDClassificacaoHorasDebitaveis: 0
                IDClassificacao: 0
                Titulo: string
                IDAndamento: 0
                IDArea: 0
                IDContrato: 0
                DataLancamento: {}
                InFaturadoPreVersao35: true
                IDLancamentoDeHoras: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/timesheet/inclui:
    post:
      tags:
        - Timesheet
      summary: /api/timesheet/inclui
      description: Inclui o lançamento de hora.
      operationId: api-timesheet-inclui
      requestBody:
        description: O lançamento de hora a incluir.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOPlanilhaHoras"
            example:
              NrLEDESTaskCode: string
              NrLEDESActivityCode: string
              DsSolicitante: string
              CdSolicitante: 0
              IDCliente: 0
              IDProcesso: 0
              IDFuncionario: 0
              Descricao: string
              DataExecucao: {}
              TipoDeTarefa: 0
              QtdMinutos: 0
              IDFuncionarioResponsavel: 0
              IDFuncionarioBeneficiario: 0
              IDFechamentoPlanilhaHoras: 0
              IDRegistroFechamentoContaCliente: 0
              SituacaoDaPlanilha: 0
              MotivoDaRecusa: string
              IDClassificacaoHorasDebitaveis: 0
              IDClassificacao: 0
              Titulo: string
              IDAndamento: 0
              IDArea: 0
              IDContrato: 0
              DataLancamento: {}
              InFaturadoPreVersao35: true
              IDLancamentoDeHoras: 0
              IsEditable: true
      responses:
        "200":
          description: Retorna o lançamento de horas incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
              example:
                NrLEDESTaskCode: string
                NrLEDESActivityCode: string
                DsSolicitante: string
                CdSolicitante: 0
                IDCliente: 0
                IDProcesso: 0
                IDFuncionario: 0
                Descricao: string
                DataExecucao: {}
                TipoDeTarefa: 0
                QtdMinutos: 0
                IDFuncionarioResponsavel: 0
                IDFuncionarioBeneficiario: 0
                IDFechamentoPlanilhaHoras: 0
                IDRegistroFechamentoContaCliente: 0
                SituacaoDaPlanilha: 0
                MotivoDaRecusa: string
                IDClassificacaoHorasDebitaveis: 0
                IDClassificacao: 0
                Titulo: string
                IDAndamento: 0
                IDArea: 0
                IDContrato: 0
                DataLancamento: {}
                InFaturadoPreVersao35: true
                IDLancamentoDeHoras: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/timesheet/atualiza:
    put:
      tags:
        - Timesheet
      summary: /api/timesheet/atualiza
      description: Atualiza o lançamento de hora.
      operationId: api-timesheet-atualiza
      requestBody:
        description: O lançamento de hora a atualizar.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOPlanilhaHoras"
            example:
              NrLEDESTaskCode: string
              NrLEDESActivityCode: string
              DsSolicitante: string
              CdSolicitante: 0
              IDCliente: 0
              IDProcesso: 0
              IDFuncionario: 0
              Descricao: string
              DataExecucao: {}
              TipoDeTarefa: 0
              QtdMinutos: 0
              IDFuncionarioResponsavel: 0
              IDFuncionarioBeneficiario: 0
              IDFechamentoPlanilhaHoras: 0
              IDRegistroFechamentoContaCliente: 0
              SituacaoDaPlanilha: 0
              MotivoDaRecusa: string
              IDClassificacaoHorasDebitaveis: 0
              IDClassificacao: 0
              Titulo: string
              IDAndamento: 0
              IDArea: 0
              IDContrato: 0
              DataLancamento: {}
              InFaturadoPreVersao35: true
              IDLancamentoDeHoras: 0
              IsEditable: true
      responses:
        "200":
          description: Retorna o lançamento de hora atualizado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
              example:
                NrLEDESTaskCode: string
                NrLEDESActivityCode: string
                DsSolicitante: string
                CdSolicitante: 0
                IDCliente: 0
                IDProcesso: 0
                IDFuncionario: 0
                Descricao: string
                DataExecucao: {}
                TipoDeTarefa: 0
                QtdMinutos: 0
                IDFuncionarioResponsavel: 0
                IDFuncionarioBeneficiario: 0
                IDFechamentoPlanilhaHoras: 0
                IDRegistroFechamentoContaCliente: 0
                SituacaoDaPlanilha: 0
                MotivoDaRecusa: string
                IDClassificacaoHorasDebitaveis: 0
                IDClassificacao: 0
                Titulo: string
                IDAndamento: 0
                IDArea: 0
                IDContrato: 0
                DataLancamento: {}
                InFaturadoPreVersao35: true
                IDLancamentoDeHoras: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/timesheet/exclui/{id}":
    delete:
      tags:
        - Timesheet
      summary: "/api/timesheet/exclui/{id}"
      description: Exclui o lançamento de hora.
      operationId: api-timesheet-exclui-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: O lançamento de hora foi excluído.
          content:
            application/json: {}
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/timesheet/limiteMinimo:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/limiteMinimo
      description: Retorna o limite mínimo de minutos.
      operationId: api-timesheet-limiteminimo
      responses:
        "200":
          description: Retorna o limite mínimo de minutos.
          content:
            application/json:
              example: 5
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/timesheet/arredondamento:
    get:
      tags:
        - Timesheet
      summary: /api/timesheet/arredondamento
      description: Retorna o arredondamento de minutos.
      operationId: api-timesheet-arredondamento
      responses:
        "200":
          description: Retorna o arredondamento de minutos.
          content:
            application/json:
              example: 10
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{idCaso}/valoresapurados":
    get:
      tags:
        - ValoresApurados
      summary: "/api/casos/{idCaso}/valoresapurados"
      description: Obtém um array com os valores apurados do caso.
      operationId: api-casos-idcaso-valoresapurados
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com os valores apurados do caso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOValorApurado"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                Data: {}
                DataFormatada: string
                NomePedido: string
                ValorApurado: 0
                Moeda: string
                Observacao: string
                IdCaso: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/num/valoresapurados:
    get:
      tags:
        - ValoresApurados
      summary: /api/casos/num/valoresapurados
      description: "Obtém um array com os valores apurados do caso por identificador do caso, numero interno ou numero externo."
      operationId: api-casos-num-valoresapurados
      parameters:
        - name: NumeroInterno
          in: query
          schema:
            type: integer
        - name: NumeroExterno
          in: query
          schema:
            type: string
        - name: IdProcesso
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: "Obtém um array com os valores apurados do caso por identificador do caso, numero interno ou numero externo."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOValorApurado"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                Data: {}
                DataFormatada: string
                NomePedido: string
                ValorApurado: 0
                Moeda: string
                Observacao: string
                IdCaso: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/andamentos/templates:
    get:
      tags:
        - Andamentos
      summary: /api/andamentos/templates
      description: Retorna um array com os templates de andamentos
      operationId: api-andamentos-templates
      parameters:
        - name: tipoCaso
          in: query
          description: "- 1: Administrativo\n- 2: Interno\n- 3: Judicial Estadual\n- 4: Judicial Federal\n- 5: Judicial Trabalhista\n- 6: Interno Escritório\n- 7: Militar Estadual\n- 8: Eleitoral\n- 9: Militar da União"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna um array com os templates de andamentos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOAndamentoTemplate"
              example:
                IDAndamentoTemplate: 0
                IDEscritorio: 0
                TextoTemplate: string
                NomeTemplate: string
                GrupoDeCaso: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/ContaDeAcesso/ObtemContaDeAcesso2:
    get:
      tags:
        - ContaDeAcesso
      summary: /api/ContaDeAcesso/ObtemContaDeAcesso2
      description: Obtém a conta de acesso de acordo com o usuário e escritório.
      operationId: api-contadeacesso-obtemcontadeacesso2
      parameters:
        - name: nomeUsuario
          in: query
          required: true
          schema:
            type: string
        - name: domain
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Obtém a conta de acesso de acordo com o usuário e escritório.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOContaDeAcesso"
              example:
                IDFuncionario: 0
                Conta: string
                IsPrimeiroAcesso: true
                IsOldPassword: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/versao:
    get:
      tags:
        - Sessão
      summary: /api/versao
      description: Retorna uma string que identifica a versão em que o escritório está.
      operationId: api-versao
      parameters:
        - name: domain
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retorna um inteiro que identifica a versão em que o escritório está.
          content:
            application/json:
              example: 109
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/listacasos:
    get:
      tags:
        - Casos
      summary: /api/casos/listacasos
      description: Retorna um array com todos os casos de acordo com o filtro informado.
      operationId: api-casos-listacasos
      parameters:
        - name: ativos
          in: query
          description: "Default: true"
          schema:
            type: bool
        - name: inativos
          in: query
          description: "Default: false"
          schema:
            type: bool
      responses:
        "200":
          description: Retorna um array com todos os casos de acordo com o filtro informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoSimples"
              example:
                IDCaso: 0
                Titulo: string
                IDCliente: 0
                NomeCliente: string
                NomeResponsavelCaso: string
                IDPasta: 0
                NomePasta: string
                IDContrato: 0
                NomeContrato: string
                NumeroInterno: string
                NumeroExterno: string
                NumeroLawoffice: 0
                IDCasoPai: 0
                Classe: 0
                DataDeCriacao: {}
                DataDeCriacaoFormatada: string
                Situacao: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/timesheet/caso/{idCaso}":
    get:
      tags:
        - Timesheet
      summary: "/api/timesheet/caso/{idCaso}"
      description: Retorna um array com todos os lançamentos de hora do caso informado.
      operationId: api-timesheet-caso-idcaso
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: int
      responses:
        "200":
          description: Retorna um array com todos os lançamentos de hora do caso informado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
              example:
                NrLEDESTaskCode: string
                NrLEDESActivityCode: string
                DsSolicitante: string
                CdSolicitante: 0
                IDCliente: 0
                IDProcesso: 0
                IDFuncionario: 0
                Descricao: string
                DataExecucao: {}
                TipoDeTarefa: 0
                QtdMinutos: 0
                IDFuncionarioResponsavel: 0
                IDFuncionarioBeneficiario: 0
                IDFechamentoPlanilhaHoras: 0
                IDRegistroFechamentoContaCliente: 0
                SituacaoDaPlanilha: 0
                MotivoDaRecusa: string
                IDClassificacaoHorasDebitaveis: 0
                IDClassificacao: 0
                Titulo: string
                IDAndamento: 0
                IDArea: 0
                IDContrato: 0
                DataLancamento: {}
                InFaturadoPreVersao35: true
                IDLancamentoDeHoras: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/expectativa/valores/{idCaso}":
    get:
      tags:
        - ExpectativaReivindicacao
      summary: "/api/expectativa/valores/{idCaso}"
      description: Retorna os valores do caso.
      operationId: api-expectativa-valores-idcaso
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: int
      responses:
        "200":
          description: Retorna os valores do caso.
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/edit:
    put:
      tags:
        - Casos
      summary: /api/casos/edit
      description: Altera campos.
      operationId: api-casos-edit-id
      parameters:
        - name: id
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: Altera campos.
        "401":
          description: ""
  /api/websession:
    post:
      tags:
        - Sessão
      summary: /api/websession
      description: Login do Web com E-mail
      operationId: 619ce96e8e9887de66d5a9fc
      requestBody:
        description: Parâmetros para login.
        content:
          application/json:
            example:
              domain: ""
              email: ""
      responses:
        "200":
          description: Resultado do login.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resultado_de_login"
              example:
                Context: string
                Successful: true
                ErrorMessage: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/obtemDomainPorEmail:
    get:
      tags:
        - Sessão
      summary: /api/obtemDomainPorEmail
      description: Login do Web com E-mail
      operationId: 61a664b1625048e8c1c6b2dd
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      requestBody:
        description: Parâmetros para login.
        content:
          application/json:
            example:
              domain: ""
              email: ""
      responses:
        "200":
          description: Resultado do login.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resultado_de_login"
              example:
                Context: string
                Successful: true
                ErrorMessage: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/fase/{nrGrupo}":
    get:
      tags:
        - FaseCaso
      summary: "/api/casos/fase/{nrGrupo}"
      description: Obtém um array com as fases do caso de acordo com o tipo de processo
      operationId: api-casos-fase-nrgrupo
      parameters:
        - name: nrGrupo
          in: path
          description: "1: Administrativo, 2: Interno, 3: Judicial Estadual, 4: Judicial Federal, 5: Judicial Trabalhista, 6: Interno Escritório, 7: Militar Estadual, 8: Eleitoral, 9: Militar da União"
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as fases do caso de acordo com o tipo de processo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOFaseCaso"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                NomeFaseCaso: string
                IdCaso: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/timeline/items:
    get:
      tags:
        - Timeline
      summary: /api/timeline/items
      description: Lista timeline do caso
      operationId: api-timeline-items
      parameters:
        - name: cdProcesso
          in: query
          required: true
          schema:
            type: integer
        - name: dataInicial
          in: query
          schema:
            type: string
        - name: dataFinal
          in: query
          schema:
            type: string
        - name: andamentoManual
          in: query
          schema:
            type: boolean
        - name: andamentoAutomatico
          in: query
          schema:
            type: boolean
        - name: timesheet
          in: query
          schema:
            type: boolean
        - name: agenda
          in: query
          schema:
            type: boolean
        - name: decisao
          in: query
          schema:
            type: boolean
        - name: despesa
          in: query
          schema:
            type: boolean
        - name: garantia
          in: query
          schema:
            type: boolean
        - name: paginaAtual
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém os itens de timeline.
        "401":
          description: Em caso de sessão expirada.
        "500":
          description: Em caso de erro interno.
  /api/VF/ObtemFilhosPorNomePai:
    get:
      tags:
        - VaraEForo
      summary: /api/VF/ObtemFilhosPorNomePai
      description: Obtém os itens filhos pelo nome do item pai.
      operationId: api-vf-obtemfilhospornomepai
      parameters:
        - name: nomeNo
          in: query
          description: O nome do item.
          required: true
          schema:
            type: string
        - name: somenteAtivos
          in: query
          description: Somente itens ativos? O valor padrão é true.
          schema:
            type: boolean
      responses:
        "200":
          description: Obtém os itens filhos pelo nome do item pai.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ProximosNiveis:
    get:
      tags:
        - VaraEForo
        - VaraEForoUnificado
      summary: /api/VF/ProximosNiveis
      operationId: api-vf-proximosniveis
      parameters:
        - name: cdNo
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: Retorna os próximos dois níveis
        "401":
          description: Em caso de sessão expirada.
  "/api/andamentos/update/{idAndamento}":
    put:
      tags:
        - Andamentos
      summary: "api/andamentos/update/{idAndamento}"
      operationId: api-andamentos-update-idandamento
      parameters:
        - name: idAndamento
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EncapsuladorDeResposta"
            example:
              Response:
                NrTipoClassificacaoAutomatica: 0
                NrClassificacaoAutomatica: 0
                ClassificacaoDoAndamento: {}
                LancamentoPeloTimeSheetDoMobile: true
                IdAndamento: 0
                TextoAndamento: string
                TextoAndamentoContinuacao: string
                IdProcesso: 0
                DataCompetencia: string
                DataInclusao: string
                IdAutor: 0
                NomeAutor: string
                InUsoInterno: true
                DataRevisao: string
                IdRevisor: 0
                NomeRevisor: {}
                Situacao: 0
                InManual: true
                IdAndamentoTemplate: 0
                NovoAndamentoParaRevisao: 0
                IdAndamentoClassificacao: 0
                IdPublicacaoAndamento: 0
                Tipo: 0
                dsCodigoOriginal: {}
                IsEditable: true
              Success: true
              ExceptionMessage: {}
      responses:
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "200":
          description: "Retorna uma resposta encapsulada por um objeto com flag Success, com o objeto DTOAndamento no Response,\ne se houver algum tipo de erro, este vem no ExceptionMessage\n"
        "500":
          description: ""
  "/api/casos/{idCaso}/valores":
    get:
      tags:
        - ValoresDoCaso
      summary: "api/casos/{idCaso}/valores"
      operationId: api-casos-idcaso-valores
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Objeto com valores do caso e a lista de pedidos se existir
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOValoresDoCaso"
              example:
                Risco: 0
                ValorDaCausa: 0
                ValorDaCausaAtualizado: 0
                ValorPrevisto: 0
                ValorContingencia: 0
                Pedidos:
                  - Risco: 0
                    ValorPrevisto: 0
                    ValorContingencia: 0
                    Nome: string
                    Situacao: 0
                    IdProcessoExpectativaReivindicacao: 0
                    IdPedidoCausa: 0
                    Justificativa: {}
                    MoedaValorPrevisto: 0
                    MoedaValorContingenciado: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  /api/Pedidos/possiveisStatus:
    get:
      tags:
        - Pedidos
      summary: api/Pedidos/possiveisStatus
      operationId: api-pedidos-possiveisstatus
      responses:
        "200":
          description: Retorna os possiveis status dos pedidos
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOObjetoNomeId"
              example:
                Nome: string
                Id: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  /api/Pedidos/possiveisExitos:
    get:
      tags:
        - Pedidos
      summary: api/Pedidos/possiveisExitos
      operationId: api-pedidos-possiveisexitos
      responses:
        "200":
          description: "Retorna os possiveis exitos "
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOObjetoNomeId"
              example:
                Nome: string
                Id: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  /api/Pedidos/causas:
    get:
      tags:
        - Pedidos
      summary: api/Pedidos/causas
      operationId: api-pedidos-causas
      responses:
        "200":
          description: Devolve todas as bases de pedidos do escritorio
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPedidoCausa"
              example:
                Id: 0
                Nome: string
                IdPedidoCausaGrupoAfinidade: 0
                IdEscritorio: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  /api/decisoes/tipos:
    get:
      tags:
        - Decisões
      summary: api/decisoes/tipos
      operationId: api-decisoes-tipos
      responses:
        "200":
          description: Retorna os tipos possíveis de Decisão do escritório
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTODecisao"
              example:
                - IdDecisao: 0
                  IdEscritorio: 0
                  Nome: string
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  "/api/decisoes/{id}":
    get:
      tags:
        - Decisões
      summary: "api/decisoes/{id}"
      operationId: api-decisoes-id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: retorna decisao com valores
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOProcessoDecisao"
              example:
                Valores:
                  - nrExitoPerda: 0
                    nrMoeda: 0
                    nrMoedaSolicitado: 0
                    dsJustificativaPedido: {}
                    nrMoedaContigenciado: 0
                    vlContigenciado: 0
                    vlDeferido: 0
                    IdProcessoExpectativaReivindicacao: 0
                    IdProcessoDecisao: 0
                    inAlterado: true
                    IdProcessoDecisaoValor: 0
                    vlSolicitado: 0
                    nrSituacao: 0
                inDeEncerramento: true
                cdParteJuiz: 0
                cdParteAdvAcusacao: 0
                cdParteAdvDefesa: 0
                Observacao: string
                vlDeferido: 0
                DataOcorrencia: string
                IdCaso: 0
                Decisao: 0
                nrExitoPerda: 0
                IdCasoDecisao: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  /api/decisoes:
    post:
      tags:
        - Decisões
      summary: api/decisoes
      operationId: api-decisoes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOProcessoDecisao"
            example:
              Valores:
                - nrExitoPerda: 0
                  nrMoeda: 0
                  nrMoedaSolicitado: 0
                  dsJustificativaPedido: {}
                  nrMoedaContigenciado: 0
                  vlContigenciado: 0
                  vlDeferido: 0
                  IdProcessoExpectativaReivindicacao: 0
                  IdProcessoDecisao: 0
                  inAlterado: true
                  IdProcessoDecisaoValor: 0
                  vlSolicitado: 0
                  nrSituacao: 0
              inDeEncerramento: true
              cdParteJuiz: 0
              cdParteAdvAcusacao: 0
              cdParteAdvDefesa: 0
              Observacao: string
              vlDeferido: 0
              DataOcorrencia: string
              IdCaso: 0
              Decisao: 0
              nrExitoPerda: 0
              IdCasoDecisao: 0
      responses:
        "200":
          description: Decisao inserida com sucesso
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  "/api/decisoes/{idProcessoDecisao}":
    delete:
      tags:
        - Decisões
      summary: "api/decisoes/{idProcessoDecisao}"
      operationId: api-decisoes-idprocessodecisao
      parameters:
        - name: idProcessoDecisao
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Decisao deletada com sucesso
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  "/api/decisoes/{idAlterado}":
    put:
      tags:
        - Decisões
      summary: "api/decisoes/{idAlterado}"
      operationId: api-decisoes-idalterado
      parameters:
        - name: idAlterado
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Decisão alterada com sucesso
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  /api/log/Inclui:
    post:
      tags:
        - VaraEForoUnificado
      summary: /api/log/Inclui
      description: Inclui o log.
      operationId: api-log-inclui
      requestBody:
        description: O log a inserir.
        content:
          application/json:
            example:
              cdLogOperacao: 0
              cdTipoOperacao: 0
              dsDetalheOperacao: string
              dtOperacao: string
              cdNo: 0
              dsNomeResponsavelAlteracao: string
      responses:
        "204":
          description: Inclui o log.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/log/Lista:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/log/Lista
      description: Lista os logs através das datas informadas.
      operationId: api-log-lista
      parameters:
        - name: filtrarPorDatas
          in: query
          required: true
          schema:
            type: boolean
        - name: dataInicial
          in: query
          required: true
          schema:
            type: string
        - name: dataFinal
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista os logs através das datas informadas.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/AtivaInativaGrupos:
    put:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/AtivaInativaGrupos
      description: Ativa ou inativa os grupos informados.
      operationId: api-vf-ativainativagrupos
      requestBody:
        description: Os grupos a ativar ou inativar.
        content:
          application/json:
            example:
              GrupoId: 0
              IDPai: 0
              nrOrdenacao: 0
              dsNome: string
              dsCategoriaFilhos: string
              dsHierarquiaCompleta: string
              nrNivel: 0
              inAtivo: true
              dsCodigoOriginal: string
              isEditavel: true
      responses:
        "200":
          description: Retorna um objeto contendo a mensagem de sucesso na ativação / inativação do grupo informado.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/AtualizaRito:
    put:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/AtualizaRito
      description: Atualiza o rito.
      operationId: api-vf-atualizarito
      parameters:
        - name: nomeResponsavelAlteracao
          in: query
          required: true
          schema:
            type: string
      requestBody:
        description: O rito a atualizar.
        content:
          application/json:
            example:
              cdRito: 0
              cdGrupoRito: 0
              dsNome: string
              inEsperaPoloPassivo: true
              inAtivo: true
              dsPoloAtivo: string
              dsPoloPassivo: string
              dsPoloTerceiro: string
      responses:
        "200":
          description: Atualiza o rito
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/Categorias:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/Categorias
      description: Lista as categorias.
      operationId: api-vf-categorias
      responses:
        "200":
          description: Lista as categorias.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/cdNoPorNome:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/cdNoPorNome
      description: Obtém o identificador pelo nome.
      operationId: api-vf-cdnopornome
      parameters:
        - name: nome
          in: query
          description: O nome do item.
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Obtém o identificador pelo nome.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/compilacao:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/compilacao
      description: Método de teste
      operationId: api-vf-compilacao
      responses:
        "200":
          description: Retornada em todos os casos.
          content:
            application/json:
              example: Resposta da API
  /api/VF/EditaGrupos:
    put:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/EditaGrupos
      description: Atualiza o array de grupos informados.
      operationId: api-vf-editagrupos
      parameters:
        - name: responsavelAlteracao
          in: query
          description: O nome do responsável pela atualização dos dados.
          required: true
          schema:
            type: string
      requestBody:
        description: Um array com os grupos a atualizar.
        content:
          application/json:
            example:
              GrupoId: 0
              IDPai: 0
              nrOrdenacao: 0
              dsNome: string
              dsCategoriaFilhos: string
              dsHierarquiaCompleta: string
              nrNivel: 0
              inAtivo: true
              dsCodigoOriginal: string
              isEditavel: true
      responses:
        "200":
          description: Atualiza o array de grupos informados.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/GravaOrdenacaoGrupos:
    put:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/GravaOrdenacaoGrupos
      description: Grava a nova ordenação dos grupos.
      operationId: api-vf-gravaordenacaogrupos
      requestBody:
        description: Uma array com os grupos que devem ser atualizados.
        content:
          application/json:
            example:
              GrupoId: 0
              IDPai: 0
              nrOrdenacao: 0
              dsNome: string
              dsCategoriaFilhos: string
              dsHierarquiaCompleta: string
              nrNivel: 0
              inAtivo: true
              dsCodigoOriginal: string
              isEditavel: true
      responses:
        "200":
          description: Grava a nova ordenação dos grupos.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/HierarquiaFormatadaDoNo:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/HierarquiaFormatadaDoNo
      description: Exibe a hierarquia formatada do grupo informado.
      operationId: api-vf-hierarquiaformatadadono
      parameters:
        - name: no
          in: query
          description: O identificador do grupo.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Se o identificador existir retorna a hierarquia formatada do grupo.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/VincularRitos:
    post:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/VincularRitos
      description: Vincula as varas aos grupos de ritos informados.
      operationId: api-vf-vincularritos
      requestBody:
        description: Vincula as varas aos grupos de ritos informados.
        content:
          application/json:
            example:
              idForo: 0
              idsGrupoRito:
                - 0
              responsavelAlteracao: string
      responses:
        "200":
          description: Vincula as varas aos grupos de ritos informados.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/IncluiGrupos:
    post:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/IncluiGrupos
      description: Inclui os grupos.
      operationId: api-vf-incluigrupos
      requestBody:
        description: Inclui os grupos informados.
        content:
          application/json:
            example:
              GrupoId: 0
              IDPai: 0
              nrOrdenacao: 0
              dsNome: string
              dsCategoriaFilhos: string
              dsHierarquiaCompleta: string
              nrNivel: 0
              inAtivo: true
              dsCodigoOriginal: string
              isEditavel: true
      responses:
        "200":
          description: Inclui os grupos informados.
        "400":
          description: "Em caso de erros, retorna um objeto contendo a mensagem de erro."
          content:
            application/json:
              example:
                erro: string
  /api/VF/IncluiRito:
    post:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/IncluiRito
      description: Insere o rito informado.
      operationId: api-vf-incluirito
      parameters:
        - name: responsavelAlteracao
          in: query
          description: O nome do responsável pela alteração.
          required: true
          schema:
            type: string
      requestBody:
        description: Insere o rito informado.
        content:
          application/json:
            example:
              cdRito: 0
              cdGrupoRito: 0
              dsNome: string
              inEsperaPoloPassivo: true
              inAtivo: true
              dsPoloAtivo: string
              dsPoloPassivo: string
              dsPoloTerceiro: string
      responses:
        "200":
          description: Insere o rito informado.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ListaGruposRito:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/ListaGruposRito
      description: Lista os grupos ritos.
      operationId: api-vf-listagruposrito
      parameters:
        - name: gruposPrincipais
          in: query
          description: O padrão é true.
          schema:
            type: boolean
      responses:
        "200":
          description: Lista os grupos de ritos.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ListaHierarquia:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/ListaHierarquia
      description: Lista a hierarquia do grupo informado.
      operationId: api-vf-listahierarquia
      parameters:
        - name: no
          in: query
          description: O identificador do grupo.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna a hierarquia do grupo informado.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ListaPorNivel:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/ListaPorNivel
      operationId: api-vf-listapornivel
      parameters:
        - name: nivel
          in: query
          description: O nível do grupo na hierarquia de varas e foros
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: "Retorna os grupos de acordo com o nível.\nSe o nível informado for inválido, será retornada uma resposta default no mesmo padrão."
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ListaRitosGrupoRitos:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/ListaRitosGrupoRitos
      description: Lista os ritos e grupos ritos de acordo com o tipo de pesquisa.
      operationId: api-vf-listaritosgruporitos
      parameters:
        - name: tipoPesquisa
          in: query
          description: "- Pesquisa por foro (1)\n- Pesquisa por rito (2)\n- Pesquisa por grupo rito (3) \n- Pesquisa por grupo rito pai (4)"
          required: true
          schema:
            type: integer
        - name: identificador
          in: query
          description: O identificador do grupo.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna os ritos e grupos de ritos de acordo com o tipo de pesquisa.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ListaVinculoGrupoERito:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/ListaVinculoGrupoERito
      description: Exibe os grupos de ritos aos quais a vara informada está vinculada.
      operationId: api-vf-listavinculogrupoerito
      parameters:
        - name: idVara
          in: query
          description: O identificador da vara.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna os vínculos entre a vara informada e os grupos de ritos.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ObtemFilhosPorPai:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/ObtemFilhosPorPai
      description: Lista os filhos do grupo informado.
      operationId: api-vf-obtemfilhosporpai
      parameters:
        - name: grupoId
          in: query
          description: O identificador do grupo.
          required: true
          schema:
            type: integer
        - name: somenteAtivos
          in: query
          description: "Retornar apenas os itens ativos?\nO padrão é true."
          schema:
            type: boolean
      responses:
        "200":
          description: Retorna os grupos filhos do grupo informado.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ObtemPorID:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/ObtemPorID
      description: Obtém as informações do grupo informado.
      operationId: api-vf-obtemporid
      parameters:
        - name: no
          in: query
          description: O identificador do grupo.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna as informações do grupo de acordo com o identificador dele.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/RitosDoGrupo:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/RitosDoGrupo
      description: Lista os ritos do grupo.
      operationId: api-vf-ritosdogrupo
      parameters:
        - name: cdGrupoRito
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Lista os ritos do grupo.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/VF/ritosDoNo:
    get:
      tags:
        - VaraEForoUnificado
      summary: /api/VF/ritosDoNo
      description: "Obtém a lista de ritos e grupos de ritos do nó informado. "
      operationId: api-vf-ritosdono
      parameters:
        - name: cdNo
          in: query
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém a lista de ritos e grupos de ritos do nó informado.
        "400":
          description: Em caso de Exception.
          content:
            application/json:
              example:
                erro: string
  /api/timesheet/atualizaWeb:
    put:
      summary: /api/timesheet/atualizaWeb
      description: Atualiza o lançamento de hora na web
      operationId: 61f981a684e7dd7e1ff37200
      requestBody:
        description: O lançamento de hora a atualizar.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOPlanilhaHoras"
            example:
              NrLEDESTaskCode: string
              NrLEDESActivityCode: string
              DsSolicitante: string
              CdSolicitante: 0
              IDCliente: 0
              IDProcesso: 0
              IDFuncionario: 0
              Descricao: string
              DataExecucao: {}
              TipoDeTarefa: 0
              QtdMinutos: 0
              IDFuncionarioResponsavel: 0
              IDFuncionarioBeneficiario: 0
              IDFechamentoPlanilhaHoras: 0
              IDRegistroFechamentoContaCliente: 0
              SituacaoDaPlanilha: 0
              MotivoDaRecusa: string
              IDClassificacaoHorasDebitaveis: 0
              IDClassificacao: 0
              Titulo: string
              IDAndamento: 0
              IDArea: 0
              IDContrato: 0
              DataLancamento: {}
              InFaturadoPreVersao35: true
              IDLancamentoDeHoras: 0
              IsEditable: true
      responses:
        "200":
          description: Retorna o lançamento de hora atualizado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
              example:
                NrLEDESTaskCode: string
                NrLEDESActivityCode: string
                DsSolicitante: string
                CdSolicitante: 0
                IDCliente: 0
                IDProcesso: 0
                IDFuncionario: 0
                Descricao: string
                DataExecucao: {}
                TipoDeTarefa: 0
                QtdMinutos: 0
                IDFuncionarioResponsavel: 0
                IDFuncionarioBeneficiario: 0
                IDFechamentoPlanilhaHoras: 0
                IDRegistroFechamentoContaCliente: 0
                SituacaoDaPlanilha: 0
                MotivoDaRecusa: string
                IDClassificacaoHorasDebitaveis: 0
                IDClassificacao: 0
                Titulo: string
                IDAndamento: 0
                IDArea: 0
                IDContrato: 0
                DataLancamento: {}
                InFaturadoPreVersao35: true
                IDLancamentoDeHoras: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/timesheet/incluiWeb:
    post:
      summary: /api/timesheet/inclui
      description: Inclui o lançamento de hora na web.
      operationId: 61f985cb2a9d95868fd4f22c
      requestBody:
        description: O lançamento de hora a incluir.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DTOPlanilhaHoras"
            example:
              NrLEDESTaskCode: string
              NrLEDESActivityCode: string
              DsSolicitante: string
              CdSolicitante: 0
              IDCliente: 0
              IDProcesso: 0
              IDFuncionario: 0
              Descricao: string
              DataExecucao: {}
              TipoDeTarefa: 0
              QtdMinutos: 0
              IDFuncionarioResponsavel: 0
              IDFuncionarioBeneficiario: 0
              IDFechamentoPlanilhaHoras: 0
              IDRegistroFechamentoContaCliente: 0
              SituacaoDaPlanilha: 0
              MotivoDaRecusa: string
              IDClassificacaoHorasDebitaveis: 0
              IDClassificacao: 0
              Titulo: string
              IDAndamento: 0
              IDArea: 0
              IDContrato: 0
              DataLancamento: {}
              InFaturadoPreVersao35: true
              IDLancamentoDeHoras: 0
              IsEditable: true
      responses:
        "200":
          description: Retorna o lançamento de horas incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
              example:
                NrLEDESTaskCode: string
                NrLEDESActivityCode: string
                DsSolicitante: string
                CdSolicitante: 0
                IDCliente: 0
                IDProcesso: 0
                IDFuncionario: 0
                Descricao: string
                DataExecucao: {}
                TipoDeTarefa: 0
                QtdMinutos: 0
                IDFuncionarioResponsavel: 0
                IDFuncionarioBeneficiario: 0
                IDFechamentoPlanilhaHoras: 0
                IDRegistroFechamentoContaCliente: 0
                SituacaoDaPlanilha: 0
                MotivoDaRecusa: string
                IDClassificacaoHorasDebitaveis: 0
                IDClassificacao: 0
                Titulo: string
                IDAndamento: 0
                IDArea: 0
                IDContrato: 0
                DataLancamento: {}
                InFaturadoPreVersao35: true
                IDLancamentoDeHoras: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{idCaso}/DecisoesComValores":
    get:
      summary: "api/casos/{idCaso}/DecisoesComValores"
      operationId: api-casos-idcaso-decisoescomvalores
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna as Decisoes do Caso com os Valores
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOProcessoDecisao"
              example:
                Valores:
                  - nrExitoPerda: 0
                    nrMoeda: 0
                    nrMoedaSolicitado: 0
                    dsJustificativaPedido: {}
                    nrMoedaContigenciado: 0
                    vlContigenciado: 0
                    vlDeferido: 0
                    IdProcessoExpectativaReivindicacao: 0
                    IdProcessoDecisao: 0
                    inAlterado: true
                    IdProcessoDecisaoValor: 0
                    vlSolicitado: 0
                    nrSituacao: 0
                inDeEncerramento: true
                cdParteJuiz: 0
                cdParteAdvAcusacao: 0
                cdParteAdvDefesa: 0
                Observacao: string
                vlDeferido: 0
                DataOcorrencia: string
                IdCaso: 0
                Decisao: 0
                nrExitoPerda: 0
                IdCasoDecisao: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: " Em caso de erro diferente de timeout ou sessão expirada."
  "/api/casos/Garantia/Inclui/{idCaso}":
    post:
      tags:
        - Garantia
      summary: "/api/casos/Garantia/Inclui/{idCaso}"
      description: Inclui garantia do caso
      operationId: 6203ef4e9d522794549db73e
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna o lançamento de horas incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
              example:
                NrLEDESTaskCode: string
                NrLEDESActivityCode: string
                DsSolicitante: string
                CdSolicitante: 0
                IDCliente: 0
                IDProcesso: 0
                IDFuncionario: 0
                Descricao: string
                DataExecucao: {}
                TipoDeTarefa: 0
                QtdMinutos: 0
                IDFuncionarioResponsavel: 0
                IDFuncionarioBeneficiario: 0
                IDFechamentoPlanilhaHoras: 0
                IDRegistroFechamentoContaCliente: 0
                SituacaoDaPlanilha: 0
                MotivoDaRecusa: string
                IDClassificacaoHorasDebitaveis: 0
                IDClassificacao: 0
                Titulo: string
                IDAndamento: 0
                IDArea: 0
                IDContrato: 0
                DataLancamento: {}
                InFaturadoPreVersao35: true
                IDLancamentoDeHoras: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/Garantia/Exclui/{idCaso}":
    delete:
      tags:
        - Garantia
      summary: "/api/casos/Garantia/Exclui/{idCaso}"
      description: Exclui garantia do caso
      operationId: 6204330976b38804bb0f2829
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna o lançamento de horas incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
              example:
                NrLEDESTaskCode: string
                NrLEDESActivityCode: string
                DsSolicitante: string
                CdSolicitante: 0
                IDCliente: 0
                IDProcesso: 0
                IDFuncionario: 0
                Descricao: string
                DataExecucao: {}
                TipoDeTarefa: 0
                QtdMinutos: 0
                IDFuncionarioResponsavel: 0
                IDFuncionarioBeneficiario: 0
                IDFechamentoPlanilhaHoras: 0
                IDRegistroFechamentoContaCliente: 0
                SituacaoDaPlanilha: 0
                MotivoDaRecusa: string
                IDClassificacaoHorasDebitaveis: 0
                IDClassificacao: 0
                Titulo: string
                IDAndamento: 0
                IDArea: 0
                IDContrato: 0
                DataLancamento: {}
                InFaturadoPreVersao35: true
                IDLancamentoDeHoras: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/Garantia/{idCasoGarantia}":
    get:
      tags:
        - Garantia
      summary: "/api/casos/Garantia/{idCasoGarantia}"
      description: Obtém um dto de ProcessoGarantia por idCasoGarantia
      operationId: 62053c8270795bc4d3041a5c
      parameters:
        - name: idCasoGarantia
          in: path
          required: true
          schema:
            type: ""
      responses:
        "200":
          description: Obtém um array com as garantias do caso encontrado pelo identificador.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoGarantia"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                IdCasoGarantia: 0
                Movimentacoes:
                  - IdMovimentacao: 0
                    IdCasoGarantia: 0
                    vlGarantiaAtualizado: 0
                    Moeda: string
                    TipoDeMovimentacao: string
                    Transferido: string
                    Justificativa: string
                    ValorMovimentacao: 0
                    ValorSaldoRemanescente: 0
                    StatusAlvara: string
                    DataMovimentacao: {}
                Moeda: string
                IdGarantia: 0
                Garantia: string
                idCaso: 0
                DataDeposito: {}
                DataDepositoFormatada: string
                ValorGarantia: 0
                ValorGarantiaAtualizado: 0
                Observacao: string
                Identificacao: string
                ValorSaldoRemanescente: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/Garantia/Atualiza/{idCaso}":
    put:
      tags:
        - Garantia
      summary: "/api/casos/Garantia/Atualiza/{idCaso}"
      description: Atualiza garantia do caso
      operationId: 62054aff0d0a5aa184d30a7a
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna o lançamento de horas incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
              example:
                NrLEDESTaskCode: string
                NrLEDESActivityCode: string
                DsSolicitante: string
                CdSolicitante: 0
                IDCliente: 0
                IDProcesso: 0
                IDFuncionario: 0
                Descricao: string
                DataExecucao: {}
                TipoDeTarefa: 0
                QtdMinutos: 0
                IDFuncionarioResponsavel: 0
                IDFuncionarioBeneficiario: 0
                IDFechamentoPlanilhaHoras: 0
                IDRegistroFechamentoContaCliente: 0
                SituacaoDaPlanilha: 0
                MotivoDaRecusa: string
                IDClassificacaoHorasDebitaveis: 0
                IDClassificacao: 0
                Titulo: string
                IDAndamento: 0
                IDArea: 0
                IDContrato: 0
                DataLancamento: {}
                InFaturadoPreVersao35: true
                IDLancamentoDeHoras: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  ? "/api/casos/Garantia/{idGarantia}/ObtemMovimentacao/{idGarantiaMovimentacao}/"
  : get:
      summary: "/api/casos/Garantia/{idGarantia}/ObtemMovimentacao/{idGarantiaMovimentacao}/"
      description: Obtém as movimentações de garantias do caso encontrado pelo identificador.
      operationId: 62058aa81baaec5a52662708
      parameters:
        - name: idGarantia
          in: path
          required: true
          schema:
            type: integer
        - name: idGarantiaMovimentacao
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Obtém um array com as garantias do caso encontrado pelo identificador.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoGarantia"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                IdCasoGarantia: 0
                Movimentacoes:
                  - IdMovimentacao: 0
                    IdCasoGarantia: 0
                    vlGarantiaAtualizado: 0
                    Moeda: string
                    TipoDeMovimentacao: string
                    Transferido: string
                    Justificativa: string
                    ValorMovimentacao: 0
                    ValorSaldoRemanescente: 0
                    StatusAlvara: string
                    DataMovimentacao: {}
                Moeda: string
                IdGarantia: 0
                Garantia: string
                idCaso: 0
                DataDeposito: {}
                DataDepositoFormatada: string
                ValorGarantia: 0
                ValorGarantiaAtualizado: 0
                Observacao: string
                Identificacao: string
                ValorSaldoRemanescente: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/TiposGarantia:
    get:
      tags:
        - Garantia
      summary: /api/TiposGarantia
      description: Obtém um array com os tipos de garantia
      operationId: 6205d36ea21b3444bd2e416a
      responses:
        "200":
          description: Obtém um array com as garantias do caso encontrado pelo identificador.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoGarantia"
              example:
                NomeCliente: string
                TituloCaso: string
                NumeroInterno: string
                NumeroExterno: string
                IdCasoGarantia: 0
                Movimentacoes:
                  - IdMovimentacao: 0
                    IdCasoGarantia: 0
                    vlGarantiaAtualizado: 0
                    Moeda: string
                    TipoDeMovimentacao: string
                    Transferido: string
                    Justificativa: string
                    ValorMovimentacao: 0
                    ValorSaldoRemanescente: 0
                    StatusAlvara: string
                    DataMovimentacao: {}
                Moeda: string
                IdGarantia: 0
                Garantia: string
                idCaso: 0
                DataDeposito: {}
                DataDepositoFormatada: string
                ValorGarantia: 0
                ValorGarantiaAtualizado: 0
                Observacao: string
                Identificacao: string
                ValorSaldoRemanescente: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/Garantia/IncluiMovimentacao/{idCaso}":
    post:
      tags:
        - Garantia
      summary: "/api/casos/Garantia/IncluiMovimentacao/{idCaso}"
      description: Inclui movimentação de garantia do caso
      operationId: 620690c88dd3c119fadf72e9
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna o lançamento de horas incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
              example:
                NrLEDESTaskCode: string
                NrLEDESActivityCode: string
                DsSolicitante: string
                CdSolicitante: 0
                IDCliente: 0
                IDProcesso: 0
                IDFuncionario: 0
                Descricao: string
                DataExecucao: {}
                TipoDeTarefa: 0
                QtdMinutos: 0
                IDFuncionarioResponsavel: 0
                IDFuncionarioBeneficiario: 0
                IDFechamentoPlanilhaHoras: 0
                IDRegistroFechamentoContaCliente: 0
                SituacaoDaPlanilha: 0
                MotivoDaRecusa: string
                IDClassificacaoHorasDebitaveis: 0
                IDClassificacao: 0
                Titulo: string
                IDAndamento: 0
                IDArea: 0
                IDContrato: 0
                DataLancamento: {}
                InFaturadoPreVersao35: true
                IDLancamentoDeHoras: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/render:
    get:
      tags:
        - Render
      summary: /api/render
      description: Obtém os dados para o relatório do Render
      operationId: api-render
      parameters:
        - name: idProcesso
          in: query
          description: O identificador do processo para obter os dados.
          schema:
            type: integer
      responses:
        "200":
          description: Obtém os dados para o relatório do Render
        "401":
          description: Em caso de sessão expirada.
        "500":
          description: Em caso diferente de sessão expirada.
  "/api/casos/GarantiaMovimentacao/Exclui/{idGarantiaMovimentacao}":
    delete:
      tags:
        - Garantia
      summary: "/api/casos/GarantiaMovimentacao/Exclui/{idGarantiaMovimentacao}"
      description: Exclui movimentação de garantia do caso
      operationId: 62073a6246ade0b7855fcccf
      parameters:
        - name: idGarantiaMovimentacao
          in: path
          required: true
          schema:
            type: ""
      responses:
        "200":
          description: Retorna o lançamento de horas incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
              example:
                NrLEDESTaskCode: string
                NrLEDESActivityCode: string
                DsSolicitante: string
                CdSolicitante: 0
                IDCliente: 0
                IDProcesso: 0
                IDFuncionario: 0
                Descricao: string
                DataExecucao: {}
                TipoDeTarefa: 0
                QtdMinutos: 0
                IDFuncionarioResponsavel: 0
                IDFuncionarioBeneficiario: 0
                IDFechamentoPlanilhaHoras: 0
                IDRegistroFechamentoContaCliente: 0
                SituacaoDaPlanilha: 0
                MotivoDaRecusa: string
                IDClassificacaoHorasDebitaveis: 0
                IDClassificacao: 0
                Titulo: string
                IDAndamento: 0
                IDArea: 0
                IDContrato: 0
                DataLancamento: {}
                InFaturadoPreVersao35: true
                IDLancamentoDeHoras: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  /api/casos/Garantia/AtualizaMovimentacao:
    put:
      summary: /api/casos/Garantia/AtualizaMovimentacao
      description: Atualiza movimentação de garantia do caso
      operationId: 6209b8be692bbf57c105e9f4
      responses:
        "200":
          description: Retorna o lançamento de horas incluído.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOPlanilhaHoras"
              example:
                NrLEDESTaskCode: string
                NrLEDESActivityCode: string
                DsSolicitante: string
                CdSolicitante: 0
                IDCliente: 0
                IDProcesso: 0
                IDFuncionario: 0
                Descricao: string
                DataExecucao: {}
                TipoDeTarefa: 0
                QtdMinutos: 0
                IDFuncionarioResponsavel: 0
                IDFuncionarioBeneficiario: 0
                IDFechamentoPlanilhaHoras: 0
                IDRegistroFechamentoContaCliente: 0
                SituacaoDaPlanilha: 0
                MotivoDaRecusa: string
                IDClassificacaoHorasDebitaveis: 0
                IDClassificacao: 0
                Titulo: string
                IDAndamento: 0
                IDArea: 0
                IDContrato: 0
                DataLancamento: {}
                InFaturadoPreVersao35: true
                IDLancamentoDeHoras: 0
                IsEditable: true
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/{idCaso}/PedidosComHistorico":
    get:
      summary: "api/casos/{idCaso}/PedidosComHistorico"
      operationId: api-casos-idcaso-pedidoscomhistorico
      parameters:
        - name: idCaso
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Pedidos com Historico equivalente à grid da aba de valores expectativa da casua do caso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOValoresComPedidosAtualizados"
              example:
                Pedidos:
                  - PedidoCausa: string
                    ValorDeferidoPelaUltimaDecisao: string
                    MoedaDeferidoPelaUltimaDecisao: string
                    Historico:
                      - MoedaSolicitadoText: string
                        PorcentagemExitoText: string
                        SituacaoText: string
                        Situacao: 0
                        JustificativaPedido: {}
                        dtDecisao: string
                        PorcentagemExito: 0
                        vlContigenciado: 0
                        MoedaContigenciado: 0
                        MoedaDeferido: 0
                        MoedaSolicitado: 0
                        vlSolicitado: 0
                        vlDeferido: 0
                        IdProcessoDecisao: 0
                        IdProcessoExpectativaReivindicacao: 0
                        dtInclusaoRegistro: string
                        IdPedidoHistorico: 0
                        MoedaContigenciadoText: string
                        MoedaDeferidoText: string
                vlValorPrevistoAtualizado: 0
                vlValorContigenciaAtualizado: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
  "/api/clientes/{idCliente}/pasta":
    get:
      summary: "/api/clientes/{idCliente}/pasta"
      description: Retorna id da pasta do cliente
      operationId: 62222843c68a257886a783d8
      parameters:
        - name: idCliente
          in: path
          description: ""
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Retorna um array com os casos do cliente.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DTOCasoSimples"
              example:
                IDCaso: 0
                Titulo: string
                IDCliente: 0
                NomeCliente: string
                NomeResponsavelCaso: string
                IDPasta: 0
                NomePasta: string
                IDContrato: 0
                NomeContrato: string
                NumeroInterno: string
                NumeroExterno: string
                NumeroLawoffice: 0
                IDCasoPai: 0
                Classe: 0
                DataDeCriacao: {}
                DataDeCriacaoFormatada: string
                Situacao: 0
        "401":
          description: Em caso de erro de timeout ou sessão expirada.
          content:
            application/json: {}
        "500":
          description: Em caso de erro diferente de timeout ou sessão expirada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Erro_interno_no_servidor"
              example:
                Message: string
                ExceptionMessage: string
                ExceptionType: string
                StackTrace: string
  "/api/casos/tarefas/{cdProcesso}/{ignoraIdFuncionario}/{filtro}":
    get:
      tags:
        - Tarefa
      summary: "/api/casos/tarefas/{cdProcesso}/{ignoraIdFuncionario}/{filtro}"
      description: Lista os itens de agenda de acordo com o filtro selecionado
      operationId: api-casos-tarefas-cdprocesso-ignoraidfuncionario-filtro
      parameters:
        - name: cdProcesso
          in: path
          required: true
          schema:
            type: integer
        - name: ignoraIdFuncionario
          in: path
          required: true
          schema:
            type: boolean
        - name: filtro
          in: path
          description: "1. Todos\n2. Finalizados\n3. Em aberto"
          required: true
          schema:
            type: integer
        - name: numeroDeRecorrencias
          in: query
          description: "Default: 10"
          schema:
            type: integer
      responses:
        "200":
          description: Lista os itens de agenda de acordo com o filtro selecionado
        "401":
          description: Em caso de sessão expirada.
        "500":
          description: Em caso de erro interno.
components:
  schemas:
    DTOTituloAgenda:
      type: object
      properties:
        IDEscritorio:
          type: integer
        TipoCobrancaEvento:
          type: integer
          description: "1: Por compromisso, 2: Por prazo, 3: Por atividade externa, 4: Por publicação, 5: Por audiência"
        Titulo:
          type: string
        IDTituloCobranca:
          type: integer
    DTORespostaCadastroProcessoPreCadastro:
      type: object
      properties:
        HouveException:
          type: boolean
        ProcessosNaoCadastrados:
          type: array
          items:
            required:
              - IdPreProcesso
              - DetalheErro
              - NumeroExterno
              - NumeroSequencial
              - NumeroInterno
              - TituloProcesso
            type: object
            properties:
              IdPreProcesso:
                type: integer
              DetalheErro:
                type: string
              NumeroExterno:
                type: string
              NumeroSequencial:
                type: integer
              NumeroInterno:
                type: string
              TituloProcesso:
                type: string
        ProcessosCadastrados:
          type: array
          items:
            required:
              - idPreProcesso
              - dsNumeroExterno
              - nrSequencia
              - nrInterno
              - dsTitulo
              - dtCriacao
              - IDFuncionario
              - Nome
              - cdProcesso
              - Domain
            type: object
            properties:
              idPreProcesso:
                type: integer
              dsNumeroExterno:
                type: string
              nrSequencia:
                type: integer
              nrInterno:
                type: string
              dsTitulo:
                type: string
              dtCriacao:
                type: object
              IDFuncionario:
                type: integer
              Nome:
                type: string
              cdProcesso:
                type: integer
              Domain:
                type: string
    DTOProcessoPreCadastro:
      type: object
      properties:
        idPreProcesso:
          type: integer
        idCliente:
          type: integer
        envolvimentoCliente:
          type: integer
          description: "1: Ativo, 2: Passivo, 3: Terceiro, 4: Nenhum, 5: Outro envolvido"
        idResponsavel:
          type: integer
        idProcessoPai:
          type: integer
        idArea:
          type: integer
        idPasta:
          type: integer
        dsAssunto:
          type: string
        idRito:
          type: integer
        idForo:
          type: integer
        numeroSequencial:
          type: integer
        confidencial:
          type: boolean
        dataCriacao:
          type: object
        dataUltimaAlteracao:
          type: object
        classeDoProcesso:
          type: integer
          description: "1: Processo, 2: Subprocesso, 3: Recurso, 4: Incidente"
        tipo:
          type: integer
          description: "1: Administrativo, 2: Interno, 3: Judicial Estadual, 4: Judicial Federal, 5: Judicial Trabalhista, 6: Interno escritório, 7: Militar Estadual, 8: Eleitoral, 9: Militar União"
        situacaoDoProcesso:
          type: integer
          description: "1: Ativo, 2: Arquivo morto, 3: Encerrado, 99: Excluído"
        tituloProcesso:
          type: string
        observacao:
          type: string
        numeroInterno:
          type: string
        idContrato:
          type: integer
        idFase:
          type: integer
        nivel:
          type: string
        numeroExterno:
          type: string
        valorCausa:
          type: integer
        valorExpectativaApuracao:
          type: integer
        valorContingencia:
          type: integer
        cnj:
          type: string
        utilizaPedidosDoProcessoPai:
          type: boolean
        foroTemporario:
          type: string
        comentarioExpectativaDaCausa:
          type: string
        segundoNumero:
          type: string
        anotacoesSegundoNumero:
          type: string
        dataEntrada:
          type: object
        dataDistribuicao:
          type: object
        hierarquia:
          type: array
          items:
            required:
              - nomeItemHierarquia
              - grupoFamilia
            type: object
            properties:
              nomeItemHierarquia:
                type: string
              grupoFamilia:
                type: integer
                description: "1: Tribunal, 2: Comarca, 3: Fórum, 4: Seção, 5: Natureza, 6: Município, 9: Nível"
        coResponsaveis:
          type: array
          items:
            type: integer
        idProcessoNoFornecedorPush:
          type: integer
        nrFornecedorPush:
          type: integer
        partes:
          type: array
          items:
            required:
              - IdParteNoLo
              - nomeParte
              - tipoPessoa
              - polo
            type: object
            properties:
              IdParteNoLo:
                type: integer
              nomeParte:
                type: string
              tipoPessoa:
                type: integer
                description: "1: Pessoa física, 2: Pessoa jurídica"
              polo:
                type: integer
                description: "1: Ativo, 2: Passivo, 3: Terceiro, 4: Nenhum, 5: Outro envolvido"
      example:
        idPreProcesso: 0
        idCliente: 0
        envolvimentoCliente: 0
        idResponsavel: 0
        idProcessoPai: 0
        idArea: 0
        idPasta: 0
        dsAssunto: string
        idRito: 0
        idForo: 0
        numeroSequencial: 0
        confidencial: true
        dataCriacao: {}
        dataUltimaAlteracao: {}
        classeDoProcesso: 0
        tipo: 0
        situacaoDoProcesso: 0
        tituloProcesso: string
        observacao: string
        numeroInterno: string
        idContrato: 0
        idFase: 0
        nivel: string
        numeroExterno: string
        valorCausa: 0
        valorExpectativaApuracao: 0
        valorContingencia: 0
        cnj: string
        utilizaPedidosDoProcessoPai: true
        foroTemporario: string
        comentarioExpectativaDaCausa: string
        segundoNumero: string
        anotacoesSegundoNumero: string
        dataEntrada: {}
        dataDistribuicao: {}
        hierarquia:
          - nomeItemHierarquia: string
            grupoFamilia: 0
        coResponsaveis:
          - 0
        idProcessoNoFornecedorPush: 0
        nrFornecedorPush: 0
        partes:
          - IdParteNoLo: 0
            nomeParte: string
            tipoPessoa: 0
            polo: 0
    DTOPasta:
      type: object
      properties:
        IDPasta:
          type: integer
        IDEscritorio:
          type: integer
        IDCliente:
          type: integer
        NumeroDaPasta:
          type: integer
        Assunto:
          type: string
    DTOItemAgendaSimples:
      type: object
      properties:
        NomeClienteProcesso:
          type: string
        TituloProcesso:
          type: string
        NumeroInterno:
          type: string
        NumeroExterno:
          type: string
        TipoDeItem:
          type: string
        Data:
          type: object
        DataFormatada:
          type: string
        Assunto:
          type: string
        IdCaso:
          type: integer
        idExecutor:
          type: integer
        Executor:
          type: string
        Observacao:
          type: string
        IdPai:
          type: integer
        Recorrencia:
          type: object
          properties:
            Tipo:
              type: string
            DiasDaSemana:
              type: array
              items:
                type: string
            DataInicio:
              type: string
            DataFim:
              type: string
            MesDoAno:
              type: string
            DiaDoMes:
              type: string
            ACada:
              type: string
    DTOFuncionario:
      type: object
      properties:
        IDFuncionario:
          type: integer
        Nome:
          type: string
        Apelido:
          type: string
        Logradouro:
          type: string
        NumeroLogradouro:
          type: string
        Bairro:
          type: string
        Cidade:
          type: string
        Estado:
          type: string
        Complemento:
          type: string
        CEP:
          type: string
        Email:
          type: string
        CPF:
          type: string
        RG:
          type: string
        EstadoCivil:
          type: integer
          description: "1: Solteiro, 2: Casado, 3: Viuvo, 4: Desquitado, 5: Divorciado, 6: Outros"
        DataDeNascimento:
          type: object
        DataDeNascimentoFormatada:
          type: string
        Cargo:
          type: string
        DataDeAdmissao:
          type: object
        DataDeAdmissaoFormatada:
          type: string
        DataDeDemissao:
          type: object
        DataDeDemissaoFormatada:
          type: string
        Oab:
          type: string
        NumeroDeDependentes:
          type: integer
        Admin:
          type: boolean
        Observacoes:
          type: string
        VinculoEmpregaticio:
          type: integer
          description: "1: Estagiário, 2: CLT, 3: Autônomo, 4: Terceirizado, 5: Outro, 6: Socio, 7: Correspondente, 8: Advogado, 9: Aprendiz"
    DTOErroCadastroProcesso:
      type: object
      properties:
        IdPreProcesso:
          type: integer
        DetalheErro:
          type: string
        NumeroExterno:
          type: string
        NumeroSequencial:
          type: integer
        NumeroInterno:
          type: string
        TituloProcesso:
          type: string
    DTOEnum:
      type: object
      properties:
        Valor:
          type: string
        ID:
          type: integer
        Description:
          type: string
    DTOCompromissoAudiencia:
      type: object
      properties:
        NomeClienteProcesso:
          type: string
        TituloProcesso:
          type: string
        NumeroInterno:
          type: string
        NumeroExterno:
          type: string
        idAudiencia:
          type: integer
        Assunto:
          type: string
        Area:
          type: string
        Hora:
          type: string
        Data:
          type: string
        DataFormatada:
          type: string
        Delegante:
          type: string
        Executor:
          type: string
        Participantes:
          type: array
          items:
            type: integer
        Descricao:
          type: string
        Local:
          type: string
        Situacao:
          type: string
        IdCaso:
          type: integer
        IdAudienciaPai:
          type: integer
    DTOCasoFicha:
      type: object
      properties:
        NomeCliente:
          type: string
        Titulo:
          type: string
        NumeroInterno:
          type: string
        NumeroExterno:
          type: string
        Situacao:
          type: string
        ExpectativaDeExito:
          type: string
        NomeFilial:
          type: string
        DataDeEntrada:
          type: object
        DataDeEntradaFormatada:
          type: string
        DataDeDistribuicao:
          type: object
        DataDeDistribuicaoFormatada:
          type: string
        DataPrevistaDeEncerramento:
          type: object
        DataPrevistaDeEncerramentoFormatada:
          type: string
        DataDeEncerramento:
          type: object
        DataDeEncerramentoFormatada:
          type: string
        Foro:
          type: string
        Rito:
          type: string
        ValorCausa:
          type: integer
        ValorPrevistoCausa:
          type: integer
        ValorContingencia:
          type: integer
        IdCaso:
          type: integer
        IdFase:
          type: integer
        IdPasta:
          type: integer
        IdArea:
          type: integer
        IdResponsavel:
          type: integer
        IDsCoResponsaveis:
          type: array
          items:
            type: integer
    DTOBuscaMobileNovo:
      type: object
      properties:
        IdsClientesComCasos:
          type: array
          items:
            required:
              - IDCliente
              - IDCasos
            type: object
            properties:
              IDCliente:
                type: integer
              IDCasos:
                type: array
                items:
                  type: integer
        TermoBuscado:
          type: string
    DTOArea:
      type: object
      properties:
        ID:
          type: integer
        Titulo:
          type: string
        Ativa:
          type: boolean
    DTOAndamentoSimples:
      type: object
      properties:
        NomeCliente:
          type: string
        TituloCaso:
          type: string
        NumeroInterno:
          type: string
        NumeroExterno:
          type: string
        idAndamento:
          type: integer
        Classificacao:
          type: string
        DataCompetencia:
          type: object
        DataCompetenciaFormatada:
          type: string
        TextoAndamento:
          type: string
        IdCaso:
          type: integer
    DTOAndamentoClassificacao:
      type: object
      properties:
        IDAndamentoClassificacao:
          type: integer
        NrOrdem:
          type: integer
        DsNome:
          type: string
        CdEscritorio:
          type: integer
        InExibirEmRelatorio:
          type: boolean
    DTOAndamento:
      type: object
      properties:
        NrTipoClassificacaoAutomatica:
          type: integer
          description: "1: Planilha de horas, 2: Push de publicação, 3: Push de andamento, 4: Outlook, 5: Automático, 6: Manual"
        NrClassificacaoAutomatica:
          type: integer
          description: "1: Prazo, 2: Compromisso, 3: Audiência, 4: Atividade Externa, 5: Publicação, 6: Decisão, 7: Exclusão, 8: Arquivo morto, 9: Encerramento, 10: Planilha de horas, 11: Push de publicação, 12: Push de andamento, 13: Outlook, 14: Movimentação processual, 15: Publicação processual, 16: Publicação geral, 17: Nova distribuição, 18: Cadastro agendado, 19: Status pedido, 20: Mudanças processo, 21: Falha no monitoramento, 22: Nova CIPPROC, 23: Mudança de conteúdo, 24: Nova intimação, 25: Retorno solicitação, 26: Relatório concluído"
        ClassificacaoDoAndamento:
          type: string
        LancamentoPeloTimeSheetDoMobile:
          type: boolean
        IdAndamento:
          type: integer
        TextoAndamento:
          type: string
        TextoAndamentoContinuacao:
          type: string
        IdProcesso:
          type: integer
        DataCompetencia:
          type: object
        DataInclusao:
          type: object
        IdAutor:
          type: integer
        NomeAutor:
          type: string
        InUsoInterno:
          type: boolean
        DataRevisao:
          type: object
        IdRevisor:
          type: integer
        NomeRevisor:
          type: string
        Situacao:
          type: integer
          description: "1: A aprovar, 2: Aprovado, 3: Publicado"
        InManual:
          type: boolean
        IdAndamentoTemplate:
          type: integer
        NovoAndamentoParaRevisao:
          type: integer
          description: "1: Administração, 2: Avisos, 3: Clientes, 4: Prazos, 5: Processos, 6: Mensagem shutdown, 7: Finanças"
        IdAndamentoClassificacao:
          type: integer
        IdPublicacaoAndamento:
          type: integer
        Tipo:
          type: integer
          description: "1: Publicação, 2: Andamento"
        dsCodigoOriginal:
          type: string
        IsEditable:
          type: boolean
      example:
        NrTipoClassificacaoAutomatica: 0
        NrClassificacaoAutomatica: 0
        ClassificacaoDoAndamento: string
        LancamentoPeloTimeSheetDoMobile: true
        IdAndamento: 0
        TextoAndamento: string
        TextoAndamentoContinuacao: string
        IdProcesso: 0
        DataCompetencia: {}
        DataInclusao: {}
        IdAutor: 0
        NomeAutor: string
        InUsoInterno: true
        DataRevisao: {}
        IdRevisor: 0
        NomeRevisor: string
        Situacao: 0
        InManual: true
        IdAndamentoTemplate: 0
        NovoAndamentoParaRevisao: 0
        IdAndamentoClassificacao: 0
        IdPublicacaoAndamento: 0
        Tipo: 0
        dsCodigoOriginal: string
        IsEditable: true
    DTOCategoriaPreco:
      type: object
      properties:
        IdCategoria:
          type: integer
        IdEscritorio:
          type: integer
        NomeCategoria:
          type: string
        NumeroMoeda:
          type: integer
        NumeroSituacao:
          type: integer
        ValorHoraTrabalhada:
          type: integer
        valorHoraTrabalhadaReal:
          type: integer
    DTOCategoriaFuncionario:
      type: object
      properties:
        IdFuncionario:
          type: integer
        IdCategoria:
          type: integer
        DataInicio:
          type: object
        DataLancamento:
          type: object
        NomeFuncionario:
          type: string
        NomeFuncionarioTransacao:
          type: string
        NomeCategoria:
          type: string
        NomeResponsavel:
          type: string
    DTOAcaoPush:
      type: object
      properties:
        IDAcaoPush:
          type: integer
        IDFuncionario:
          type: integer
        Tipo:
          type: integer
          description: "1: Geração de prazo, 2: Geração de atividade externa, 3: Geração de audiência, 4: Lançamento de hora, 5: Geração de tarefa, 6: Marcado como lixo, 7: Finalizar"
        DataCriacao:
          type: object
        IDVinculo:
          type: integer
        IDPublicacaoAndamento:
          type: integer
    DTOAdiantamento:
      type: object
      properties:
        IDAdiantamento:
          type: integer
        IDFuncionarioFavorecido:
          type: integer
        IDFuncionarioTransacao:
          type: integer
        IDContaFinanceira:
          type: integer
        DataDaSolicitacao:
          type: object
        Valor:
          type: integer
        Observacao:
          type: string
        NrDebito:
          type: integer
        IDEscritorio:
          type: integer
        Situacao:
          type: integer
          description: "1: Aguardando liberação, 2: Aguardando aprovação, 3: Liberado, 4: Recusado"
        DataPrevistaParaLiberar:
          type: object
        IDFuncionarioAprovador:
          type: integer
        DataDaAprovacao:
          type: object
        ObservacaoAprovador:
          type: string
        NrChave:
          type: integer
        IDFuncionarioIndicado:
          type: integer
    DTOAlocacaoDeDespesa:
      type: object
      properties:
        IDAlocacaoDeDespesa:
          type: integer
        IDDespesa:
          type: integer
        IDCliente:
          type: integer
        IDContrato:
          type: integer
        IDCaso:
          type: integer
        PorcentagemAlocada:
          type: integer
        ValorAlocado:
          type: integer
        IDFechamento:
          type: integer
        IDCategoriaDeDespesa:
          type: integer
        Caso:
          type: object
          properties:
            IDCaso:
              type: integer
            Titulo:
              type: string
            IDCliente:
              type: integer
            NomeCliente:
              type: string
            NomeResponsavelCaso:
              type: string
            IDPasta:
              type: integer
            NomePasta:
              type: string
            IDContrato:
              type: integer
            NomeContrato:
              type: string
            NumeroInterno:
              type: string
            NumeroExterno:
              type: string
            NumeroLawoffice:
              type: integer
            IDCasoPai:
              type: integer
            Classe:
              type: integer
              description: "1: Processo, 2: Subprocesso, 3: Recurso, 4: Incidente"
            DataDeCriacao:
              type: object
            DataDeCriacaoFormatada:
              type: string
            Situacao:
              type: integer
              description: "1: Ativo, 2: Arquivo morto, 3: Encerrado, 99: Excluído"
    DTOAnexo:
      type: object
      properties:
        path:
          type: string
        name:
          type: string
        type:
          type: string
        size:
          type: integer
        cdAnexo:
          type: integer
        base64:
          type: string
        anexoAExcluir:
          type: boolean
        rotacionarImagem:
          type: boolean
        isSelected:
          type: boolean
        title:
          type: string
        value:
          type: string
    DTOCasoDecisao:
      type: object
      properties:
        NomeCliente:
          type: string
        TituloCaso:
          type: string
        NumeroInterno:
          type: string
        NumeroExterno:
          type: string
        DataDecisao:
          type: object
        DataDecisaoFormatada:
          type: string
        Observacao:
          type: string
        ValorDeferido:
          type: integer
        ExitoPerda:
          type: string
        Decisao:
          type: string
        Encerramento:
          type: boolean
        IdCasoDecisao:
          type: integer
        IdCaso:
          type: integer
    DTOCasoPedido:
      type: object
      properties:
        NomeCliente:
          type: string
        TituloCaso:
          type: string
        NumeroInterno:
          type: string
        NumeroExterno:
          type: string
        ValorPrevisto:
          type: integer
        ValorPrevistoMoeda:
          type: string
        ValorContingenciado:
          type: integer
        ValorContingenciadoMoeda:
          type: string
        ValorDeferido:
          type: integer
        ValorDeferidoMoeda:
          type: string
        ExitoPerda:
          type: string
        Situacao:
          type: string
        Justificativa:
          type: string
        IdCasoPedido:
          type: integer
        IdCaso:
          type: integer
    DTODadoComplementar:
      type: object
      properties:
        NomeCliente:
          type: string
        TituloCaso:
          type: string
        NumeroInterno:
          type: string
        NumeroExterno:
          type: string
        Nome:
          type: string
        TipoCampo:
          type: string
        Valores:
          type: array
          items:
            type: string
        IdCaso:
          type: integer
    DTOCasoParte:
      type: object
      properties:
        NomeCliente:
          type: string
        TituloCaso:
          type: string
        NumeroInterno:
          type: string
        NumeroExterno:
          type: string
        IdCaso:
          type: integer
        IdParte:
          type: integer
        NomeRazaoSocial:
          type: string
        Envolvimento:
          type: string
        CPF:
          type: string
        CNPJ:
          type: string
        NomeAdvogado:
          type: string
        OABAdvogado:
          type: string
        RegimeDeContratacao:
          type: string
        DataAdmissao:
          type: object
        DataAdmissaoFormatada:
          type: string
        DataDemissao:
          type: object
        DataDemissaoFormatada:
          type: string
        Cargo:
          type: string
        CentroDeCusto:
          type: string
        Area:
          type: string
        Departamento:
          type: string
        TipoDeEnvolvimento:
          type: string
    DTOClassificacao:
      type: object
      properties:
        ID:
          type: integer
        Titulo:
          type: string
        TextoPadrao:
          type: string
    DTOContaDeAcesso:
      type: object
      properties:
        IDFuncionario:
          type: integer
        Conta:
          type: string
        IsPrimeiroAcesso:
          type: boolean
        IsOldPassword:
          type: boolean
    DTOForo:
      type: object
      properties:
        cdForo:
          type: integer
        cdGrupoForo:
          type: integer
        dsNome:
          type: string
        cdLocal:
          type: integer
        inAtivoInativo:
          type: boolean
        cdOrdenacao:
          type: integer
        cdUF:
          type: string
        Municipio:
          type: string
        dsHierarquia:
          type: string
    DTOFornecedor:
      type: object
      properties:
        IDFornecedor:
          type: integer
        Nome:
          type: string
        DDD:
          type: integer
        Telefone:
          type: string
        Extensao:
          type: string
        Banco:
          type: string
        Agencia:
          type: string
        ContaBanco:
          type: string
        Logradouro:
          type: string
        NumeroDoEndereco:
          type: string
        Complemento:
          type: string
        Bairro:
          type: string
        Cidade:
          type: string
        Estado:
          type: string
        CEP:
          type: string
        Observacao:
          type: string
        HomePage:
          type: string
        DataUltimoLancamento:
          type: object
        Pais:
          type: string
        IDEscritorio:
          type: integer
        CPFCNPJ:
          type: string
        Tipo:
          type: string
        Email:
          type: string
        DsCodigoSAP:
          type: string
        DsCodigoOriginal:
          type: string
        IDFuncionarioVinculado:
          type: integer
    DTOFaseProcesso:
      type: object
      properties:
        cdFaseProcesso:
          type: integer
        cdEscritorio:
          type: integer
        dsFaseProcesso:
          type: string
        nrGrupo:
          type: integer
          description: "1: Administrativo, 2: Interno, 3: Judicial Estadual, 4: Judicial Federal, 5: Judicial Trabalhista, 6: Interno Escritório, 7: Militar Estadual, 8: Eleitoral, 9: Militar da União"
        nrGrupoText:
          type: string
    DTONatureza:
      type: object
      properties:
        NomeCliente:
          type: string
        TituloCaso:
          type: string
        NumeroInterno:
          type: string
        NumeroExterno:
          type: string
        NomeNatureza:
          type: string
        IdCaso:
          type: integer
    DTOContratoSimples:
      type: object
      properties:
        Titulo:
          type: string
        IDCliente:
          type: integer
        Descricao:
          type: string
    DTORecorrenciaDeItemAgenda:
      type: object
      properties:
        Tipo:
          type: string
        DiasDaSemana:
          type: array
          items:
            type: string
        DataInicio:
          type: string
        DataFim:
          type: string
        MesDoAno:
          type: string
        DiaDoMes:
          type: string
        ACada:
          type: string
    DTOTabelaPreco:
      type: object
      properties:
        IdEscritorio:
          type: integer
        IdTabelaPreco:
          type: integer
        NomeTabela:
          type: string
    DTOVoucher:
      type: object
      properties:
        Observacao:
          type: string
        IDFornecedor:
          type: integer
        Nome:
          type: string
        ID:
          type: integer
    DTOUser:
      type: object
      properties:
        user:
          type: string
        pwd:
          type: string
        domain:
          type: string
    DTOValorApurado:
      type: object
      properties:
        NomeCliente:
          type: string
        TituloCaso:
          type: string
        NumeroInterno:
          type: string
        NumeroExterno:
          type: string
        Data:
          type: object
        DataFormatada:
          type: string
        NomePedido:
          type: string
        ValorApurado:
          type: integer
        Moeda:
          type: string
        Observacao:
          type: string
        IdCaso:
          type: integer
    DTOGastoDespesa:
      type: object
      properties:
        TipoDespesa:
          type: string
        TotalGasto:
          type: integer
    DTOTotalGastoDespesas:
      type: object
      properties:
        Gastos:
          type: array
          items:
            required:
              - TipoDespesa
              - TotalGasto
            type: object
            properties:
              TipoDespesa:
                type: string
              TotalGasto:
                type: integer
    DTOTipoProcessoAdministrativo:
      type: object
      properties:
        IdTipoProcessoAdministrativo:
          type: integer
        Nome:
          type: string
    DTOTabelaPrecoCategoria:
      type: object
      properties:
        IdCategoria:
          type: integer
        IdTabelaPreco:
          type: integer
        IdTabelaPrecoCategoria:
          type: integer
        NomeCategoria:
          type: string
        NomeTabelaPreco:
          type: string
        DataVigencia:
          type: object
        EhPadrao:
          type: boolean
        NumeroMoeda:
          type: integer
        NumeroMoedaHoraPadrao:
          type: integer
        NumeroMoedaInt:
          type: integer
        ValorHora:
          type: integer
        ValorHoraTrabalhadaPadrao:
          type: integer
    DTOSystem:
      type: object
      properties:
        version:
          type: string
        workstation:
          type: string
    DTORito:
      type: object
      properties:
        cdRito:
          type: integer
        cdGrupoRito:
          type: integer
        dsNome:
          type: string
        inEsperaPoloPassivo:
          type: boolean
        dsPoloAtivo:
          type: string
        dsPoloPassivo:
          type: string
        dsPoloTerceiro:
          type: string
    DTOFaseCaso:
      type: object
      properties:
        NomeCliente:
          type: string
        TituloCaso:
          type: string
        NumeroInterno:
          type: string
        NumeroExterno:
          type: string
        NomeFaseCaso:
          type: string
        IdCaso:
          type: integer
    DTOContato:
      type: object
      properties:
        IDContato:
          type: integer
        IDCliente:
          type: integer
        Nome:
          type: string
        Email:
          type: string
        Cargo:
          type: string
        CodigoPais:
          type: integer
        DDD:
          type: integer
        Telefone:
          type: integer
        Ramal:
          type: integer
    DTOFuncionarioBase:
      type: object
      properties:
        IdFuncionario:
          type: integer
        IdCategoria:
          type: integer
        IdContaAcesso:
          type: integer
        IdEscritorio:
          type: integer
        IdMaterialPerfilSolicitacao:
          type: integer
        NomeFuncionario:
          type: string
        NomeCargo:
          type: string
        NomeCategoria:
          type: string
        NomeContaAcesso:
          type: string
        NomeAreas:
          type: string
        NomeUsuarioImpressao:
          type: string
        DataDeAdmissao:
          type: object
        DataDeDemissao:
          type: object
        EhAdmin:
          type: boolean
        GeraDespesaContasPagas:
          type: boolean
        NumeroAlocacaoAreaTipo:
          type: integer
        NumeroNivelLancamentoDespesa:
          type: integer
        NumeroSituacaoCategoria:
          type: integer
        NumeroUsuarioCopia:
          type: integer
        NumeroVinculoEmpregaticio:
          type: integer
    DTOMovimentacao:
      type: object
      properties:
        IdMovimentacao:
          type: integer
        IdCasoGarantia:
          type: integer
        vlGarantiaAtualizado:
          type: integer
        Moeda:
          type: string
        TipoDeMovimentacao:
          type: string
        Transferido:
          type: string
        Justificativa:
          type: string
        ValorMovimentacao:
          type: integer
        ValorSaldoRemanescente:
          type: integer
        StatusAlvara:
          type: string
        DataMovimentacao:
          type: object
    DTOParte:
      type: object
      properties:
        IdParte:
          type: integer
        Nome:
          type: string
        NomeAdvogado:
          type: string
        CPF:
          type: string
        OABAdvogado:
          type: string
        TipoPessoa:
          type: integer
    DTOProduto:
      type: object
      properties:
        NomeCliente:
          type: string
        TituloCaso:
          type: string
        NumeroInterno:
          type: string
        NumeroExterno:
          type: string
        dsProduto:
          type: string
        IdCaso:
          type: integer
    DTORegiaoRamoJudicial:
      type: object
      properties:
        nrRamoJudicial:
          type: integer
          description: "1: Administrativo, 2: Interno, 3: Judicial Estadual, 4: Judicial Federal, 5: Judicial Trabalhista, 6: Interno Escritório, 7: Militar Estadual, 8: Eleitoral, 9: Militar da União"
        cdRegiao:
          type: integer
        dsRegiao:
          type: string
    DTOSolicitante:
      type: object
      properties:
        DsNome:
          type: string
        CdSolicitante:
          type: integer
    DTOEnderecoCliente:
      type: object
      properties:
        IDCliente:
          type: integer
        NumeroDoCliente:
          type: integer
        TipoEndereco:
          type: integer
          description: "1: Residencial, 2: Comercial, 3: Outros"
        Logradouro:
          type: string
        Numero:
          type: string
        Complemento:
          type: string
        Bairro:
          type: string
        Cidade:
          type: string
        Estado:
          type: string
        CEP:
          type: string
        Pais:
          type: string
        EnderecoPrincipal:
          type: integer
    DTOCliente:
      type: object
      properties:
        IDCliente:
          type: integer
        NumeroDoCliente:
          type: integer
        Nome:
          type: string
        Apelido:
          type: string
        Tipo:
          type: integer
          description: "1: Pessoa física, 2: Pessoa jurídica"
        Email:
          type: string
        Situacao:
          type: integer
          description: "1: Ativa, 2: Inativa"
        MotivoInativacao:
          type: string
        WebSite:
          type: string
        Observacoes:
          type: string
        CPFCNPJ:
          type: string
        TratoConfidencial:
          type: boolean
        InscricaoMunicipal:
          type: string
        DataCriacao:
          type: object
        Estrangeiro:
          type: boolean
        InscricaoEstadual:
          type: string
        Idioma:
          type: string
        TipoEndereco:
          type: integer
          description: "1: Residencial, 2: Comercial, 3: Outros"
        Logradouro:
          type: string
        Numero:
          type: string
        Complemento:
          type: string
        Bairro:
          type: string
        Cidade:
          type: string
        Estado:
          type: string
        CEP:
          type: string
        Pais:
          type: string
        EnderecoPrincipal:
          type: integer
    DTOClienteMobile:
      type: object
      properties:
        IDCliente:
          type: integer
        NumeroDoCliente:
          type: integer
        Nome:
          type: string
        Apelido:
          type: string
        Tipo:
          type: integer
          description: "1: Pessoa física, 2: Pessoa jurídica"
        Email:
          type: string
        Situacao:
          type: integer
          description: "1: Ativa, 2: Inativa"
        MotivoInativacao:
          type: string
        WebSite:
          type: string
        Observacoes:
          type: string
        CPFCNPJ:
          type: string
        TratoConfidencial:
          type: boolean
        InscricaoMunicipal:
          type: string
        DataCriacao:
          type: object
        Estrangeiro:
          type: boolean
        InscricaoEstadual:
          type: string
        Idioma:
          type: string
        TipoEndereco:
          type: integer
          description: "1: Residencial, 2: Comercial, 3: Outros"
        Logradouro:
          type: string
        Numero:
          type: string
        Complemento:
          type: string
        Bairro:
          type: string
        Cidade:
          type: string
        Estado:
          type: string
        CEP:
          type: string
        Pais:
          type: string
        EnderecoPrincipal:
          type: integer
        inTemLEDES:
          type: boolean
        inNecessitaDeSolicitanteParaLancamentoDeHoras:
          type: boolean
        Status:
          type: integer
          description: "Definições: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
    DTOPushPublicacaoAndamento:
      type: object
      properties:
        IDPushPublicacaoAndamento:
          type: integer
        DespachoPublicacao:
          type: string
        OABVistaEstado:
          type: string
        OABVista:
          type: string
        NomeVinculoVista:
          type: string
        IDVinculoVista:
          type: integer
        Cidade:
          type: string
        DataCadastroNaBaseVista:
          type: object
        Vara:
          type: string
        IDPublicacaoVista:
          type: integer
        TipoDePush:
          type: integer
          description: "1: Push de publicação, 2: Push de andamento"
        DataAndamento:
          type: object
        NumeroEdicaoDiario:
          type: integer
        Orgao:
          type: string
        Diario:
          type: string
        Estado:
          type: string
        InVinculado:
          type: boolean
        CNJ:
          type: string
        Texto:
          type: string
        CodigoProcesso:
          type: integer
    DTOLiberacao:
      type: object
      properties:
        DataUltimaLiberacao:
          type: object
        Descricao:
          type: string
        ID:
          type: integer
        Situacao:
          type: integer
          description: "-2147483647: Aberto, -2147483646: Fechado, -2147483645: Programado, -2147483644: Liberado para fechamento"
        ValorDespesasLancadas:
          type: integer
        ValorLiberado:
          type: integer
        Adiantamento:
          type: string
    DTOHistoricoPush:
      type: object
      properties:
        Chave:
          type: string
        DataRegistro:
          type: object
        Tipo:
          type: integer
          description: "1: Insere escritório publicação, 2: Insere escritório andamento, 3: Desativa escritório publicação, 4: Desativa escritório andamento, 5: Ativa escritório publicação, 6: Ativa escritório andamento, 11: Cadastra termo, 12: Remove termo, 13: Cadastra variação, 14: Remove variação, 15: Cadastra termo bloqueio, 16: Remove termo bloqueio, 17: Atualiza termo, 21: Cadastra processo, 22: Remove processo"
        IDHistoricoPush:
          type: integer
    DTOContrato:
      type: object
      properties:
        IDContrato:
          type: integer
        Titulo:
          type: string
        IDCliente:
          type: integer
        NomeCliente:
          type: string
        Observacao:
          type: string
        DataInicio:
          type: object
        DataPrevisaoEncerramento:
          type: object
        DataEncerramento:
          type: object
        Situacao:
          type: integer
          description: "1: Ativo, 3: Encerrado"
    DTOCategoriaDespesa:
      type: object
      properties:
        NomeCategoria:
          type: string
        IDCategoria:
          type: integer
        IDCategoriaPai:
          type: integer
        IsKmRodado:
          type: boolean
        SubCategorias:
          type: array
          items:
            required:
              - NomeCategoria
              - IDCategoria
              - IDCategoriaPai
              - IsKmRodado
              - SubCategorias
            type: object
            properties:
              NomeCategoria:
                type: string
              IDCategoria:
                type: integer
              IDCategoriaPai:
                type: integer
              IsKmRodado:
                type: boolean
              SubCategorias: {}
      example:
        NomeCategoria: string
        IDCategoria: 0
        IDCategoriaPai: 0
        IsKmRodado: false
        SubCategorias:
          - NomeCategoria: string
            IDCategoria: 0
            IDCategoriaPai: 0
            IsKmRodado: false
    DTOGrupoRito:
      type: object
      properties:
        cdGrupoRito:
          type: integer
        dsNome:
          type: string
        cdGrupoPai:
          type: integer
        Ritos:
          type: array
          items:
            required:
              - cdRito
              - cdGrupoRito
              - dsNome
              - inEsperaPoloPassivo
              - dsPoloAtivo
              - dsPoloPassivo
              - dsPoloTerceiro
            type: object
            properties:
              cdRito:
                type: integer
              cdGrupoRito:
                type: integer
              dsNome:
                type: string
              inEsperaPoloPassivo:
                type: boolean
              dsPoloAtivo:
                type: string
              dsPoloPassivo:
                type: string
              dsPoloTerceiro:
                type: string
        Grupos:
          type: array
          items:
            required:
              - cdGrupoRito
              - dsNome
              - cdGrupoPai
              - Ritos
            type: object
            properties:
              cdGrupoRito:
                type: integer
              dsNome:
                type: string
              cdGrupoPai:
                type: integer
              Ritos:
                type: array
                items:
                  required:
                    - cdRito
                    - cdGrupoRito
                    - dsNome
                    - inEsperaPoloPassivo
                    - dsPoloAtivo
                    - dsPoloPassivo
                    - dsPoloTerceiro
                  type: object
                  properties:
                    cdRito:
                      type: integer
                    cdGrupoRito:
                      type: integer
                    dsNome:
                      type: string
                    inEsperaPoloPassivo:
                      type: boolean
                    dsPoloAtivo:
                      type: string
                    dsPoloPassivo:
                      type: string
                    dsPoloTerceiro:
                      type: string
      example:
        cdGrupoRito: 0
        dsNome: string
        cdGrupoPai: 0
        Ritos:
          - cdRito: 0
            cdGrupoRito: 0
            dsNome: string
            inEsperaPoloPassivo: false
            dsPoloAtivo: string
            dsPoloPassivo: string
            dsPoloTerceiro: string
        Grupos:
          - cdGrupoRito: 0
            dsNome: string
            cdGrupoPai: 0
            Ritos:
              - cdRito: 0
                cdGrupoRito: 0
                dsNome: string
                inEsperaPoloPassivo: false
                dsPoloAtivo: string
                dsPoloPassivo: string
                dsPoloTerceiro: string
    DTOItemPublicacao:
      type: object
      properties:
        IDItemPublicacao:
          type: integer
        DataDePublicacao:
          type: object
        Status:
          type: integer
          description: "1: Nova, 2: Visualizada, 4: Finalizada"
        Text:
          type: string
        IDProcesso:
          type: integer
        DataDeDisponibilizacao:
          type: object
        IDAutor:
          type: integer
        Situacao:
          type: integer
          description: "1: A aprovar, 2: Aprovado, 3: Publicado"
        TextContinuacao:
          type: string
        IDAndamento:
          type: integer
        TipoDePush:
          type: integer
          description: "1: Push de publicação, 2: Push de andamento"
      example:
        IDItemPublicacao: 0
        DataDePublicacao: {}
        Status: 0
        Text: string
        IDProcesso: 0
        DataDeDisponibilizacao: {}
        IDAutor: 0
        Situacao: 0
        TextContinuacao: string
        IDAndamento: 0
        TipoDePush: 0
    DTOCasoGarantia:
      type: object
      properties:
        NomeCliente:
          type: string
        TituloCaso:
          type: string
        NumeroInterno:
          type: string
        NumeroExterno:
          type: string
        IdCasoGarantia:
          type: integer
        Movimentacoes:
          type: array
          items:
            required:
              - IdMovimentacao
              - IdCasoGarantia
              - vlGarantiaAtualizado
              - Moeda
              - TipoDeMovimentacao
              - Transferido
              - Justificativa
              - ValorMovimentacao
              - ValorSaldoRemanescente
              - StatusAlvara
              - DataMovimentacao
            type: object
            properties:
              IdMovimentacao:
                type: integer
              IdCasoGarantia:
                type: integer
              vlGarantiaAtualizado:
                type: integer
              Moeda:
                type: string
              TipoDeMovimentacao:
                type: string
              Transferido:
                type: string
              Justificativa:
                type: string
              ValorMovimentacao:
                type: integer
              ValorSaldoRemanescente:
                type: integer
              StatusAlvara:
                type: string
              DataMovimentacao:
                type: object
        Moeda:
          type: string
        IdGarantia:
          type: integer
        Garantia:
          type: string
        idCaso:
          type: integer
        DataDeposito:
          type: object
        DataDepositoFormatada:
          type: string
        ValorGarantia:
          type: integer
        ValorGarantiaAtualizado:
          type: integer
        Observacao:
          type: string
        Identificacao:
          type: string
        ValorSaldoRemanescente:
          type: integer
    DTOGrupoForo:
      type: object
      properties:
        inAdmiteMunicipio:
          type: boolean
        cdRegiao:
          type: integer
        cdUF:
          type: string
        cdLocalGrupoForo:
          type: integer
        dsNome:
          type: string
        nrInstancia:
          type: integer
        cdGrupoFamilia:
          type: integer
        nrRamoJudicial:
          type: integer
          description: "1: Administrativo, 2: Interno, 3: Judicial Estadual, 4: Judicial Federal, 5: Judicial Trabalhista, 6: Interno Escritório, 7: Militar Estadual, 8: Eleitoral, 9: Militar da União"
        cdGrupoForo:
          type: integer
        cdGrupoPai:
          type: integer
        Foros:
          type: array
          items:
            required:
              - cdForo
              - cdGrupoForo
              - dsNome
              - cdLocal
              - inAtivoInativo
              - cdOrdenacao
              - cdUF
              - Municipio
              - dsHierarquia
            type: object
            properties:
              cdForo:
                type: integer
              cdGrupoForo:
                type: integer
              dsNome:
                type: string
              cdLocal:
                type: integer
              inAtivoInativo:
                type: boolean
              cdOrdenacao:
                type: integer
              cdUF:
                type: string
              Municipio:
                type: string
              dsHierarquia:
                type: string
        GrupoPai:
          type: object
          properties:
            inAdmiteMunicipio:
              type: boolean
            cdRegiao:
              type: integer
            cdUF:
              type: string
            cdLocalGrupoForo:
              type: integer
            dsNome:
              type: string
            nrInstancia:
              type: integer
            cdGrupoFamilia:
              type: integer
            nrRamoJudicial:
              type: integer
            cdGrupoForo:
              type: integer
            cdGrupoPai:
              type: integer
            Foros:
              type: array
              items:
                required:
                  - cdForo
                  - cdGrupoForo
                  - dsNome
                  - cdLocal
                  - inAtivoInativo
                  - cdOrdenacao
                  - cdUF
                  - Municipio
                  - dsHierarquia
                type: object
                properties:
                  cdForo:
                    type: integer
                  cdGrupoForo:
                    type: integer
                  dsNome:
                    type: string
                  cdLocal:
                    type: integer
                  inAtivoInativo:
                    type: boolean
                  cdOrdenacao:
                    type: integer
                  cdUF:
                    type: string
                  Municipio:
                    type: string
                  dsHierarquia:
                    type: string
            GrupoPai:
              type: object
            Grupos:
              type: array
        Grupos:
          type: array
          items:
            required:
              - inAdmiteMunicipio
              - cdRegiao
              - cdUF
              - cdLocalGrupoForo
              - dsNome
              - nrInstancia
              - cdGrupoFamilia
              - nrRamoJudicial
              - cdGrupoForo
              - cdGrupoPai
              - Foros
              - GrupoPai
              - Grupos
            type: object
            properties:
              inAdmiteMunicipio:
                type: boolean
              cdRegiao:
                type: integer
              cdUF:
                type: string
              cdLocalGrupoForo:
                type: integer
              dsNome:
                type: string
              nrInstancia:
                type: integer
              cdGrupoFamilia:
                type: integer
              nrRamoJudicial:
                type: integer
              cdGrupoForo:
                type: integer
              cdGrupoPai:
                type: integer
              Foros:
                type: array
                items:
                  required:
                    - cdForo
                    - cdGrupoForo
                    - dsNome
                    - cdLocal
                    - inAtivoInativo
                    - cdOrdenacao
                    - cdUF
                    - Municipio
                    - dsHierarquia
                  type: object
                  properties:
                    cdForo:
                      type: integer
                    cdGrupoForo:
                      type: integer
                    dsNome:
                      type: string
                    cdLocal:
                      type: integer
                    inAtivoInativo:
                      type: boolean
                    cdOrdenacao:
                      type: integer
                    cdUF:
                      type: string
                    Municipio:
                      type: string
                    dsHierarquia:
                      type: string
              GrupoPai:
                type: object
              Grupos:
                type: array
    DTOLawOfficeSenderBusinessContext:
      type: object
      properties:
        BusinessContextName:
          type: string
        BusinessContextId:
          type: integer
        MessageDataContext:
          type: string
        ParentMessageContextId:
          type: integer
        MessageContextId:
          type: integer
    DTOLawOfficeSenderContext:
      type: object
      properties:
        SenderName:
          type: string
        SenderId:
          type: integer
        BusinessContext:
          type: object
          properties:
            BusinessContextName:
              type: string
            BusinessContextId:
              type: integer
            MessageDataContext:
              type: string
            ParentMessageContextId:
              type: integer
            MessageContextId:
              type: integer
        hasBusinessContext:
          type: boolean
    DTOLawOfficeContextDataLogon:
      type: object
      properties:
        _inContratoAceito:
          type: boolean
        _dtDataValidadeAsp:
          type: object
        IntegracoesAtivas:
          type: array
          items:
            type: integer
            description: "1: Processos Petrobrás, 2: Processos Exportação Planilha BI, 3: Processos numeração no cliente, 4: Apelido funcionário na nota honorários, 5: Relatórios BI Agenda Pauta em Processos, 6: Exportação processos, 7: Publicações de processos, 8: Nota honorários com pasta título processo juntos"
        IsMigrador:
          type: boolean
        Funcionalidades:
          type: array
          items:
            type: integer
            description: Verificar Enum Funcionalidade
        flAdmin:
          type: boolean
        inPermiteIndicarAprovadorAdto:
          type: boolean
        IDEscritorio:
          type: integer
        Escritorio:
          type: string
        EscritorioLicencas:
          type: integer
        EscritorioCNPJ:
          type: string
        Domain:
          type: string
        IDContaDeAcesso:
          type: integer
        IDFuncionario:
          type: integer
        ContaDeAcesso:
          type: string
        Nome:
          type: string
        Apelido:
          type: string
        EmailFuncionario:
          type: string
        GuidUsuario:
          type: object
        HashCodeSenha:
          type: string
        DTUltimaMensagem:
          type: object
        GuidEscritorio:
          type: object
        flAcessaBI:
          type: boolean
        BILicencas:
          type: integer
        flAcessaEasyReport:
          type: boolean
        EasyReportLicencas:
          type: integer
        IDsGruposFuncionalidades:
          type: array
          items:
            type: integer
        flTemIntegracaoSAP:
          type: boolean
        UserMessage:
          type: string
        PrimeiroAcesso:
          type: boolean
        Result:
          type: integer
          description: "1: Versão desatualizada, 2: Versão incompatível, 3: Escritório inválido, 4: Escritório inativo, 5: Escritório inoperante, 6: Licenças excedidas, 7: Conta inativa, 8: Sessão já ativa, 9: Sistema em atualização, 10: Código de acesso necessário, 11: Código de acesso inválido, 12: Usuário ou senha incorretos."
        NewVersion:
          type: boolean
        nrFluxosCustomizadosDoEscritorio:
          type: integer
        AuthCode:
          type: object
        Platform:
          type: integer
          description: "0: Windows, 1: Mobile, 2: Addin Outlook"
        ClientNumberFormatInfo:
          type: object
        SenderContext:
          type: object
          properties:
            SenderName:
              type: string
            SenderId:
              type: integer
            BusinessContext:
              type: object
              properties:
                BusinessContextName:
                  type: string
                BusinessContextId:
                  type: integer
                MessageDataContext:
                  type: string
                ParentMessageContextId:
                  type: integer
                MessageContextId:
                  type: integer
            hasBusinessContext:
              type: boolean
    DTODespesa:
      type: object
      properties:
        ObservacaoAnexo:
          type: string
        Anexos:
          type: array
          items:
            required:
              - path
              - name
              - type
              - size
              - cdAnexo
              - base64
              - anexoAExcluir
              - rotacionarImagem
              - isSelected
              - title
              - value
            type: object
            properties:
              path:
                type: string
              name:
                type: string
              type:
                type: string
              size:
                type: integer
              cdAnexo:
                type: integer
              base64:
                type: string
              anexoAExcluir:
                type: boolean
              rotacionarImagem:
                type: boolean
              isSelected:
                type: boolean
              title:
                type: string
              value:
                type: string
        CategoriaLancamento:
          type: string
        DataDaDespesa:
          type: object
        DataDaDespesaFormatada:
          type: string
        ValorDaDespesa:
          type: integer
        IDFuncionarioTransacao:
          type: integer
        DataTransacao:
          type: object
        DataTransacaoFormatada:
          type: string
        Moeda:
          type: integer
          description: "1: Real, 2: Dólar Americano, 3: Euro"
        IDFuncionarioFavorecido:
          type: integer
        IDCategoriaLancamento:
          type: integer
        IDVoucher:
          type: integer
        IDLiberacao:
          type: integer
        IDFornecedor:
          type: integer
        Documento:
          type: string
        TipoDePagamento:
          type: integer
          description: "1: Fundo fixo, 2: Voucher, 3: Reembolso, 4: Contas a pagar, 5: Estorno"
        IDEscritorio:
          type: integer
        QtdKMRodado:
          type: integer
        TextoDaDespesa:
          type: string
        TemTextoModificado:
          type: boolean
        ValorKMRodado:
          type: integer
        Situacao:
          type: integer
          description: "1: Aprovado, 2: Aguardando aprovação, 3: Pré aprovado, 4: Não aprovado, 5: Aprovado e Pré aprovado"
        DataAprovacao:
          type: object
        DataAprovacaoFormatada:
          type: string
        ObservacaoAprovador:
          type: string
        IDFuncionarioAprovador:
          type: integer
        IDFuncionarioIndicado:
          type: integer
        IDTarifacao:
          type: integer
        IDSolicitacaoMaterialItem:
          type: integer
        IDGeracaoDespesa:
          type: integer
        IDDespesa:
          type: integer
        Alocacoes:
          type: array
          items:
            required:
              - IDAlocacaoDeDespesa
              - IDDespesa
              - IDCliente
              - IDContrato
              - IDCaso
              - PorcentagemAlocada
              - ValorAlocado
              - IDFechamento
              - IDCategoriaDeDespesa
              - Caso
            type: object
            properties:
              IDAlocacaoDeDespesa:
                type: integer
              IDDespesa:
                type: integer
              IDCliente:
                type: integer
              IDContrato:
                type: integer
              IDCaso:
                type: integer
              PorcentagemAlocada:
                type: integer
              ValorAlocado:
                type: integer
              IDFechamento:
                type: integer
              IDCategoriaDeDespesa:
                type: integer
              Caso:
                type: object
                properties:
                  IDCaso:
                    type: integer
                  Titulo:
                    type: string
                  IDCliente:
                    type: integer
                  NomeCliente:
                    type: string
                  NomeResponsavelCaso:
                    type: string
                  IDPasta:
                    type: integer
                  NomePasta:
                    type: string
                  IDContrato:
                    type: integer
                  NomeContrato:
                    type: string
                  NumeroInterno:
                    type: string
                  NumeroExterno:
                    type: string
                  NumeroLawoffice:
                    type: integer
                  IDCasoPai:
                    type: integer
                  Classe:
                    type: integer
                  DataDeCriacao:
                    type: object
                  DataDeCriacaoFormatada:
                    type: string
                  Situacao:
                    type: integer
        IsEditable:
          type: boolean
      example:
        ObservacaoAnexo: string
        Anexos:
          - path: string
            name: string
            type: string
            size: 0
            cdAnexo: 0
            base64: string
            anexoAExcluir: false
            rotacionarImagem: false
            isSelected: false
            title: string
            value: string
        CategoriaLancamento: string
        DataDaDespesa: {}
        DataDaDespesaFormatada: string
        ValorDaDespesa: 0
        IDFuncionarioTransacao: 0
        DataTransacao: {}
        DataTransacaoFormatada: string
        Moeda: 0
        IDFuncionarioFavorecido: 0
        IDCategoriaLancamento: 0
        IDVoucher: 0
        IDLiberacao: 0
        IDFornecedor: 0
        Documento: string
        TipoDePagamento: 0
        IDEscritorio: 0
        QtdKMRodado: 0
        TextoDaDespesa: string
        TemTextoModificado: false
        ValorKMRodado: 0
        Situacao: 0
        DataAprovacao: {}
        DataAprovacaoFormatada: string
        ObservacaoAprovador: string
        IDFuncionarioAprovador: 0
        IDFuncionarioIndicado: 0
        IDTarifacao: 0
        IDSolicitacaoMaterialItem: 0
        IDGeracaoDespesa: 0
        IDDespesa: 0
        Alocacoes:
          - IDAlocacaoDeDespesa: 0
            IDDespesa: 0
            IDCliente: 0
            IDContrato: 0
            IDCaso: 0
            PorcentagemAlocada: 0
            ValorAlocado: 0
            IDFechamento: 0
            IDCategoriaDeDespesa: 0
            Caso:
              IDCaso: 0
              Titulo: string
              IDCliente: 0
              NomeCliente: string
              NomeResponsavelCaso: string
              IDPasta: 0
              NomePasta: string
              IDContrato: 0
              NomeContrato: string
              NumeroInterno: string
              NumeroExterno: string
              NumeroLawoffice: 0
              IDCasoPai: 0
              Classe: 0
              DataDeCriacao: {}
              DataDeCriacaoFormatada: string
              Situacao: 0
        IsEditable: false
    Escritorio:
      type: object
      properties:
        codEscritorio:
          type: integer
        area:
          type: integer
        nome:
          type: string
        senha:
          type: string
        endereco:
          type: string
        cidade:
          type: string
        estado:
          type: string
        cep:
          type: string
        telefone:
          type: string
        dataCadastro:
          type: object
        bloqueado:
          type: boolean
    LEDESCodes:
      type: object
      properties:
        Code:
          type: string
        Description:
          type: string
        ChildCodes:
          type: array
          items:
            required:
              - Code
              - Description
              - ChildCodes
            type: object
            properties:
              Code:
                type: string
              Description:
                type: string
              ChildCodes: {}
    ArrayOfDateTimeArray:
      type: array
      items:
        type: array
        items:
          type: string
    DateTimeArray:
      type: array
      items:
        type: string
    Resultado_de_login:
      type: object
      properties:
        Context:
          type: string
        Successful:
          type: boolean
        ErrorMessage:
          type: string
    Parametros_de_login:
      type: object
      properties:
        escritorio:
          type: string
        token:
          type: string
      example:
        escritorio: string
        token: string
    Erro_interno_no_servidor:
      type: object
      properties:
        Message:
          type: string
        ExceptionMessage:
          type: string
        ExceptionType:
          type: string
        StackTrace:
          type: string
    DTOBusca_deprecated:
      type: object
      properties:
        IdsClientesComCasos:
          type: object
          properties:
            "100":
              type: array
              items:
                type: integer
            "200":
              type: array
              items:
                type: integer
        TermoBuscado:
          type: string
    Parametros_de_login_mobile:
      type: object
      properties:
        User:
          type: object
          properties:
            user:
              type: string
            pwd:
              type: string
            domain:
              type: string
        Version:
          type: string
        DeviceIdentification:
          type: string
        Workstation:
          type: string
        AccessCode:
          type: string
        NovoMobile:
          type: boolean
      example:
        User:
          user: string
          pwd: string
          domain: string
        Version: string
        DeviceIdentification: string
        Workstation: string
        AccessCode: string
        NovoMobile: false
    DTOAndamentoTemplate:
      type: object
      properties:
        IDAndamentoTemplate:
          type: integer
        IDEscritorio:
          type: integer
        TextoTemplate:
          type: string
        NomeTemplate:
          type: string
        GrupoDeCaso:
          type: integer
          description: "1: Administrativo, 2: Interno, 3: Judicial Estadual, 4: Judicial Federal, 5: Judicial Trabalhista, 6: Interno Escritório, 7: Militar Estadual, 8: Eleitoral, 9: Militar da União"
    DTOLogonResult:
      type: object
      properties:
        Context:
          type: string
        Successful:
          type: boolean
        ErrorMessage:
          type: string
        Profile:
          type: string
    DTOPlanilhaHoras:
      type: object
      properties:
        NrLEDESTaskCode:
          type: string
        NrLEDESActivityCode:
          type: string
        DsSolicitante:
          type: string
        CdSolicitante:
          type: integer
        IDCliente:
          type: integer
        IDProcesso:
          type: integer
        IDFuncionario:
          type: integer
        Descricao:
          type: string
        DataExecucao:
          type: object
        TipoDeTarefa:
          type: integer
          description: "1: Aprimoramento profissional, 2: Horas debitáveis, 3: Horas de relacionamento, 4: Horas não debitáveis"
        QtdMinutos:
          type: integer
        IDFuncionarioResponsavel:
          type: integer
        IDFuncionarioBeneficiario:
          type: integer
        IDFechamentoPlanilhaHoras:
          type: integer
        IDRegistroFechamentoContaCliente:
          type: integer
        SituacaoDaPlanilha:
          type: integer
          description: "1: Aberta, 2: A aprovar, 3: Aprovada, 4: Não aprovada"
        MotivoDaRecusa:
          type: string
        IDClassificacaoHorasDebitaveis:
          type: integer
        IDClassificacao:
          type: integer
        Titulo:
          type: string
        IDAndamento:
          type: integer
        IDArea:
          type: integer
        IDContrato:
          type: integer
        DataLancamento:
          type: object
        InFaturadoPreVersao35:
          type: boolean
        IDLancamentoDeHoras:
          type: integer
        IsEditable:
          type: boolean
        NomeFuncionario:
          type: string
        DsClassificacao:
          type: string
      example:
        NrLEDESTaskCode: string
        NrLEDESActivityCode: string
        DsSolicitante: string
        CdSolicitante: 0
        IDCliente: 0
        IDProcesso: 0
        IDFuncionario: 0
        Descricao: string
        DataExecucao: {}
        TipoDeTarefa: 0
        QtdMinutos: 0
        IDFuncionarioResponsavel: 0
        IDFuncionarioBeneficiario: 0
        IDFechamentoPlanilhaHoras: 0
        IDRegistroFechamentoContaCliente: 0
        SituacaoDaPlanilha: 0
        MotivoDaRecusa: string
        IDClassificacaoHorasDebitaveis: 0
        IDClassificacao: 0
        Titulo: string
        IDAndamento: 0
        IDArea: 0
        IDContrato: 0
        DataLancamento: {}
        InFaturadoPreVersao35: true
        IDLancamentoDeHoras: 0
        IsEditable: true
    DTOCasoSimples:
      type: object
      properties:
        IDCaso:
          type: integer
        Titulo:
          type: string
        IDCliente:
          type: integer
        NomeCliente:
          type: string
        NomeResponsavelCaso:
          type: string
        IDPasta:
          type: integer
        NomePasta:
          type: string
        IDContrato:
          type: integer
        NomeContrato:
          type: string
        NumeroInterno:
          type: string
        NumeroExterno:
          type: string
        NumeroLawoffice:
          type: integer
        IDCasoPai:
          type: integer
        Classe:
          type: integer
          description: "1: Processo, 2: Subprocesso, 3: Recurso, 4: Incidente"
        DataDeCriacao:
          type: object
        DataDeCriacaoFormatada:
          type: string
        Situacao:
          type: integer
          description: "1: Ativo, 2: Arquivo morto, 3: Encerrado, 99: Excluído"
        NomeArea:
          type: string
        TipoProcesso:
          type: string
        DataUltimaAlteracao:
          type: string
        HierarquiaProcesso:
          type: string
        PoloAtivo:
          type: string
        PoloPassivo:
          type: string
        StatusCaso:
          type: string
    DTOCasoCompleto:
      type: object
      properties:
        IDCaso:
          type: integer
        Titulo:
          type: string
        IDCliente:
          type: integer
        NomeCliente:
          type: string
        IDPasta:
          type: integer
        NomePasta:
          type: string
        IDContrato:
          type: integer
        NomeContrato:
          type: string
        NumeroInterno:
          type: string
        NumeroExterno:
          type: string
        NumeroLawoffice:
          type: integer
        IDCasoPai:
          type: integer
        Classe:
          type: integer
          description: "1: Processo, 2: Subprocesso, 3: Recurso, 4: Incidente"
        DataDeCriacao:
          type: object
        DataDeCriacaoFormatada:
          type: string
        Situacao:
          type: integer
          description: "1: Ativo, 2: Arquivo morto, 3: Encerrado, 99: Excluido"
        DataDeEntrada:
          type: object
        DataDeEntradaFormatada:
          type: string
        Observacao:
          type: string
        DataDeDistribuicao:
          type: object
        DataDeDistribuicaoFormatada:
          type: string
        DataDeEncerramento:
          type: object
        DataDeEncerramentoFormatada:
          type: string
        DataPrevistaDeEncerramento:
          type: object
        DataPrevistaDeEncerramentoFormatada:
          type: string
        Tipo:
          type: integer
          description: "1: Administrativo, 2: Interno, 3: Judicial Estadual, 4: Judicial Federal, 5: Judicial Trabalhista, 6: Interno Escritório, 7: Militar Estadual, 8: Eleitoral, 9: Militar da União"
        Confidencial:
          type: boolean
        IDArea:
          type: integer
        IDFuncionarioResponsavel:
          type: integer
        IDForo:
          type: integer
        Foro:
          type: string
        IDRito:
          type: integer
        Rito:
          type: string
        IDFaseProcesso:
          type: integer
        ExpectativaDeExito:
          type: integer
          description: "1: Provável, 2: Possível, 3: Remoto"
        ComentarioExpectativaDaCausa:
          type: string
        IDsCoResponsaveis:
          type: array
          items:
            type: integer
        PolosAtivos:
          type: string
        PolosPassivos:
          type: string
        StatusCaso:
          type: string
        DataUltimaAlteracao:
          type: string
        TipoProcesso:
          type: string
        NomeArea:
          type: string
        NomeResponsavelCaso:
          type: string
    DTOItemAgenda:
      type: object
      properties:
        IDItemAgenda:
          type: integer
        IDItemAgendaPai:
          type: integer
        Tipo:
          type: integer
          description: "1: Atividade externa, 2: Prazo, 4: Audiência, 8: Compromisso de trabalho, 9: Compromisso particular"
        Situacao:
          type: integer
          description: "1: Em aberto, 2: Agendada, 3: Realizada, 4: Ocupado, 5: A confirmar, 6: Desmarcável"
        Data:
          type: object
        DataFormatada:
          type: string
        DataLimite:
          type: object
        DataLimiteFormatada:
          type: string
        Lembrete:
          type: object
        IDTitulocobranca:
          type: integer
        Titulo:
          type: string
        IDCaso:
          type: integer
        IDForo:
          type: integer
        Observacao:
          type: string
        Local:
          type: string
        IDFuncionarioCriador:
          type: integer
        FuncionarioExecutor:
          type: integer
        NomeFuncionarioExecutor:
          type: string
        FuncionariosParticipantes:
          type: object
        DataCriacao:
          type: object
        DataCriacaoFormatada:
          type: string
        DataRealizacao:
          type: object
        DataRealizacaoFormatada:
          type: string
        DataRegistroRealizacao:
          type: object
        DataRegistroRealizacaoFormatada:
          type: string
        ObservacaoRegistroRealizacao:
          type: string
        SituacaoLembrete:
          type: integer
          description: "1: A notificar, 2: Descartado por ambos, 3: Notificado, 4: Descartado pelo executor, 5: Descartado pelo responsável"
        IsEditable:
          type: boolean
      example:
        IDItemAgenda: 0
        IDItemAgendaPai: 0
        Tipo: 0
        Situacao: 0
        Data: {}
        DataFormatada: string
        DataLimite: {}
        DataLimiteFormatada: string
        Lembrete: {}
        IDTitulocobranca: 0
        Titulo: string
        IDCaso: 0
        IDForo: 0
        Observacao: string
        Local: string
        IDFuncionarioCriador: 0
        FuncionarioExecutor: 0
        NomeFuncionarioExecutor: string
        FuncionariosParticipantes: {}
        DataCriacao: {}
        DataCriacaoFormatada: string
        DataRealizacao: {}
        DataRealizacaoFormatada: string
        DataRegistroRealizacao: {}
        DataRegistroRealizacaoFormatada: string
        ObservacaoRegistroRealizacao: string
        SituacaoLembrete: 0
        IsEditable: false
    DTOObjetoNomeValor:
      type: object
      properties:
        Nome:
          type: string
        Valor:
          type: string
    WebSessionBody:
      type: object
      properties:
        domain:
          type: string
        email:
          type: string
        token:
          type: string
    EncapsuladorDeResposta:
      type: object
      properties:
        Response:
          type: object
          properties:
            NrTipoClassificacaoAutomatica:
              type: integer
            NrClassificacaoAutomatica:
              type: integer
            ClassificacaoDoAndamento: {}
            LancamentoPeloTimeSheetDoMobile:
              type: boolean
            IdAndamento:
              type: integer
            TextoAndamento:
              type: string
            TextoAndamentoContinuacao:
              type: string
            IdProcesso:
              type: integer
            DataCompetencia:
              type: string
            DataInclusao:
              type: string
            IdAutor:
              type: integer
            NomeAutor:
              type: string
            InUsoInterno:
              type: boolean
            DataRevisao:
              type: string
            IdRevisor:
              type: integer
            NomeRevisor: {}
            Situacao:
              type: integer
            InManual:
              type: boolean
            IdAndamentoTemplate:
              type: integer
            NovoAndamentoParaRevisao:
              type: integer
            IdAndamentoClassificacao:
              type: integer
            IdPublicacaoAndamento:
              type: integer
            Tipo:
              type: integer
            dsCodigoOriginal: {}
            IsEditable:
              type: boolean
        Success:
          type: boolean
        ExceptionMessage: {}
    DTOValoresDoCaso:
      type: object
      properties:
        Risco:
          type: integer
        ValorDaCausa:
          type: integer
        ValorDaCausaAtualizado:
          type: integer
        ValorPrevisto:
          type: integer
        ValorContingencia:
          type: integer
        Pedidos:
          type: array
          items:
            required:
              - Risco
              - ValorPrevisto
              - ValorContingencia
              - Nome
              - Situacao
              - IdProcessoExpectativaReivindicacao
              - IdPedidoCausa
              - Justificativa
              - MoedaValorPrevisto
              - MoedaValorContingenciado
            type: object
            properties:
              Risco:
                type: integer
              ValorPrevisto:
                type: integer
              ValorContingencia:
                type: integer
              Nome:
                type: string
              Situacao:
                type: integer
              IdProcessoExpectativaReivindicacao:
                type: integer
              IdPedidoCausa:
                type: integer
              Justificativa: {}
              MoedaValorPrevisto:
                type: integer
              MoedaValorContingenciado:
                type: integer
    DTOObjetoNomeId:
      type: object
      properties:
        Nome:
          type: string
        Id:
          type: integer
    DTOPedidoCausa:
      type: object
      properties:
        Id:
          type: integer
        Nome:
          type: string
        IdPedidoCausaGrupoAfinidade:
          type: integer
        IdEscritorio:
          type: integer
    DTOCasoPedidoSimples:
      type: object
      properties:
        Risco:
          type: integer
        ValorPrevisto:
          type: integer
        ValorContingencia:
          type: integer
        Nome:
          type: string
        Situacao:
          type: integer
        IdProcessoExpectativaReivindicacao:
          type: integer
        IdPedidoCausa:
          type: integer
        Justificativa: {}
        MoedaValorPrevisto:
          type: integer
        MoedaValorContingenciado:
          type: integer
    DTODecisao:
      type: array
      items:
        required:
          - IdDecisao
          - IdEscritorio
          - Nome
        type: object
        properties:
          IdDecisao:
            type: integer
          IdEscritorio:
            type: integer
          Nome:
            type: string
    DTOProcessoDecisao:
      type: object
      properties:
        Valores:
          type: array
          items:
            required:
              - nrExitoPerda
              - nrMoeda
              - nrMoedaSolicitado
              - dsJustificativaPedido
              - nrMoedaContigenciado
              - vlContigenciado
              - vlDeferido
              - IdProcessoExpectativaReivindicacao
              - IdProcessoDecisao
              - inAlterado
              - IdProcessoDecisaoValor
              - vlSolicitado
              - nrSituacao
            type: object
            properties:
              nrExitoPerda:
                type: integer
              nrMoeda:
                type: integer
              nrMoedaSolicitado:
                type: integer
              dsJustificativaPedido: {}
              nrMoedaContigenciado:
                type: integer
              vlContigenciado:
                type: integer
              vlDeferido:
                type: integer
              IdProcessoExpectativaReivindicacao:
                type: integer
              IdProcessoDecisao:
                type: integer
              inAlterado:
                type: boolean
              IdProcessoDecisaoValor:
                type: integer
              vlSolicitado:
                type: integer
              nrSituacao:
                type: integer
        inDeEncerramento:
          type: boolean
        cdParteJuiz:
          type: integer
        cdParteAdvAcusacao:
          type: integer
        cdParteAdvDefesa:
          type: integer
        Observacao:
          type: string
        vlDeferido:
          type: integer
        DataOcorrencia:
          type: string
        IdCaso:
          type: integer
        Decisao:
          type: integer
        nrExitoPerda:
          type: integer
        IdCasoDecisao:
          type: integer
    DTOValoresComPedidosAtualizados:
      type: object
      properties:
        Pedidos:
          type: array
          items:
            required:
              - PedidoCausa
              - ValorDeferidoPelaUltimaDecisao
              - MoedaDeferidoPelaUltimaDecisao
              - Historico
            type: object
            properties:
              PedidoCausa:
                type: string
              ValorDeferidoPelaUltimaDecisao:
                type: string
              MoedaDeferidoPelaUltimaDecisao:
                type: string
              Historico:
                type: array
                items:
                  required:
                    - MoedaSolicitadoText
                    - PorcentagemExitoText
                    - SituacaoText
                    - Situacao
                    - JustificativaPedido
                    - dtDecisao
                    - PorcentagemExito
                    - vlContigenciado
                    - MoedaContigenciado
                    - MoedaDeferido
                    - MoedaSolicitado
                    - vlSolicitado
                    - vlDeferido
                    - IdProcessoDecisao
                    - IdProcessoExpectativaReivindicacao
                    - dtInclusaoRegistro
                    - IdPedidoHistorico
                    - MoedaContigenciadoText
                    - MoedaDeferidoText
                  type: object
                  properties:
                    MoedaSolicitadoText:
                      type: string
                    PorcentagemExitoText:
                      type: string
                    SituacaoText:
                      type: string
                    Situacao:
                      type: integer
                    JustificativaPedido: {}
                    dtDecisao:
                      type: string
                    PorcentagemExito:
                      type: integer
                    vlContigenciado:
                      type: integer
                    MoedaContigenciado:
                      type: integer
                    MoedaDeferido:
                      type: integer
                    MoedaSolicitado:
                      type: integer
                    vlSolicitado:
                      type: integer
                    vlDeferido:
                      type: integer
                    IdProcessoDecisao:
                      type: integer
                    IdProcessoExpectativaReivindicacao:
                      type: integer
                    dtInclusaoRegistro:
                      type: string
                    IdPedidoHistorico:
                      type: integer
                    MoedaContigenciadoText:
                      type: string
                    MoedaDeferidoText:
                      type: string
        vlValorPrevistoAtualizado:
          type: number
        vlValorContigenciaAtualizado:
          type: number
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Lawsoft-API-Subscription
      in: header
    apiKeyQuery:
      type: apiKey
      name: 19ccf185c495477a832075af6b396fde
      in: query
security:
  - apiKeyHeader: []
  - apiKeyQuery: []
