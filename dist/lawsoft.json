{
  "openapi": "3.0.2",
  "info": {
    "version": "1.0.0",
    "title": "openapi.looplex.com.br",
    "termsOfService": "https://docs.looplex.com.br/legal/termos-de-uso",
    "contact": {
      "name": "Developers Looplex",
      "email": "developer@looplex.com.br",
      "url": "https://www.looplex.com.br"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-logo": {
      "url": "/assets/images/logo.png",
      "href": "/"
    },
    "description": "This is an **example** API to demonstrate features of OpenAPI specification\n# Introduction\nThis API definition is intended to to be a good starting point for describing your API in \n[OpenAPI/Swagger format](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md).\n"
  },
  "externalDocs": {
    "description": "Find out how to create a GitHub repo for your OpenAPI definition.",
    "url": "https://github.com/Rebilly/generator-openapi-repo"
  },
  "tags": [
    {
      "name": "Login",
      "description": "Endpoints de login"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Endpoints",
      "tags": [
        "Agenda",
        "Andamento",
        "Area",
        "Busca",
        "Casos",
        "Categoria",
        "Cliente",
        "Conta de acesso",
        "Contato",
        "Contrato",
        "Dados complementares",
        "Decisões",
        "Despesas",
        "Expectativa reivindicação",
        "Envolvimento das partes",
        "Fase caso",
        "Funcionário",
        "Garantia",
        "Hierarquia",
        "Natureza",
        "Partes",
        "Pedidos",
        "Permissão",
        "Produtos",
        "Push",
        "Render",
        "Session",
        "Tabela preço categoria",
        "Tabela preço",
        "Tarefa",
        "Timeline",
        "Timesheet",
        "Valores apurados",
        "País"
      ]
    }
  ],
  "servers": [
    {
      "url": "https://www.sys.lawoffice.com.br",
      "description": "Lawsoft server"
    }
  ],
  "paths": {
    "/api/mobilesession": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "Login mobile",
        "description": "Login do Mobile",
        "operationId": "api-mobilesession",
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginParametro"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resultado do login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOLogonResult"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada"
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/session": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "Login",
        "description": "Login para automatização",
        "operationId": "api-session",
        "parameters": [
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginParametroSession"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resultado do login.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultadoDeLogin"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/logoff": {
      "delete": {
        "tags": [
          "Session"
        ],
        "summary": "Logoff",
        "description": "Efetua o logoff",
        "operationId": "api-logoff",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "responses": {
          "204": {
            "description": "Logoff efetuado corretamente."
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/agenda/totaleventos": {
      "get": {
        "tags": [
          "Agenda"
        ],
        "summary": "Quantidade de eventos de agenda",
        "description": "Quantidade de eventos de agenda do profissional para os próximos 7 dias.",
        "operationId": "api-agenda-totaleventos",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna a quantidade de eventos de agenda do profissional para os próximos 7 dias.",
            "content": {
              "application/json": {
                "example": "1"
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/agenda/proximoslancamentos": {
      "get": {
        "tags": [
          "Agenda"
        ],
        "summary": "Próximos lançamentos",
        "description": "Retorna um array com os próximos compromissos de agenda do profissional.",
        "operationId": "api-agenda-proximos-lancamentos",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "data",
            "in": "query",
            "description": "A data",
            "example": "2020-11-16T04:25:03",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "quantidadeEventosARetornar",
            "in": "query",
            "description": "Retorna 4 por padrão",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "idCaso",
            "in": "query",
            "required": false,
            "description": "Filtro pelo caso",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com os próximos compromissos de agenda do profissional.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOItemAgenda"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/agenda": {
      "get": {
        "tags": [
          "Agenda"
        ],
        "summary": "Obtém agenda",
        "description": "Obtém um array com os compromissos de agenda de acordo com o filtro informado.",
        "operationId": "api-agenda",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "ano",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "mes",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "dia",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ignoraIdFuncionario",
            "in": "query",
            "required": false,
            "description": "Default: false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "removeIguais",
            "in": "query",
            "required": false,
            "description": "Default: true",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "agendaWeb",
            "in": "query",
            "required": false,
            "description": "Default: false. O Lawsoft Web deve passar true para que sejam retornados os itens dos 15 dias anteriores e posteriores ao mês informado.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém um array com os compromissos de agenda de acordo com o filtro informado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOItemAgenda"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/agenda/remover1": {
      "post": {
        "tags": [
          "Agenda"
        ],
        "summary": "Inclui item de agenda",
        "description": "Inclui o compromisso de agenda.",
        "operationId": "api-agenda-post",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTOItemAgenda"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retorna o item de agenda inserido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOItemAgenda"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/agenda/remover2": {
      "put": {
        "tags": [
          "Agenda"
        ],
        "summary": "Atualizar item de agenda",
        "description": "Atualiza o compromisso de agenda.",
        "operationId": "api-agenda-put",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTOItemAgenda"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retorna o item de agenda atualizado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOItemAgenda"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/{idCaso}/agenda": {
      "get": {
        "tags": [
          "Agenda"
        ],
        "summary": "Obtém a agenda do caso",
        "description": "Obtém um array com os compromissos de agenda do caso de acordo com o filtro informado.",
        "operationId": "api-casos-{idCaso}-agenda",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idCaso",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ano",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "mes",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "dia",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ignoraIdFuncionario",
            "in": "query",
            "required": false,
            "description": "Default: false",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "removeIguais",
            "in": "query",
            "required": false,
            "description": "Default: true",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "agendaWeb",
            "in": "query",
            "required": false,
            "description": "Default: false. O Lawsoft Web deve passar true para que sejam retornados os itens dos 15 dias anteriores e posteriores ao mês informado.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém um array com os compromissos de agenda do caso de acordo com o filtro informado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOItemAgenda"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/agenda/{tipo}/{id}": {
      "delete": {
        "tags": [
          "Agenda"
        ],
        "summary": "Exclui item de agenda",
        "description": "Excluir o item de agenda.",
        "operationId": "api-agenda-{tipo}-{id}",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "tipo",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TipoItemAgenda"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Número do item de agenda"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "O item de agenda foi excluído."
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/agenda/executores": {
      "get": {
        "tags": [
          "Agenda"
        ],
        "summary": "Executores",
        "description": "Retorna um array com os executores",
        "operationId": "api-agenda-executores",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com os executores.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOFuncionario"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/agenda/participantes": {
      "get": {
        "tags": [
          "Agenda"
        ],
        "summary": "Obtém participantes",
        "description": "Obtém os participantes.",
        "operationId": "api-agenda-participantes",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com os participantes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOFuncionario"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/agenda/titulos": {
      "get": {
        "tags": [
          "Agenda"
        ],
        "summary": "Títulos de agenda",
        "description": "Obtém os títulos de agenda.",
        "operationId": "api-agenda-titulos",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "tipo",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TipoItemAgenda"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com os títulos de agenda.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOTituloAgenda"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/{idCaso}/audiencias": {
      "get": {
        "tags": [
          "Agenda"
        ],
        "summary": "Audiências por caso",
        "description": "Obtém as audiências por caso.",
        "operationId": "api-casos-{idCaso}-audiencias",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idCaso",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com as audiências do caso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOCompromissoAudiencia"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/num/audiencias": {
      "get": {
        "tags": [
          "Agenda"
        ],
        "summary": "Obtém audiências",
        "description": "Obtém audiências por numero interno, externo ou identificador do caso",
        "operationId": "api-casos-num-audiencias",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "NumeroInterno",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "NumeroExterno",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdProcesso",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com as audiências encontradas através do numero interno, externo ou identificador do caso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOCompromissoAudiencia"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/{idCaso}/tabagenda": {
      "get": {
        "tags": [
          "Agenda"
        ],
        "summary": "Obtém compromissos",
        "description": "Obtém compromissos, prazos e publicações por caso.",
        "operationId": "api-casos-{idCaso}-tabagenda",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idCaso",
            "in": "path",
            "example": "Exemplo: [1, 10]",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com os compromissos, prazos e publicações por caso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOItemAgendaSimples"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/num/tabagenda": {
      "get": {
        "tags": [
          "Agenda"
        ],
        "summary": "Obtém compromissos",
        "description": "Obtém compromissos, prazos e publicações por numero interno, externo ou identificador do caso.",
        "operationId": "api-casos-num-tabagenda",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "NumeroInterno",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "NumeroExterno",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdProcesso",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com os compromissos, prazos e publicações encontrados de acordo com o numero interno, externo ou identificador do caso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOItemAgendaSimples"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/andamentos/templates": {
      "get": {
        "tags": [
          "Andamento"
        ],
        "summary": "Templates de andamento",
        "description": "Obtém um array com os templates de andamentos",
        "operationId": "api-andamentos-templates",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "tipoCaso",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RamosJudicial"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com os templates de andamentos.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOAndamentoTemplate"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/andamentos/classificacoes": {
      "get": {
        "tags": [
          "Andamento"
        ],
        "summary": "Classificações de andamento",
        "description": "Retorna um array com as classificações de andamento do escritório.",
        "operationId": "api-andamentos-classificacoes",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com as classificações de andamento do escritório.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOAndamentoClassificacao"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/{idCaso}/andamentos/{data}/{primeiraLeitura}/{totalAndamentosLidosPeloMobile}": {
      "get": {
        "tags": [
          "Andamento"
        ],
        "summary": "Andamentos do caso",
        "description": "Retorna um array com os andamentos do caso de acordo com o filtro informado.",
        "operationId": "api-casos-{idCaso}-andamentos-{data}-{primeiraLeitura}-{totalAndamentosLidosPeloMobile}",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idCaso",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "data",
            "in": "path",
            "example": "2021-08-18T12:00:00",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "primeiraLeitura",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "totalAndamentosLidosPeloMobile",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com os andamentos do caso de acordo com o filtro informado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOAndamento"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/{idCaso}/andamentosimples": {
      "get": {
        "tags": [
          "Andamento"
        ],
        "summary": "Andamentos simples do caso",
        "description": "Retorna um array de andamentos simples do caso informado.",
        "operationId": "api-casos-{idCaso}-andamentosimples",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idCaso",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array de andamentos simples do caso informado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOAndamentoSimples"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/num/andamentosimples": {
      "get": {
        "tags": [
          "Andamento"
        ],
        "summary": "Andamentos simples por caso, numero interno ou numero externo",
        "description": "Retorna um array de andamentos simples por caso, numero interno ou numero externo",
        "operationId": "api-casos-num-andamentosimples",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "NumeroInterno",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "NumeroExterno",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdProcesso",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array de andamentos simples por caso, numero interno ou numero externo.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOAndamentoSimples"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/andamentos/{id}": {
      "get": {
        "tags": [
          "Andamento"
        ],
        "summary": "Andamento por identificador",
        "description": "Obtém o andamento de acordo com o identificador informado.",
        "operationId": "api-andamentos-{id}",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém o andamento de acordo com o identificador informado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOAndamento"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/andamentos": {
      "post": {
        "tags": [
          "Andamento"
        ],
        "summary": "Incluir andamento",
        "description": "Inclui o andamento",
        "operationId": "api-andamentos-post",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTOAndamento"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retorna o andamento inserido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOAndamento"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/andamentos/{idAndamento}": {
      "put": {
        "tags": [
          "Andamento"
        ],
        "summary": "Atualizar andamento",
        "description": "Atualiza o andamento.",
        "operationId": "api-andamentos-{idAndamento}-put",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idAndamento",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTOAndamento"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retorna o andamento atualizado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOAndamento"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/andamentos/{idAndamento}/remover1": {
      "delete": {
        "tags": [
          "Andamento"
        ],
        "summary": "Apagar andamento",
        "description": "Apaga o andamento",
        "operationId": "api-andamentos-{idAndamento}-delete",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idAndamento",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "O andamento foi excluído."
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/areas": {
      "get": {
        "tags": [
          "Area"
        ],
        "summary": "Obtém áreas",
        "description": "Retorna um array com as áreas encontradas de acordo com o filtro informado.",
        "operationId": "api-areas-get",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "ativos",
            "in": "query",
            "description": "Default: true",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inativos",
            "in": "query",
            "description": "Default: false",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com as áreas encontradas de acordo com o filtro informado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOArea"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/areas/porDomain/{domain}": {
      "get": {
        "tags": [
          "Area"
        ],
        "summary": "Obtém as áreas do escritório",
        "description": "Retorna um array com as áreas de acordo com o escritório informado.",
        "operationId": "api-areas-porDomain-{domain}",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com as áreas de acordo com o escritório informado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOArea"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/areas/{id}": {
      "get": {
        "tags": [
          "Area"
        ],
        "summary": "Obtém a área",
        "description": "Retorna a área de acordo com o identificador informado.",
        "operationId": "api-areas-{id}-get",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna a área de acordo com o identificador informado.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOArea"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/timeline/items": {
      "get": {
        "tags": [
          "Timeline"
        ],
        "summary": "Timeline do caso",
        "description": "Lista timeline do caso.",
        "operationId": "api-timeline-items",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "paginaAtual",
            "in": "query",
            "required": true,
            "description": "Número da página a carregar",
            "example": 2,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cdProcesso",
            "in": "query",
            "example": 81,
            "description": "Número do caso",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "dataInicial",
            "in": "query",
            "example": "2022-01-01T12:00:00",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dataFinal",
            "in": "query",
            "example": "2022-01-01T12:00:00",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "andamentoManual",
            "in": "query",
            "description": "Indica se inclui os andamentos manuais na resposta",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "andamentoAutomatico",
            "in": "query",
            "description": "Indica se inclui os andamentos automáticos na resposta",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "timesheet",
            "in": "query",
            "description": "Indica se inclui os lançamentos de hora na resposta",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "agenda",
            "in": "query",
            "description": "Indica se inclui os itens de agenda na resposta",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "tarefa",
            "in": "query",
            "description": "Indica se inclui as tarefas na resposta",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "decisao",
            "in": "query",
            "description": "Indica se inclui as decisões na resposta",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "despesa",
            "in": "query",
            "description": "Indica se inclui as despesas na resposta",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "garantia",
            "in": "query",
            "description": "Indica se inclui as garantias na resposta",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pushAndamentos",
            "in": "query",
            "description": "Indica se inclui os itens de push de andamento na resposta",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pushPublicacao",
            "in": "query",
            "description": "Indica se inclui os itens de push de publicação na resposta",
            "example": true,
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém os itens de timeline.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOTimelineItem"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/{idCaso}/produtos": {
      "get": {
        "tags": [
          "Produtos"
        ],
        "summary": "Produtos por caso",
        "description": "Obtém um array com os produtos por caso.",
        "operationId": "api-casos-{idCaso}-produtos",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idCaso",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém um array com os produtos por caso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOProduto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/num/produtos": {
      "get": {
        "tags": [
          "Produtos"
        ],
        "summary": "Produtos do caso",
        "description": "Obtém um array com os produtos por caso por identificador do caso, numero interno ou numero externo.",
        "operationId": "api-casos-num-produtos",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "NumeroInterno",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "NumeroExterno",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdProcesso",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém um array com os produtos por caso por identificador do caso, numero interno ou numero externo.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOProduto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/permissao/{idFuncionalidade}": {
      "get": {
        "tags": [
          "Permissão"
        ],
        "summary": "Verifica permissão",
        "description": "Retorna um booleano indicando se possui determinada permissão.",
        "operationId": "api-permissao-{idFuncionalidade}",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idFuncionalidade",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um booleano indicando se possui determinada permissão.",
            "content": {
              "application/json": {
                "example": "true"
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/fase/{nrGrupo}": {
      "get": {
        "tags": [
          "Fase caso"
        ],
        "summary": "Obtém as fases do caso",
        "description": "Obtém um array com as fases do caso de acordo com o tipo de processo",
        "operationId": "api-casos-fase-{nrGrupo}",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "nrGrupo",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RamosJudicial"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém um array com as fases do caso de acordo com o tipo de processo",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOFaseCaso"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/{nrSequencia}/fase": {
      "get": {
        "tags": [
          "Fase caso"
        ],
        "summary": "Fase do caso",
        "description": "Obtém a fase do caso.",
        "operationId": "api-casos-{nrSequencia}-fase",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "nrSequencia",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém a fase do caso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOFaseCaso"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/num/fase": {
      "get": {
        "tags": [
          "Fase caso"
        ],
        "summary": "Fases dos casos",
        "description": "Obtém um array com as fases dos casos encontrados de acordo com o numero interno, numero externo ou identificador do caso.",
        "operationId": "api-casos-num-fase",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "NumeroInterno",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "NumeroExterno",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdProcesso",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém um array com as fases dos casos encontrados de acordo com o numero interno, numero externo ou identificador do caso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOFaseCaso"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/{idCaso}/dadoscomplementares": {
      "get": {
        "tags": [
          "Dados complementares"
        ],
        "summary": "Dados complementares do caso",
        "description": "Obtém um array com os dados complementares de acordo com o identificador do caso.",
        "operationId": "api-casos-{idCaso}-dadoscomplementares",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idCaso",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém um array com os dados complementares de acordo com o identificador do caso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTODadoComplementar"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/num/dadoscomplementares": {
      "get": {
        "tags": [
          "Dados complementares"
        ],
        "summary": "Dados complementares dos casos",
        "description": "Obtém um array com os dados complementares pelo numero interno, numero externo ou identificador do caso.",
        "operationId": "api-casos-num-dadoscomplementares",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "NumeroInterno",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "NumeroExterno",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdProcesso",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém um array com os dados complementares pelo numero interno, numero externo ou identificador do caso.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTODadoComplementar"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/inclui": {
      "post": {
        "tags": [
          "Casos"
        ],
        "summary": "Inclui casos",
        "description": "Inclui casos.",
        "operationId": "api-casos-inclui",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DTOProcessoPreCadastro"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retorna um objeto contendo os processos cadastrados e os processos com erro (caso haja).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTORespostaCadastroProcessoPreCadastro"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/clientes/{idCliente}/casos": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Casos do cliente",
        "description": "Retorna um array com os casos do cliente.",
        "operationId": "api-clientes-{idCliente}-casos",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idCliente",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ativos",
            "in": "query",
            "description": "Default: true",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "inativos",
            "in": "query",
            "description": "Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "apenasMeusCasos",
            "in": "query",
            "description": "Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com os casos do cliente.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOCasoSimples"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/clientes/{idCliente}/pastas": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Pastas do cliente",
        "description": "Obtém um array com as pastas do cliente",
        "operationId": "api-clientes-{idCliente}-pastas",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idCliente",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com as pastas do cliente.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOPasta"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/{idCliente}/pastasDoCaso": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Pastas do cliente (Capa)",
        "description": "Retorna um array com as pastas do cliente (Capa).",
        "operationId": "api-casos-{idCliente}-pastasDoCaso",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idCliente",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com as pastas do cliente (Capa).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOPasta"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/{id}": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Obtém caso",
        "description": "Obtém o caso",
        "operationId": "api-casos-{id}",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém caso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOCasoCompleto"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/{id}/ficha": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Ficha do caso",
        "description": "Obtém a ficha do caso",
        "operationId": "api-casos-{id}-ficha",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém a ficha do caso.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOCasoFicha"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/id/ficha/num": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Ficha de caso por casos",
        "description": "Retorna um array de fichas de casos encontrados de acordo com o identificador, numero interno ou numero externo.",
        "operationId": "api-casos-id-ficha-num",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "NumeroInterno",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "NumeroExterno",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdProcesso",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array de fichas de casos encontrados de acordo com o identificador, numero interno ou numero externo.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOCasoFicha"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/meuscasos/{cdResponsavel}": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Casos por responsável",
        "description": "Retorna um array de casos onde sou responsável",
        "operationId": "api-casos-meuscasos-{cdResponsavel}",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "cdResponsavel",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array de casos onde sou responsável",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOCasoSimples"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/RamosJudiciais": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Ramos Judiciais",
        "description": "Obtém os ramos judiciais",
        "operationId": "api-casos-RamosJudiciais",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém os ramos judiciais",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOEnum"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Casos",
        "description": "Casos por filtro",
        "operationId": "api-casos",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "ativos",
            "in": "query",
            "description": "Default: true",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "inativos",
            "in": "query",
            "description": "Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com todos os casos de acordo com o filtro informado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOCasoSimples"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/id/num": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Casos",
        "description": "Casos por identificador, numero interno ou numero externo",
        "operationId": "api-casos-id-num",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "NumeroInterno",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "NumeroExterno",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdProcesso",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém os casos por identificador, numero interno ou numero externo",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOCasoCompleto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/porIds/{ids}": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Casos por identificadores",
        "description": "Obtém os casos pelos identificadores informados",
        "operationId": "api-casos-porIds-{ids}",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "ids",
            "in": "path",
            "example": "[1, 10]",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém os casos pelos identificadores informados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOCasoSimples"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/num": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Casos por identificador, numero interno ou numero externo",
        "description": "Obtém os casos obtidos pelo identificador, numero interno ou numero externo",
        "operationId": "api-casos-num",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "IdProcesso",
            "in": "query",
            "example": "[1, 10]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "NumeroInterno",
            "in": "query",
            "example": "[2, 20]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "NumeroExterno",
            "in": "query",
            "example": "[\"1.10.100\", \"2.20.200\"]",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Casos por identificador, numero interno ou numero externo",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOCasoSimples"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/busca": {
      "get": {
        "tags": [
          "Casos"
        ],
        "summary": "Pesquisa de casos",
        "description": "Obtém os casos de acordo com o filtro informado",
        "operationId": "api-casos-busca",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "termo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ativos",
            "in": "query",
            "description": "Default: true",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "inativos",
            "in": "query",
            "description": "Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém os casos de acordo com o filtro informado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOCasoSimples"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/escritorios/{IdEscritorio},{intfiltroCategoria}/categoriaspreco": {
      "get": {
        "tags": [
          "Categoria"
        ],
        "summary": "Categorias de preço do escritório",
        "description": "Retorna um array com as categorias de preço do escritório de acordo com o filtro informado.",
        "operationId": "api-escritorios-{IdEscritorio},{intfiltroCategoria}-categoriaspreco",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "IdEscritorio",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "intfiltroCategoria",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com as categorias de preço do escritório de acordo com o filtro informado.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOCategoriaPreco"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/escritorios/{IdEscritorio}/categoriaspreco": {
      "get": {
        "tags": [
          "Categoria"
        ],
        "summary": "Categorias de preço do escritório",
        "description": "Retorna um array com as categorias de preço do escritório",
        "operationId": "api-escritorios-{IdEscritorio}-categoriaspreco",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "IdEscritorio",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna um array com as categorias de preço do escritório",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOCategoriaPreco"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/funcionarios/{IdsMin},{IdsMax}/categorias": {
      "get": {
        "tags": [
          "Categoria"
        ],
        "summary": "Categorias de funcionário",
        "description": "Obtém as categorias de funcionário de acordo com o filtro informado",
        "operationId": "api-funcionarios-IdsMin-IdsMax-categorias",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "IdsMin",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "IdsMax",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém as categorias de funcionário de acordo com o filtro informado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOCategoriaFuncionario"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/clientes/todos": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Clientes",
        "description": "Obtém uma lista com todos os clientes",
        "operationId": "api-clientes-todos",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém uma lista com todos os clientes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOCliente"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/clientes": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Clientes por filtro",
        "description": "Obtém um array com os clientes de acordo com o filtro informado",
        "operationId": "api-clientes",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "ativos",
            "in": "query",
            "description": "Default: true",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "inativos",
            "in": "query",
            "description": "Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "apenasMeusCasos",
            "in": "query",
            "description": "Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "clientesSemCasos",
            "in": "query",
            "description": "Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém um array com os clientes de acordo com o filtro informado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOCliente"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/clientes/enderecos": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Endereços de cliente",
        "description": "Obtém um array com os endereços dos clientes",
        "operationId": "api-clientes-enderecos",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém um array com os endereços dos clientes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOEnderecoCliente"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/clientes/porDomain/{domain}": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Clientes do escritório",
        "description": "Obtém a lista de clientes do escritório informado",
        "operationId": "api-clientes-porDomain-domain",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "domain",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém a lista de clientes do escritório informado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOCliente"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/clientes/ficha": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Ficha do cliente",
        "description": "Obtém a ficha do cliente informado",
        "operationId": "api-clientes-ficha",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idCliente",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém a ficha do cliente informado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOCliente"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/clientes/ficha_mobile": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Ficha do cliente (Mobile)",
        "description": "Obtém a ficha do cliente para o mobile",
        "operationId": "api-clientes-ficha-mobile",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idCliente",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém a ficha do cliente para o mobile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOClienteMobile"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/clientes/mobile": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Clientes por filtro (Mobile)",
        "description": "Obtém a lista de clientes para o mobile de acordo com o filtro informado",
        "operationId": "api-clientes-mobile",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "ativos",
            "in": "query",
            "description": "Default: true",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "inativos",
            "in": "query",
            "description": "Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "apenasMeusCasos",
            "in": "query",
            "description": "Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "clientesSemCasos",
            "in": "query",
            "description": "Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém a lista de clientes para o mobile de acordo com o filtro informado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOClienteMobile"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pais": {
      "get": {
        "tags": [
          "País"
        ],
        "summary": "Países",
        "description": "Obtém a lista de países",
        "operationId": "api-pais",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém a lista de países",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOPais"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pais/uf": {
      "get": {
        "tags": [
          "País"
        ],
        "summary": "Estados",
        "description": "Obtém a lista de estados do Brasil",
        "operationId": "api-pais-uf",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém a lista de estados do Brasil",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOUF"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/pais/cidades": {
      "get": {
        "tags": [
          "País"
        ],
        "summary": "Cidades",
        "description": "Lista as cidades de acordo com o estado informado",
        "operationId": "api-pais-cidades",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "uf",
            "in": "query",
            "description": "UF para obter as cidades",
            "example": "SP",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista as cidades de acordo com o estado informado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOCidade"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/contratos": {
      "get": {
        "tags": [
          "Contrato"
        ],
        "summary": "Contratos",
        "description": "Obtém os contratos de acordo com o filtro informado",
        "operationId": "api-contratos",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "ativos",
            "in": "query",
            "description": "Default: true",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "inativos",
            "in": "query",
            "description": "Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém um array com os contratos de acordo com o filtro informado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOContrato"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/{idCaso}/contratosimples": {
      "get": {
        "tags": [
          "Contrato"
        ],
        "summary": "Contrato do caso",
        "description": "Obtém o contrato simples do caso informado",
        "operationId": "api-casos-{idCaso}-contratosimples",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idCaso",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém o contrato simples do caso informado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOContratoSimples"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/contratos/{idCliente}/contratosCliente": {
      "get": {
        "tags": [
          "Contrato"
        ],
        "summary": "Contratos do cliente",
        "description": "Obtém os contratos do cliente de acordo com o filtro informado",
        "operationId": "api-contratos-{idCliente}-contratosCliente",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idCliente",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ativos",
            "in": "query",
            "description": "Default: true",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "inativos",
            "in": "query",
            "description": "Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém os contratos do cliente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOContrato"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/clientes/{idCliente}/contratos": {
      "get": {
        "tags": [
          "Contrato"
        ],
        "summary": "Contratos do cliente",
        "description": "Obtém os contratos do cliente de acordo com o filtro informado",
        "operationId": "api-clientes-{idCliente}-contratos",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idCliente",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "ativos",
            "in": "query",
            "description": "Default: true",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "inativos",
            "in": "query",
            "description": "Default: false",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém os contratos do cliente de acordo com o filtro informado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOContrato"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/contratos/{id}": {
      "get": {
        "tags": [
          "Contrato"
        ],
        "summary": "Contrato",
        "description": "Obtém o contrato de acordo com o identificador informado",
        "operationId": "api-contratos-{id}",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém o contrato de acordo com o identificador informado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOContrato"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/hierarquia/ritos": {
      "get": {
        "tags": [
          "Hierarquia"
        ],
        "summary": "Ritos",
        "description": "Obtém um array com os ritos de acordo com os filtros informados",
        "operationId": "api-hierarquia-ritos",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "nrClasse",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cdRitoDoProcessoPai",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nrRamoJudicial",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cdForo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém um array com os ritos de acordo com os filtros informados",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOGrupoRito"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/hierarquia/tipos": {
      "get": {
        "tags": [
          "Hierarquia"
        ],
        "summary": "Tipos de processos administrativos",
        "description": "Obtém os tipos de processos administrativos",
        "operationId": "api-hierarquia-tipos",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém os tipos de processos administrativos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOTipoProcessoAdministrativo"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/hierarquia/regioes": {
      "get": {
        "tags": [
          "Hierarquia"
        ],
        "summary": "Regiões",
        "description": "Obtém as regiões de acordo com o filtro informado",
        "operationId": "api-hierarquia-regioes",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "nrRamoJudicial",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém as regiões de acordo com o filtro informado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTORegiaoRamoJudicial"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/hierarquia/GrupoForoPorTipo": {
      "get": {
        "tags": [
          "Hierarquia"
        ],
        "summary": "Grupo foro",
        "description": "Obtém os grupos foro por ramo de justiça, estado, grupo de família e tipo",
        "operationId": "api-hierarquia-grupoforoportipo",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "nrRamoJudicial",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "dsUF",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nrGrupoFamilia",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cdRegiao",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "nrTipo",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém os grupos foro por ramo de justiça, estado, grupo de família e tipo",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOGrupoForo"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/hierarquia/GrupoForo": {
      "get": {
        "tags": [
          "Hierarquia"
        ],
        "summary": "Grupos de foro",
        "description": "Obtém os grupos de foro por ramo de justiça, estado e grupo de família",
        "operationId": "api-hierarquia-grupoforo",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "nrRamoJudicial",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "dsUF",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nrGrupoFamilia",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cdRegiao",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém os grupos de foro por ramo de justiça, estado e grupo de família",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOGrupoForo"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/hierarquia/GrupoForoSuperiores": {
      "get": {
        "tags": [
          "Hierarquia"
        ],
        "summary": "Grupos de foro superiores",
        "description": "Obtém os grupos de foro superiores por ramo judicial",
        "operationId": "api-hierarquia-grupoforosuperiores",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "nrRamoJudicial",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém os grupos de foro superiores por ramo judicial",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOGrupoForo"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Partes": {
      "get": {
        "tags": [
          "Partes"
        ],
        "summary": "Pesquisa de Partes",
        "description": "Obtém uma lista de partes de acordo com o termo informado.",
        "operationId": "api-partes",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "nome",
            "in": "query",
            "description": "Termo de pesquisa. Mínimo de 4 caracteres",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém uma lista de partes de acordo com o termo informado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOParte"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/casos/{idCaso}/Partes": {
      "get": {
        "tags": [
          "Partes"
        ],
        "summary": "Partes do caso",
        "description": "Obtém as partes vinculadas ao caso informado",
        "operationId": "api-casos-idCaso-partes",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "idCaso",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém as partes vinculadas ao caso informado",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOParte"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parte": {
      "post": {
        "tags": [
          "Partes"
        ],
        "summary": "Inserção de Parte",
        "description": "Insere ou atualiza uma parte existente",
        "operationId": "api-parte-post",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DTOParte"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retorna os dados da parte após a inserção ou atualização",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DTOParte"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/parte/{cdParte}": {
      "delete": {
        "tags": [
          "Partes"
        ],
        "summary": "Exclusão de parte",
        "description": "Exclui a parte se não for um cliente e não estiver vinculada a nenhum processo",
        "operationId": "api-parte-delete",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "cdParte",
            "in": "path",
            "description": "O identificador da parte",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resposta do serviço",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MExclusaoItem"
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/partes/desvincular": {
      "post": {
        "tags": [
          "Partes"
        ],
        "summary": "Desvincular parte",
        "description": "Desvincula a parte do processo informado",
        "operationId": "api-partes-desvincular",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "processo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "parte",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "A parte foi desvinculada do processo"
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/envolvimentos": {
      "get": {
        "tags": [
          "Envolvimento das partes"
        ],
        "summary": "Envolvimento das partes",
        "description": "Obtém os envolvimentos das partes de acordo com o tipo de cadastro",
        "operationId": "api-envolvimentos",
        "parameters": [
          {
            "$ref": "#/components/parameters/Profile"
          },
          {
            "$ref": "#/components/parameters/SubscriptionKey"
          },
          {
            "name": "tipoProcesso",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RamosJudicial"
            }
          },
          {
            "name": "aplicabilidade",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PartePapelAplicabilidade"
            }
          },
          {
            "name": "tipoPolo",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Polo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtém os envolvimentos das partes de acordo com o tipo de cadastro",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DTOPartePapel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Em caso de erro de timeout ou sessão expirada."
          },
          "500": {
            "description": "Em caso de erro diferente de timeout ou sessão expirada.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "in": "header",
        "name": "api_key"
      },
      "auth_token": {
        "type": "apiKey",
        "in": "header",
        "name": "auth_token"
      },
      "basic_auth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "parameters": {
      "SubscriptionKey": {
        "name": "SubscriptionKey",
        "in": "header",
        "description": "Key to use the API provided by Lawsoft",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "Profile": {
        "name": "Profile",
        "in": "header",
        "description": "Profile obtained when logged in",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "DTOUser": {
        "title": "DTOUser",
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "Login"
          },
          "pwd": {
            "type": "string",
            "description": "Senha"
          },
          "domain": {
            "type": "string",
            "description": "Escritório"
          }
        }
      },
      "LoginParametro": {
        "type": "object",
        "properties": {
          "User": {
            "$ref": "#/components/schemas/DTOUser"
          },
          "Version": {
            "type": "string",
            "description": "A versão do aparelho"
          },
          "DeviceIdentification": {
            "type": "string",
            "description": "Identificação do dispositivo"
          },
          "Workstation": {
            "type": "string",
            "description": "Não lembro o que é"
          },
          "AccessCode": {
            "type": "string",
            "description": "Código de acesso"
          },
          "NovoMobile": {
            "type": "boolean",
            "description": "Efetuar login apenas com o app novo"
          }
        }
      },
      "FuncionarioLogin": {
        "title": "FuncionarioLogin",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer"
          },
          "Nome": {
            "type": "string"
          },
          "Domain": {
            "type": "string"
          }
        }
      },
      "DTOLogonResult": {
        "title": "DTOLogonResult",
        "type": "object",
        "properties": {
          "Context": {
            "type": "string"
          },
          "Access_Token": {
            "type": "string"
          },
          "Successful": {
            "type": "boolean"
          },
          "ErrorMessage": {
            "type": "string"
          },
          "Profile": {
            "type": "string"
          },
          "Funcionario": {
            "$ref": "#/components/schemas/FuncionarioLogin"
          }
        }
      },
      "InternalServerErrorResponse": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string",
            "description": "Mensagem do erro"
          },
          "ExceptionMessage": {
            "type": "string",
            "description": "Não sei o que é isso"
          },
          "ExceptionType": {
            "type": "string",
            "description": "Também não sei o que é"
          },
          "StackTrace": {
            "type": "string",
            "description": "Local da exception"
          }
        }
      },
      "LoginParametroSession": {
        "type": "object",
        "properties": {
          "escritorio": {
            "type": "string",
            "description": "Nome do escritório"
          },
          "token": {
            "type": "string",
            "description": "Token obtido no Lawsoft client"
          }
        }
      },
      "ResultadoDeLogin": {
        "title": "ResultadoDeLogin",
        "type": "object",
        "properties": {
          "Context": {
            "type": "string",
            "description": "Contexto de login",
            "example": "contexto"
          },
          "Successfull": {
            "type": "boolean",
            "description": "Indica se o login foi efetuado com sucesso"
          },
          "ErrorMessage": {
            "type": "string",
            "description": "Indica o erro ocorrido no login, caso houver."
          }
        }
      },
      "TipoItemAgenda": {
        "type": "integer",
        "example": 1,
        "description": "1: Atividade externa,\n\n2: Prazo, \n\n4: Audiência, \n\n8: Compromisso de trabalho, \n\n9: Compromisso particular\n"
      },
      "SituacaoDoItemAgenda": {
        "type": "integer",
        "example": 1,
        "description": "1: Em aberto,\n\n2: Agendada, \n\n3: Realizada, \n\n4: Ocupado, \n\n5: A confirmar\n\n6: Desmarcável\n"
      },
      "SituacaoLembrete": {
        "type": "integer",
        "example": 1,
        "description": "1: A notificar\n\n2: Descartado por ambos\n\n3: Notificado\n\n4: Descartado pelo executor\n\n5: Descartado pelo responsável\n"
      },
      "DTOItemAgenda": {
        "title": "DTOItemAgenda",
        "type": "object",
        "properties": {
          "IDItemAgenda": {
            "type": "integer",
            "example": 15
          },
          "IDItemAgendaPai": {
            "type": "integer",
            "description": "Se for uma subtarefa, esse valor é o identificador da tarefa pai, senão será null",
            "example": null
          },
          "Tipo": {
            "type": "enum",
            "$ref": "#/components/schemas/TipoItemAgenda"
          },
          "Situacao": {
            "type": "integer",
            "$ref": "#/components/schemas/SituacaoDoItemAgenda"
          },
          "Data": {
            "type": "string",
            "example": "2022-01-01T12:00:00"
          },
          "DataFormatada": {
            "type": "string",
            "example": "01/01/2022"
          },
          "DataLimite": {
            "type": "string",
            "example": "2022-01-01T12:00:00"
          },
          "DataLimiteFormatada": {
            "type": "string",
            "example": "01/01/2022"
          },
          "Lembrete": {
            "type": "string",
            "example": null
          },
          "IDTitulocobranca": {
            "type": "integer",
            "example": null
          },
          "Titulo": {
            "type": "string",
            "example": "Item de agenda"
          },
          "IDCaso": {
            "type": "integer",
            "example": 10
          },
          "IDForo": {
            "type": "integer",
            "example": 140
          },
          "Observacao": {
            "type": "string",
            "example": "Observação do item de agenda"
          },
          "Local": {
            "type": "string",
            "example": "São Paulo"
          },
          "IDFuncionarioCriador": {
            "type": "integer",
            "example": 30
          },
          "FuncionarioExecutor": {
            "type": "integer",
            "example": 30
          },
          "NomeFuncionarioExecutor": {
            "type": "string",
            "example": "Nome do funcionário executor"
          },
          "FuncionariosParticipantes": {
            "example": [
              10,
              20
            ],
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "DataCriacao": {
            "type": "string",
            "example": "2022-01-01T12:00:00"
          },
          "DataCriacaoFormatada": {
            "type": "string",
            "example": "01/01/2022"
          },
          "DataRealizacao": {
            "type": "string"
          },
          "DataRealizacaoFormatada": {
            "type": "string",
            "example": null
          },
          "DataRegistroRealizacao": {
            "type": "string",
            "example": null
          },
          "DataRegistroRealizacaoFormatada": {
            "type": "string",
            "example": null
          },
          "ObservacaoRegistroRealizacao": {
            "type": "string",
            "example": "Observação da realização"
          },
          "SituacaoLembrete": {
            "$ref": "#/components/schemas/SituacaoLembrete"
          },
          "IsEditable": {
            "type": "boolean"
          }
        }
      },
      "EstadoCivil": {
        "type": "integer",
        "example": 1,
        "description": "1: Solteiro\n\n2: Casado\n\n3: Viúvo\n\n4: Desquitado\n\n5: Divorciado\n\n6: Outros\n"
      },
      "VinculoEmpregaticio": {
        "type": "integer",
        "example": 2,
        "description": "1: Estagiário\n\n2: CLT\n\n3: Autônomo\n\n4: Terceirizado\n\n5: Outro\n\n6: Sócio\n\n7: Correspondente\n\n8: Advogado\n\n9: Aprendiz\n"
      },
      "DTOFuncionario": {
        "title": "DTOFuncionario",
        "type": "object",
        "properties": {
          "IDFuncionario": {
            "type": "integer",
            "example": 10
          },
          "Nome": {
            "type": "string",
            "example": "Funcionário",
            "description": "Nome do funcionário"
          },
          "Apelido": {
            "type": "string",
            "example": ""
          },
          "Logradouro": {
            "type": "string",
            "example": ""
          },
          "NumeroLogradouro": {
            "type": "string",
            "example": ""
          },
          "Bairro": {
            "type": "string",
            "example": ""
          },
          "Cidade": {
            "type": "string",
            "example": ""
          },
          "Estado": {
            "type": "string",
            "example": ""
          },
          "Complemento": {
            "type": "string",
            "example": ""
          },
          "CEP": {
            "type": "string",
            "example": ""
          },
          "Email": {
            "type": "string",
            "example": ""
          },
          "CPF": {
            "type": "string",
            "example": ""
          },
          "RG": {
            "type": "string",
            "example": ""
          },
          "EstadoCivil": {
            "$ref": "#/components/schemas/EstadoCivil"
          },
          "DataDeNascimento": {
            "type": "string",
            "example": ""
          },
          "DataDeNascimentoFormatada": {
            "type": "string",
            "example": ""
          },
          "Cargo": {
            "type": "string",
            "example": ""
          },
          "DataDeAdmissao": {
            "type": "string",
            "example": ""
          },
          "DataDeAdmissaoFormatada": {
            "type": "string",
            "example": ""
          },
          "DataDeDemissao": {
            "type": "string",
            "example": ""
          },
          "DataDeDemissaoFormatada": {
            "type": "string",
            "example": ""
          },
          "Oab": {
            "type": "string",
            "example": ""
          },
          "NumeroDeDependentes": {
            "type": "integer",
            "example": 0
          },
          "Admin": {
            "type": "boolean",
            "example": false
          },
          "Observacoes": {
            "type": "string",
            "example": ""
          },
          "VinculoEmpregaticio": {
            "$ref": "#/components/schemas/VinculoEmpregaticio"
          }
        }
      },
      "TipoEventoDeCobranca": {
        "type": "integer",
        "example": 1,
        "description": "1: Por compromisso\n\n2: Por prazo\n\n3: Por atividade externa\n\n4: Por publicação\n\n5: Por audiência\n"
      },
      "DTOTituloAgenda": {
        "title": "DTOTituloAgenda",
        "type": "object",
        "properties": {
          "IDEscritorio": {
            "type": "integer"
          },
          "TipoCobrancaEvento": {
            "$ref": "#/components/schemas/TipoEventoDeCobranca"
          },
          "Titulo": {
            "type": "string"
          },
          "IDTituloCobranca": {
            "type": "integer"
          }
        }
      },
      "DTOCompromissoAudiencia": {
        "title": "DTOCompromissoAudiencia",
        "type": "object",
        "properties": {
          "NomeClienteProcesso": {
            "type": "string"
          },
          "TituloProcesso": {
            "type": "string"
          },
          "NumeroInterno": {
            "type": "string"
          },
          "NumeroExterno": {
            "type": "string"
          },
          "idAudiencia": {
            "type": "integer"
          },
          "Assunto": {
            "type": "string"
          },
          "Area": {
            "type": "string"
          },
          "Hora": {
            "type": "string"
          },
          "Data": {
            "type": "string"
          },
          "DataFormatada": {
            "type": "string"
          },
          "Delegante": {
            "type": "string"
          },
          "Executor": {
            "type": "string"
          },
          "Participantes": {
            "type": "array",
            "example": [
              10,
              20
            ],
            "items": {
              "type": "integer"
            }
          },
          "Descricao": {
            "type": "string"
          },
          "Local": {
            "type": "string"
          },
          "Situacao": {
            "type": "string"
          },
          "IdCaso": {
            "type": "integer"
          },
          "IdAudienciaPai": {
            "type": "integer"
          }
        }
      },
      "DTORecorrenciaDeItemAgenda": {
        "title": "DTORecorrenciaDeItemAgenda",
        "type": "object",
        "properties": {
          "Tipo": {
            "type": "string"
          },
          "DiasDaSemana": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "DataInicio": {
            "type": "string"
          },
          "DataFim": {
            "type": "string"
          },
          "MesDoAno": {
            "type": "string"
          },
          "DiaDoMes": {
            "type": "string"
          },
          "ACada": {
            "type": "string"
          }
        }
      },
      "DTOItemAgendaSimples": {
        "title": "DTOItemAgendaSimples",
        "type": "object",
        "properties": {
          "NomeClienteProcesso": {
            "type": "string"
          },
          "TituloProcesso": {
            "type": "string"
          },
          "NumeroInterno": {
            "type": "string"
          },
          "NumeroExterno": {
            "type": "string"
          },
          "TipoDeItem": {
            "type": "string"
          },
          "Data": {
            "type": "string"
          },
          "DataFormatada": {
            "type": "string"
          },
          "Assunto": {
            "type": "string"
          },
          "IdCaso": {
            "type": "integer"
          },
          "idExecutor": {
            "type": "integer"
          },
          "Executor": {
            "type": "string"
          },
          "Observacao": {
            "type": "string"
          },
          "IdPai": {
            "type": "integer"
          },
          "Recorrencia": {
            "$ref": "#/components/schemas/DTORecorrenciaDeItemAgenda"
          }
        }
      },
      "RamosJudicial": {
        "type": "integer",
        "example": 1,
        "description": "1: Administrativo\n\n2: Interno\n\n3: Judicial Estadual\n\n4: Judicial Federal\n\n5: Judicial Trabalhista\n\n6: Interno do escritório\n\n7: Militar Estadual\n\n8: Eleitoral\n\n9: Militar da União\n"
      },
      "DTOAndamentoTemplate": {
        "title": "DTOAndamentoTemplate",
        "type": "object",
        "properties": {
          "IDAndamentoTemplate": {
            "type": "integer"
          },
          "IDEscritorio": {
            "type": "integer"
          },
          "TextoTemplate": {
            "type": "string"
          },
          "NomeTemplate": {
            "type": "string"
          },
          "GrupoDeCaso": {
            "$ref": "#/components/schemas/RamosJudicial"
          }
        }
      },
      "DTOAndamentoClassificacao": {
        "title": "DTOAndamentoClassificacao",
        "type": "object",
        "properties": {
          "IDAndamentoClassificacao": {
            "type": "integer"
          },
          "NrOrdem": {
            "type": "integer"
          },
          "DsNome": {
            "type": "string"
          },
          "CdEscritorio": {
            "type": "integer"
          },
          "InExibirEmRelatorio": {
            "type": "boolean"
          }
        }
      },
      "eTipoClassificacaoAutomatica": {
        "type": "integer",
        "example": 1,
        "description": "1: Planilha de horas\n\n2: Push de publicação\n\n3: Push de andamento\n\n4: Outlook\n\n5: Automático\n\n6: Manual\n"
      },
      "eClassificacaoAutomaticaDeAndamento": {
        "type": "integer",
        "example": 4,
        "description": "1: Prazo\n\n2: Compromisso\n\n3: Audiência\n\n4: Atividade externa\n\n5: Publicação\n\n6: Decisão\n\n7: Exclusão\n\n8: Arquivo morto\n\n9: Encerramento\n\n10: Planilha de horas\n\n11: Push de publicação\n\n12: Push de andamento\n\n13: Outlook\n\n14: Movimentação processual\n\n15: Publicação processual\n\n16: Publicação geral\n\n17: Nova distribuição\n\n18: Cadastro agendado\n\n19: Status pedido\n\n20: Mudanças processo\n\n21: Falha monitoramento\n\n22: Nova CIPPROC\n\n23: Mudança de conteúdo\n\n24: Nova intimação\n\n25: Retorno solicitação\n\n26: Relatório concluído\n"
      },
      "SituacaoDeAndamento": {
        "type": "integer",
        "example": 2,
        "description": "1: A aprovar\n\n2: Aprovado\n\n3: Publicado\n"
      },
      "CaixaDeMensagem": {
        "type": "integer",
        "example": 1,
        "description": "1: Administração\n\n2: Avisos\n\n3: Clientes\n\n4: Prazos\n\n5: Processos\n\n6: MensagemShutdown__\n\n7: Finanças\n"
      },
      "TipoDePush": {
        "type": "integer",
        "example": 1,
        "description": "1: Publicação\n\n2: Andamento\n"
      },
      "DTOAndamento": {
        "title": "DTOAndamento",
        "type": "object",
        "properties": {
          "NrTipoClassificacaoAutomatica": {
            "$ref": "#/components/schemas/eTipoClassificacaoAutomatica"
          },
          "NrClassificacaoAutomatica": {
            "$ref": "#/components/schemas/eClassificacaoAutomaticaDeAndamento"
          },
          "ClassificacaoDoAndamento": {
            "type": "string"
          },
          "LancamentoPeloTimeSheetDoMobile": {
            "type": "boolean"
          },
          "IdAndamento": {
            "type": "integer"
          },
          "TextoAndamento": {
            "type": "string"
          },
          "TextoAndamentoContinuacao": {
            "type": "string"
          },
          "IdProcesso": {
            "type": "integer"
          },
          "DataCompetencia": {
            "type": "string"
          },
          "DataInclusao": {
            "type": "string"
          },
          "IdAutor": {
            "type": "integer"
          },
          "NomeAutor": {
            "type": "string"
          },
          "InUsoInterno": {
            "type": "boolean"
          },
          "DataRevisao": {
            "type": "string"
          },
          "IdRevisor": {
            "type": "integer"
          },
          "NomeRevisor": {
            "type": "string"
          },
          "Situacao": {
            "$ref": "#/components/schemas/SituacaoDeAndamento"
          },
          "InManual": {
            "type": "boolean"
          },
          "IdAndamentoTemplate": {
            "type": "integer"
          },
          "NovoAndamentoParaRevisao": {
            "$ref": "#/components/schemas/CaixaDeMensagem"
          },
          "IdAndamentoClassificacao": {
            "type": "integer"
          },
          "IdPublicacaoAndamento": {
            "type": "integer"
          },
          "Tipo": {
            "$ref": "#/components/schemas/TipoDePush"
          },
          "dsCodigoOriginal": {
            "type": "string"
          },
          "IsEditable": {
            "type": "boolean"
          }
        }
      },
      "DTOAndamentoSimples": {
        "title": "DTOAndamentoSimples",
        "type": "object",
        "properties": {
          "NomeCliente": {
            "type": "string"
          },
          "TituloCaso": {
            "type": "string"
          },
          "NumeroInterno": {
            "type": "string"
          },
          "NumeroExterno": {
            "type": "string"
          },
          "idAndamento": {
            "type": "integer"
          },
          "Classificacao": {
            "type": "string"
          },
          "DataCompetencia": {
            "type": "string"
          },
          "DataCompetenciaFormatada": {
            "type": "string"
          },
          "TextoAndamento": {
            "type": "string"
          },
          "IdCaso": {
            "type": "integer"
          }
        }
      },
      "DTOArea": {
        "title": "DTOArea",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer"
          },
          "Titulo": {
            "type": "string"
          },
          "Ativa": {
            "type": "boolean"
          }
        }
      },
      "TipoItemTimeline": {
        "type": "integer",
        "example": 1,
        "description": "1: Andamento manual\n\n2: Andamento automático\n\n3: Timesheet\n\n4: Agenda\n\n5: Tarefa\n\n6: Decisão\n\n7: Despesa\n\n8: Garantia\n\n9: Push de andamento\n\n10: Push de publicação\n"
      },
      "DTOTimelineItem": {
        "title": "DTOTimelineItem",
        "type": "object",
        "properties": {
          "IDItem": {
            "type": "integer",
            "example": 12,
            "description": "Identificador do item de timeline"
          },
          "DataFormatada": {
            "type": "string",
            "example": "17/03/2022",
            "description": "Data do item de timeline"
          },
          "TipoItem": {
            "$ref": "#/components/schemas/TipoItemTimeline"
          },
          "TipoItemString": {
            "type": "string"
          },
          "TextoItem": {
            "type": "string"
          },
          "TipoItemAgenda": {
            "type": "integer"
          },
          "Titulo": {
            "type": "string"
          }
        }
      },
      "DTOProduto": {
        "title": "DTOProduto",
        "type": "object",
        "properties": {
          "NomeCliente": {
            "type": "string"
          },
          "TituloCaso": {
            "type": "string"
          },
          "NumeroInterno": {
            "type": "string"
          },
          "NumeroExterno": {
            "type": "string"
          },
          "dsProduto": {
            "type": "string"
          },
          "IdCaso": {
            "type": "integer"
          }
        }
      },
      "DTOFaseCaso": {
        "title": "DTOFaseCaso",
        "type": "object",
        "properties": {
          "NomeCliente": {
            "type": "string"
          },
          "TituloCaso": {
            "type": "string"
          },
          "NumeroInterno": {
            "type": "string"
          },
          "NumeroExterno": {
            "type": "string"
          },
          "NomeFaseCaso": {
            "type": "string"
          },
          "IDFaseProcesso": {
            "type": "integer"
          },
          "IdCaso": {
            "type": "integer"
          }
        }
      },
      "DTODadoComplementar": {
        "title": "DTODadoComplementar",
        "type": "object",
        "properties": {
          "NomeCliente": {
            "type": "string"
          },
          "TituloCaso": {
            "type": "string"
          },
          "NumeroInterno": {
            "type": "string"
          },
          "NumeroExterno": {
            "type": "string"
          },
          "Nome": {
            "type": "string"
          },
          "TipoCampo": {
            "type": "string"
          },
          "Valores": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "IdCaso": {
            "type": "integer"
          }
        }
      },
      "PoloLawOffice": {
        "type": "integer",
        "example": 1,
        "description": "1: Ativo\n\n2: Passivo\n\n3: Terceiro\n\n4: Nenhum\n\n5: Outro envolvido\n"
      },
      "ClasseDoCaso": {
        "type": "integer",
        "example": 1,
        "description": "1: Processo\n\n2: Subprocesso\n\n3: Recurso\n\n4: Incidente\n"
      },
      "SituacaoDoCaso": {
        "type": "integer",
        "example": 1,
        "description": "1: Ativo\n\n2: Arquivo morto\n\n3: Encerrado\n\n99: Excluído\n"
      },
      "TipoDeInstancia": {
        "type": "integer",
        "example": 1,
        "description": "1: Tribunal\n\n2: Comarca\n\n3: Fórum\n\n4: Seção\n\n5: Natureza\n\n6: Município\n\n9: Nível\n"
      },
      "HierarquiaParaLO": {
        "title": "HierarquiaParaLO",
        "type": "object",
        "properties": {
          "nomeItemHierarquia": {
            "type": "string"
          },
          "grupoFamilia": {
            "$ref": "#/components/schemas/TipoDeInstancia"
          }
        }
      },
      "TipoPessoa": {
        "type": "integer",
        "example": 1,
        "description": "1: Pessoa física\n\n2: Pessoa jurídica\n"
      },
      "ParteParaLO": {
        "title": "ParteParaLO",
        "type": "object",
        "properties": {
          "IdParteNoLo": {
            "type": "integer"
          },
          "nomeParte": {
            "type": "string"
          },
          "tipoPessoa": {
            "$ref": "#/components/schemas/TipoPessoa"
          },
          "polo": {
            "$ref": "#/components/schemas/PoloLawOffice"
          },
          "principal": {
            "type": "boolean"
          }
        }
      },
      "DTOProcessoPreCadastro": {
        "title": "DTOProcessoPreCadastro",
        "type": "object",
        "properties": {
          "idPreProcesso": {
            "type": "integer"
          },
          "idCliente": {
            "type": "integer"
          },
          "envolvimentoCliente": {
            "$ref": "#/components/schemas/PoloLawOffice"
          },
          "nrExito": {
            "type": "integer"
          },
          "nrTipoExito": {
            "type": "integer"
          },
          "nrMoedaInicialCausa": {
            "type": "integer"
          },
          "idResponsavel": {
            "type": "integer"
          },
          "idProcessoPai": {
            "type": "integer"
          },
          "idArea": {
            "type": "integer"
          },
          "idPasta": {
            "type": "integer"
          },
          "dsAssunto": {
            "type": "string"
          },
          "idRito": {
            "type": "integer"
          },
          "idForo": {
            "type": "integer"
          },
          "cdNoForoVara": {
            "type": "integer"
          },
          "numeroSequencial": {
            "type": "integer"
          },
          "confidencial": {
            "type": "boolean"
          },
          "dataCriacao": {
            "type": "string"
          },
          "dataUltimaAlteracao": {
            "type": "string"
          },
          "classeDoProcesso": {
            "$ref": "#/components/schemas/ClasseDoCaso"
          },
          "tipo": {
            "$ref": "#/components/schemas/RamosJudicial"
          },
          "situacaoDoProcesso": {
            "$ref": "#/components/schemas/SituacaoDoCaso"
          },
          "tituloProcesso": {
            "type": "string"
          },
          "observacao": {
            "type": "string"
          },
          "numeroInterno": {
            "type": "string"
          },
          "idContrato": {
            "type": "integer"
          },
          "idFase": {
            "type": "integer"
          },
          "nivel": {
            "type": "string"
          },
          "numeroExterno": {
            "type": "string"
          },
          "valorCausa": {
            "type": "number"
          },
          "valorExpectativaApuracao": {
            "type": "number"
          },
          "valorContingencia": {
            "type": "number"
          },
          "cnj": {
            "type": "string"
          },
          "utilizaPedidosDoProcessoPai": {
            "type": "boolean"
          },
          "foroTemporario": {
            "type": "string"
          },
          "comentarioExpectativaDaCausa": {
            "type": "string"
          },
          "segundoNumero": {
            "type": "string"
          },
          "anotacoesSegundoNumero": {
            "type": "string"
          },
          "dataEntrada": {
            "type": "string"
          },
          "dataDistribuicao": {
            "type": "string"
          },
          "dataCitacao": {
            "type": "string"
          },
          "hierarquia": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HierarquiaParaLO"
            }
          },
          "coResponsaveis": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "idProcessoNoFornecedorPush": {
            "type": "integer"
          },
          "nrFornecedorPush": {
            "type": "integer"
          },
          "partes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParteParaLO"
            }
          }
        }
      },
      "DTOErroCadastroProcesso": {
        "title": "DTOErroCadastroProcesso",
        "type": "object",
        "properties": {
          "IdPreProcesso": {
            "type": "integer"
          },
          "DetalheErro": {
            "type": "string"
          },
          "NumeroExterno": {
            "type": "string"
          },
          "NumeroSequencial": {
            "type": "integer"
          },
          "NumeroInterno": {
            "type": "string"
          },
          "TituloProcesso": {
            "type": "string"
          }
        }
      },
      "DTOProcessoJudicialAdministrativo": {
        "title": "DTOProcessoJudicialAdministrativo",
        "type": "object",
        "properties": {
          "idPreProcesso": {
            "type": "integer"
          },
          "dsNumeroExterno": {
            "type": "string"
          },
          "nrSequencia": {
            "type": "integer"
          },
          "nrInterno": {
            "type": "string"
          },
          "dsTitulo": {
            "type": "string"
          },
          "dtCriacao": {
            "type": "string"
          },
          "IDFuncionario": {
            "type": "integer"
          },
          "Nome": {
            "type": "string"
          },
          "cdProcesso": {
            "type": "integer"
          },
          "Domain": {
            "type": "string"
          }
        }
      },
      "DTORespostaCadastroProcessoPreCadastro": {
        "title": "DTORespostaCadastroProcessoPreCadastro",
        "type": "object",
        "properties": {
          "HouveException": {
            "type": "boolean"
          },
          "ProcessosNaoCadastrados": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTOErroCadastroProcesso"
            }
          },
          "ProcessosCadastrados": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTOProcessoJudicialAdministrativo"
            }
          }
        }
      },
      "DTOCasoSimples": {
        "title": "DTOCasoSimples",
        "type": "object",
        "properties": {
          "IDCaso": {
            "type": "integer"
          },
          "Titulo": {
            "type": "string"
          },
          "IDCliente": {
            "type": "integer"
          },
          "NomeCliente": {
            "type": "string"
          },
          "NomeResponsavelCaso": {
            "type": "string"
          },
          "IDPasta": {
            "type": "integer"
          },
          "NomePasta": {
            "type": "string"
          },
          "IDContrato": {
            "type": "integer"
          },
          "NomeContrato": {
            "type": "string"
          },
          "NumeroInterno": {
            "type": "string"
          },
          "NumeroExterno": {
            "type": "string"
          },
          "NumeroLawoffice": {
            "type": "integer"
          },
          "IDCasoPai": {
            "type": "integer"
          },
          "Classe": {
            "$ref": "#/components/schemas/ClasseDoCaso"
          },
          "DataDeCriacao": {
            "type": "string"
          },
          "DataDeCriacaoFormatada": {
            "type": "string"
          },
          "Situacao": {
            "$ref": "#/components/schemas/SituacaoDoCaso"
          },
          "NomeArea": {
            "type": "string"
          },
          "TipoProcesso": {
            "type": "string"
          },
          "DataUltimaAlteracao": {
            "type": "string"
          },
          "HierarquiaProcesso": {
            "type": "string"
          },
          "PoloAtivo": {
            "type": "string"
          },
          "PoloPassivo": {
            "type": "string"
          },
          "StatusCaso": {
            "type": "string"
          }
        }
      },
      "DTOPasta": {
        "title": "DTOPasta",
        "type": "object",
        "properties": {
          "IDPasta": {
            "type": "integer"
          },
          "IDEscritorio": {
            "type": "integer"
          },
          "IDCliente": {
            "type": "integer"
          },
          "NumeroDaPasta": {
            "type": "integer"
          },
          "Assunto": {
            "type": "string"
          }
        }
      },
      "ExpectavivaReivindicacao": {
        "type": "integer",
        "example": 2,
        "description": "1: Provável\n\n2: Possível\n\n3: Remoto\n"
      },
      "DTOCasoCompleto": {
        "title": "DTOCasoCompleto",
        "type": "object",
        "properties": {
          "CdNoForoVara": {
            "type": "integer"
          },
          "IDCaso": {
            "type": "integer"
          },
          "IDCliente": {
            "type": "integer"
          },
          "IDPasta": {
            "type": "integer"
          },
          "IDContrato": {
            "type": "integer"
          },
          "IDRito": {
            "type": "integer"
          },
          "IDFaseProcesso": {
            "type": "integer"
          },
          "IDCasoPai": {
            "type": "integer"
          },
          "IDArea": {
            "type": "integer"
          },
          "IDForo": {
            "type": "integer"
          },
          "IDsCoResponsaveis": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "IDFuncionarioResponsavel": {
            "type": "integer"
          },
          "Titulo": {
            "type": "string"
          },
          "Foro": {
            "type": "string"
          },
          "Rito": {
            "type": "string"
          },
          "Observacao": {
            "type": "string"
          },
          "PolosAtivos": {
            "type": "string"
          },
          "PolosPassivos": {
            "type": "string"
          },
          "StatusCaso": {
            "type": "string"
          },
          "TipoProcesso": {
            "type": "string"
          },
          "FaseProcesso": {
            "type": "string"
          },
          "ComentarioExpectativaDaCausa": {
            "type": "string"
          },
          "NomeCliente": {
            "type": "string"
          },
          "NomePasta": {
            "type": "string"
          },
          "NomeArea": {
            "type": "string"
          },
          "NomeContrato": {
            "type": "string"
          },
          "NomeResponsavelCaso": {
            "type": "string"
          },
          "NumeroInterno": {
            "type": "string"
          },
          "NumeroExterno": {
            "type": "string"
          },
          "NumeroLawoffice": {
            "type": "integer"
          },
          "Classe": {
            "$ref": "#/components/schemas/ClasseDoCaso"
          },
          "Situacao": {
            "$ref": "#/components/schemas/SituacaoDoCaso"
          },
          "Tipo": {
            "$ref": "#/components/schemas/RamosJudicial"
          },
          "ExpectativaDeExito": {
            "$ref": "#/components/schemas/ExpectavivaReivindicacao"
          },
          "DataDeCriacao": {
            "type": "string"
          },
          "DataDeEntrada": {
            "type": "string"
          },
          "DataDeDistribuicao": {
            "type": "string"
          },
          "DataDeCitacao": {
            "type": "string"
          },
          "DataDeEncerramento": {
            "type": "string"
          },
          "DataPrevistaDeEncerramento": {
            "type": "string"
          },
          "DataDeCriacaoFormatada": {
            "type": "string"
          },
          "DataDeEntradaFormatada": {
            "type": "string"
          },
          "DataDeDistribuicaoFormatada": {
            "type": "string"
          },
          "DataDeEncerramentoFormatada": {
            "type": "string"
          },
          "DataPrevistaDeEncerramentoFormatada": {
            "type": "string"
          },
          "DataUltimaAlteracao": {
            "type": "string"
          },
          "Confidencial": {
            "type": "boolean"
          }
        }
      },
      "DTOCasoFicha": {
        "title": "DTOCasoFicha",
        "type": "object",
        "properties": {
          "NomeCliente": {
            "type": "string"
          },
          "Titulo": {
            "type": "string"
          },
          "NumeroInterno": {
            "type": "string"
          },
          "NumeroExterno": {
            "type": "string"
          },
          "Situacao": {
            "type": "string"
          },
          "ExpectativaDeExito": {
            "type": "string"
          },
          "NomeFilial": {
            "type": "string"
          },
          "DataDeEntrada": {
            "type": "string"
          },
          "DataDeEntradaFormatada": {
            "type": "string"
          },
          "DataDeCitacao": {
            "type": "string"
          },
          "DataDeCitacaoFormatada": {
            "type": "string"
          },
          "DataDeDistribuicao": {
            "type": "string"
          },
          "DataDeDistribuicaoFormatada": {
            "type": "string"
          },
          "DataPrevistaDeEncerramento": {
            "type": "string"
          },
          "DataPrevistaDeEncerramentoFormatada": {
            "type": "string"
          },
          "DataDeEncerramento": {
            "type": "string"
          },
          "DataDeEncerramentoFormatada": {
            "type": "string"
          },
          "Foro": {
            "type": "string"
          },
          "Rito": {
            "type": "string"
          },
          "ValorCausa": {
            "type": "number"
          },
          "ValorPrevistoCausa": {
            "type": "number"
          },
          "ValorContingencia": {
            "type": "number"
          },
          "IdCaso": {
            "type": "integer"
          },
          "IdFase": {
            "type": "integer"
          },
          "IdPasta": {
            "type": "integer"
          },
          "IdArea": {
            "type": "integer"
          },
          "IdResponsavel": {
            "type": "integer"
          },
          "IDsCoResponsaveis": {
            "type": "array",
            "items": {
              "type": "integer",
              "example": [
                10,
                20
              ]
            }
          }
        }
      },
      "DTOEnum": {
        "title": "DTOEnum",
        "type": "object",
        "properties": {
          "Valor": {
            "type": "string"
          },
          "ID": {
            "type": "integer"
          },
          "Description": {
            "type": "string"
          }
        }
      },
      "DTOCategoriaPreco": {
        "title": "DTOCategoriaPreco",
        "type": "object",
        "properties": {
          "IdCategoria": {
            "type": "integer"
          },
          "IdEscritorio": {
            "type": "integer"
          },
          "NomeCategoria": {
            "type": "string"
          },
          "NumeroMoeda": {
            "type": "integer"
          },
          "NumeroSituacao": {
            "type": "integer"
          },
          "ValorHoraTrabalhada": {
            "type": "number"
          },
          "valorHoraTrabalhadaReal": {
            "type": "number"
          }
        }
      },
      "DTOCategoriaFuncionario": {
        "title": "DTOCategoriaFuncionario",
        "type": "object",
        "properties": {
          "IdFuncionario": {
            "type": "integer"
          },
          "IdCategoria": {
            "type": "integer"
          },
          "DataInicio": {
            "type": "string"
          },
          "DataLancamento": {
            "type": "string"
          },
          "NomeFuncionario": {
            "type": "string"
          },
          "NomeFuncionarioTransacao": {
            "type": "string"
          },
          "NomeCategoria": {
            "type": "string"
          },
          "NomeResponsavel": {
            "type": "string"
          }
        }
      },
      "TipoCliente": {
        "type": "integer",
        "example": 1,
        "description": "1: Pessoa física\n\n2: Pessoa jurídica\n"
      },
      "SituacaoDeCliente": {
        "type": "integer",
        "example": 1,
        "description": "1: Ativa\n\n2: Inativa\n"
      },
      "TipoDeEndereco": {
        "type": "integer",
        "example": 1,
        "description": "1: Residencial\n\n2: Comercial\n\n3: Outros\n"
      },
      "DTOCliente": {
        "title": "DTOCliente",
        "type": "object",
        "properties": {
          "IDCliente": {
            "type": "integer"
          },
          "NumeroDoCliente": {
            "type": "integer"
          },
          "Nome": {
            "type": "string"
          },
          "Apelido": {
            "type": "string"
          },
          "Tipo": {
            "$ref": "#/components/schemas/TipoCliente"
          },
          "Email": {
            "type": "string"
          },
          "Situacao": {
            "$ref": "#/components/schemas/SituacaoDeCliente"
          },
          "MotivoInativacao": {
            "type": "string"
          },
          "WebSite": {
            "type": "string"
          },
          "Observacoes": {
            "type": "string"
          },
          "CPFCNPJ": {
            "type": "string"
          },
          "TratoConfidencial": {
            "type": "boolean"
          },
          "InscricaoMunicipal": {
            "type": "string"
          },
          "DataCriacao": {
            "type": "string"
          },
          "Estrangeiro": {
            "type": "boolean"
          },
          "InscricaoEstadual": {
            "type": "string"
          },
          "Idioma": {
            "type": "string"
          },
          "TipoEndereco": {
            "$ref": "#/components/schemas/TipoDeEndereco"
          },
          "Logradouro": {
            "type": "string"
          },
          "Numero": {
            "type": "string"
          },
          "Complemento": {
            "type": "string"
          },
          "Bairro": {
            "type": "string"
          },
          "Cidade": {
            "type": "string"
          },
          "Estado": {
            "type": "string"
          },
          "CEP": {
            "type": "string"
          },
          "Pais": {
            "type": "string"
          },
          "EnderecoPrincipal": {
            "type": "integer"
          }
        }
      },
      "DTOEnderecoCliente": {
        "title": "DTOEnderecoCliente",
        "type": "object",
        "properties": {
          "IDCliente": {
            "type": "integer"
          },
          "NumeroDoCliente": {
            "type": "integer"
          },
          "TipoEndereco": {
            "$ref": "#/components/schemas/TipoDeEndereco"
          },
          "Logradouro": {
            "type": "string"
          },
          "Numero": {
            "type": "string"
          },
          "Complemento": {
            "type": "string"
          },
          "Bairro": {
            "type": "string"
          },
          "Cidade": {
            "type": "string"
          },
          "Estado": {
            "type": "string"
          },
          "CEP": {
            "type": "string"
          },
          "Pais": {
            "type": "string"
          },
          "EnderecoPrincipal": {
            "type": "integer"
          }
        }
      },
      "DTOClienteMobile": {
        "title": "DTOClienteMobile",
        "type": "object",
        "properties": {
          "IDCliente": {
            "type": "integer"
          },
          "NumeroDoCliente": {
            "type": "integer"
          },
          "Nome": {
            "type": "string"
          },
          "Apelido": {
            "type": "string"
          },
          "Tipo": {
            "$ref": "#/components/schemas/TipoCliente"
          },
          "Email": {
            "type": "string"
          },
          "Situacao": {
            "$ref": "#/components/schemas/SituacaoDeCliente"
          },
          "MotivoInativacao": {
            "type": "string"
          },
          "WebSite": {
            "type": "string"
          },
          "Observacoes": {
            "type": "string"
          },
          "CPFCNPJ": {
            "type": "string"
          },
          "TratoConfidencial": {
            "type": "boolean"
          },
          "InscricaoMunicipal": {
            "type": "string"
          },
          "DataCriacao": {
            "type": "string"
          },
          "Estrangeiro": {
            "type": "boolean"
          },
          "InscricaoEstadual": {
            "type": "string"
          },
          "Idioma": {
            "type": "string"
          },
          "TipoEndereco": {
            "$ref": "#/components/schemas/TipoDeEndereco"
          },
          "Logradouro": {
            "type": "string"
          },
          "Numero": {
            "type": "string"
          },
          "Complemento": {
            "type": "string"
          },
          "Bairro": {
            "type": "string"
          },
          "Cidade": {
            "type": "string"
          },
          "Estado": {
            "type": "string"
          },
          "CEP": {
            "type": "string"
          },
          "Pais": {
            "type": "string"
          },
          "EnderecoPrincipal": {
            "type": "integer"
          },
          "inTemLEDES": {
            "type": "boolean"
          },
          "inNecessitaDeSolicitanteParaLancamentoDeHoras": {
            "type": "boolean"
          },
          "Status": {
            "type": "integer",
            "description": "StatusCode definitions: https://docs.microsoft.com/en-us/dotnet/api/system.net.httpstatuscode?view=netframework-4.5"
          }
        }
      },
      "DTOPais": {
        "title": "DTOPais",
        "type": "object",
        "properties": {
          "ID": {
            "example": 26,
            "type": "integer"
          },
          "Pais": {
            "example": "Brasil",
            "type": "string"
          }
        }
      },
      "DTOUF": {
        "title": "DTOUF",
        "type": "object",
        "properties": {
          "ID": {
            "example": "AL",
            "type": "string"
          },
          "UF": {
            "example": "Alagoas",
            "type": "string"
          }
        }
      },
      "DTOCidade": {
        "title": "DTOCidade",
        "type": "object",
        "properties": {
          "ID": {
            "example": 80,
            "type": "integer"
          },
          "IDUF": {
            "example": 13,
            "type": "integer"
          },
          "Cidade": {
            "example": "Alvarães",
            "type": "string"
          }
        }
      },
      "ContratoSituacao": {
        "type": "integer",
        "example": 1,
        "description": "1: Ativo\n\n3: Encerrado\n"
      },
      "DTOContrato": {
        "title": "DTOContrato",
        "type": "object",
        "properties": {
          "IDContrato": {
            "type": "integer"
          },
          "Titulo": {
            "type": "string"
          },
          "IDCliente": {
            "type": "integer"
          },
          "NomeCliente": {
            "type": "string"
          },
          "Observacao": {
            "type": "string"
          },
          "DataInicio": {
            "type": "string"
          },
          "DataPrevisaoEncerramento": {
            "type": "string"
          },
          "DataEncerramento": {
            "type": "string"
          },
          "Situacao": {
            "$ref": "#/components/schemas/ContratoSituacao"
          }
        }
      },
      "DTOContratoSimples": {
        "title": "DTOContratoSimples",
        "type": "object",
        "properties": {
          "Titulo": {
            "type": "string"
          },
          "IDCliente": {
            "type": "integer"
          },
          "Descricao": {
            "type": "string"
          }
        }
      },
      "DTORito": {
        "title": "DTORito",
        "type": "object",
        "properties": {
          "cdRito": {
            "type": "integer"
          },
          "cdGrupoRito": {
            "type": "integer"
          },
          "dsNome": {
            "type": "string"
          },
          "inEsperaPoloPassivo": {
            "type": "boolean"
          },
          "dsPoloAtivo": {
            "type": "string"
          },
          "dsPoloPassivo": {
            "type": "string"
          },
          "dsPoloTerceiro": {
            "type": "string"
          }
        }
      },
      "DTOGrupoRito": {
        "title": "DTOGrupoRito",
        "type": "object",
        "properties": {
          "cdGrupoRito": {
            "type": "integer"
          },
          "dsNome": {
            "type": "string"
          },
          "cdGrupoPai": {
            "type": "integer"
          },
          "Ritos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTORito"
            }
          },
          "Grupos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTOGrupoRito"
            }
          }
        }
      },
      "DTOTipoProcessoAdministrativo": {
        "title": "DTOTipoProcessoAdministrativo",
        "type": "object",
        "properties": {
          "IdTipoProcessoAdministrativo": {
            "type": "integer"
          },
          "Nome": {
            "type": "string"
          }
        }
      },
      "DTORegiaoRamoJudicial": {
        "title": "DTORegiaoRamoJudicial",
        "type": "object",
        "properties": {
          "nrRamoJudicial": {
            "$ref": "#/components/schemas/RamosJudicial"
          },
          "cdRegiao": {
            "type": "integer"
          },
          "dsRegiao": {
            "type": "string"
          }
        }
      },
      "DTOForo": {
        "title": "DTOForo",
        "type": "object",
        "properties": {
          "cdForo": {
            "type": "integer"
          },
          "cdGrupoForo": {
            "type": "integer"
          },
          "dsNome": {
            "type": "string"
          },
          "cdLocal": {
            "type": "integer"
          },
          "inAtivoInativo": {
            "type": "boolean"
          },
          "cdOrdenacao": {
            "type": "integer"
          },
          "cdUF": {
            "type": "string"
          },
          "Municipio": {
            "type": "string"
          },
          "dsHierarquia": {
            "type": "string"
          }
        }
      },
      "DTOGrupoForo": {
        "title": "DTOGrupoForo",
        "type": "object",
        "properties": {
          "inAdmiteMunicipio": {
            "type": "boolean"
          },
          "cdRegiao": {
            "type": "integer"
          },
          "cdUF": {
            "type": "string"
          },
          "cdLocalGrupoForo": {
            "type": "integer"
          },
          "dsNome": {
            "type": "string"
          },
          "nrInstancia": {
            "type": "integer"
          },
          "cdGrupoFamilia": {
            "type": "integer"
          },
          "nrRamoJudicial": {
            "$ref": "#/components/schemas/RamosJudicial"
          },
          "cdGrupoForo": {
            "type": "integer"
          },
          "cdGrupoPai": {
            "type": "integer"
          },
          "Foros": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTOForo"
            }
          },
          "GrupoPai": {
            "$ref": "#/components/schemas/DTOGrupoForo"
          },
          "Grupos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTOGrupoForo"
            }
          }
        }
      },
      "DTOEnderecoParte": {
        "title": "DTOEnderecoParte",
        "type": "object",
        "properties": {
          "Tipo": {
            "$ref": "#/components/schemas/TipoDeEndereco"
          },
          "CEP": {
            "type": "string"
          },
          "Logradouro": {
            "type": "string"
          },
          "Numero": {
            "type": "integer"
          },
          "Complemento": {
            "type": "string"
          },
          "Bairro": {
            "type": "string"
          },
          "IDPais": {
            "type": "integer"
          },
          "Pais": {
            "type": "string"
          },
          "IDEstado": {
            "type": "string"
          },
          "Estado": {
            "type": "string"
          },
          "IDCidade": {
            "type": "integer"
          },
          "Cidade": {
            "type": "string"
          }
        }
      },
      "TipoDeTelefone": {
        "type": "integer",
        "example": 3,
        "description": "1: Residencial\n\n2: Comercial\n\n3: Celular\n\n4: Fax\n"
      },
      "DTOTelefoneParte": {
        "title": "DTOTelefoneParte",
        "type": "object",
        "properties": {
          "TipoTelefone": {
            "$ref": "#/components/schemas/TipoDeTelefone"
          },
          "DDD": {
            "type": "string"
          },
          "Telefone": {
            "type": "string"
          },
          "Extensao": {
            "type": "string"
          }
        }
      },
      "DTOTelefoneAdvogado": {
        "title": "DTOTelefoneAdvogado",
        "type": "object",
        "properties": {
          "TipoTelefone": {
            "$ref": "#/components/schemas/TipoDeTelefone"
          },
          "DDD": {
            "type": "string"
          },
          "Numero": {
            "type": "string"
          },
          "Ramal": {
            "type": "string"
          }
        }
      },
      "DTODadosAdvogado": {
        "title": "DTODadosAdvogado",
        "type": "object",
        "properties": {
          "Nome": {
            "type": "string"
          },
          "Escritorio": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "OAB": {
            "type": "string"
          },
          "Telefones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTOTelefoneAdvogado"
            }
          }
        }
      },
      "DTOEnvolvimento": {
        "title": "DTOEnvolvimento",
        "type": "object",
        "properties": {
          "ClienteProfissional": {
            "type": "string"
          },
          "Processo": {
            "type": "string"
          },
          "Participacao": {
            "type": "string"
          }
        }
      },
      "DTOParte": {
        "title": "DTOParte",
        "type": "object",
        "properties": {
          "IdParte": {
            "type": "integer",
            "description": "Se for menor ou igual a zero insere uma nova parte, senão, atualiza a parte de acordo com o identificador informado."
          },
          "Polo": {
            "$ref": "#/components/schemas/PoloLawOffice"
          },
          "TipoPessoa": {
            "$ref": "#/components/schemas/TipoPessoa"
          },
          "CPF": {
            "type": "string"
          },
          "CNPJ": {
            "type": "string"
          },
          "RG": {
            "type": "string"
          },
          "nomeParte": {
            "type": "string"
          },
          "Nome": {
            "type": "string"
          },
          "RazaoSocial": {
            "type": "string"
          },
          "NomeFantasia": {
            "type": "string"
          },
          "NomeContato": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "TipoEnvolvimento": {
            "type": "integer"
          },
          "PoloPrincipal": {
            "type": "boolean"
          },
          "Observacoes": {
            "type": "string"
          },
          "Endereco": {
            "$ref": "#/components/schemas/DTOEnderecoParte"
          },
          "Telefones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTOTelefoneParte"
            }
          },
          "Advogado": {
            "$ref": "#/components/schemas/DTODadosAdvogado"
          },
          "Envolvimento": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTOEnvolvimento"
            }
          },
          "NomeCliente": {
            "type": "string",
            "description": "Preenchido apenas na pesquisa de partes do caso"
          },
          "TituloCaso": {
            "type": "string",
            "description": "Preenchido apenas na pesquisa de partes do caso"
          },
          "NumeroInterno": {
            "type": "string",
            "description": "Preenchido apenas na pesquisa de partes do caso"
          },
          "NumeroExterno": {
            "type": "string",
            "description": "Preenchido apenas na pesquisa de partes do caso"
          }
        }
      },
      "MExclusaoItem": {
        "title": "MExclusaoItem",
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean",
            "description": "Indica se a operação foi bem sucedida",
            "example": false
          },
          "Resposta": {
            "type": "string",
            "description": "Resposta do serviço",
            "example": "Não é possível excluir o cliente."
          }
        }
      },
      "PartePapelAplicabilidade": {
        "type": "integer",
        "example": 1,
        "description": "1: Processo\n\n2: Contrato\n"
      },
      "Polo": {
        "type": "integer",
        "example": 1,
        "description": "1: Ativo\n\n2: Passivo\n\n3: Terceiro\n\n4: Nenhum\n\n5: Outro envolvido\n"
      },
      "DTOPartePapel": {
        "title": "DTOPartePapel",
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "example": 1
          },
          "Envolvimento": {
            "type": "string",
            "example": "Verificador do caso"
          }
        }
      }
    }
  }
}